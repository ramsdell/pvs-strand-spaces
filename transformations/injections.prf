(|injections|
 (|tmap?_TCC1| 0
  (|tmap?_TCC1-1| NIL 3622803417 ("" (SUBTYPE-TCC) NIL NIL)
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (^ CONST-DECL "finseq" |finite_sequences| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL))
   NIL))
 (|tmap?_TCC2| 0
  (|tmap?_TCC2-1| NIL 3622803417 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs|
     NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (^ CONST-DECL "finseq" |finite_sequences| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (|increasing_rew| FORMULA-DECL NIL |increasing| NIL)
    (|increasing?| CONST-DECL "bool" |increasing| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|setmax_TCC1| 0
  (|setmax_TCC1-1| NIL 3622800905 ("" (EXISTENCE-TCC) NIL NIL)
   ((|injective?| CONST-DECL "bool" |functions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|implant_TCC1| 0
  (|implant_TCC1-1| NIL 3622802587
   ("" (SKOLEM!)
    (("" (TYPEPRED "pas!1")
      (("" (EXPAND "role_assignment?")
        (("" (INST?) (("" (EXPAND "inst") (("" (SMASH) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|inst| CONST-DECL "bool" |roles| "../skeletons/"))
   NIL))
 (|implant_TCC2| 0
  (|implant_TCC2-1| NIL 3622802587
   ("" (SKOLEM!)
    (("" (TYPEPRED "pas!1")
      (("" (EXPAND "role_assignment?")
        (("" (INST?) (("" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|instance_at| DEF-DECL "lift[subst]" |traces| "../skeletons/"))
   NIL))
 (|implant_TCC3| 0
  (|implant_TCC3-1| NIL 3622802587 ("" (SKOLEM!) (("" (POSTPONE) NIL NIL)) NIL)
   NIL NIL))
 (|imported_goals_of?_TCC1| 0
  (|imported_goals_of?_TCC1-1| NIL 3621591211
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (DELETE -1)
        (("" (SKOLEM 1 ("zs" "zd"))
          (("" (FLATTEN)
            (("" (DELETE -1)
              (("" (TYPEPRED "pas!1")
                (("" (EXPAND "protocol_assignment?") (("" (INST?) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|imported_goals_of?_TCC2| 0
  (|imported_goals_of?_TCC2-1| NIL 3621591211
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (SKOLEM 1 ("zs" "zd"))
        (("" (FLATTEN)
          (("" (DELETE -)
            (("" (GRIND)
              (("" (TYPEPRED "pas!1")
                (("" (EXPAND "role_assignment?")
                  (("" (INST?) (("" (DELETE -2) (("" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|instance_at| DEF-DECL "lift[subst]" |traces| "../skeletons/")
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|imported_goals_of?_TCC3| 0
  (|imported_goals_of?_TCC3-1| NIL 3621591211 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../skeletons/")
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|prec?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|increasing_rew| FORMULA-DECL NIL |increasing| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|strand_increasing| TYPE-EQ-DECL NIL |injections| NIL)
    (|increasing?| CONST-DECL "bool" |increasing| NIL)
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|imported_goals_of?_TCC4| 0
  (|imported_goals_of?_TCC4-1| NIL 3621591211 ("" (SUBTYPE-TCC) NIL NIL)
   ((|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../skeletons/")
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|prec?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|increasing_rew| FORMULA-DECL NIL |increasing| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|strand_increasing| TYPE-EQ-DECL NIL |injections| NIL)
    (|increasing?| CONST-DECL "bool" |increasing| NIL)
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|imported_goals_of?_TCC5| 0
  (|imported_goals_of?_TCC5-1| NIL 3621940710
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (SKOLEM!)
        (("" (TYPEPRED "pas!1")
          (("" (DELETE -2 -3 -4)
            (("" (EXPAND "role_assignment?")
              (("" (INST?) (("" (TYPEPRED "i1!1") (("" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|instance_at| DEF-DECL "lift[subst]" |traces| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|imported_goals_of?_TCC6| 0
  (|imported_goals_of?_TCC6-1| NIL 3621940710
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (SKOLEM 1 ("nd" "ns"))
        (("" (FLATTEN)
          (("" (DELETE -)
            (("" (TYPEPRED "pas!1")
              (("" (EXPAND "protocol_assignment?") (("" (INST?) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|imported_goals_of?_TCC7| 0
  (|imported_goals_of?_TCC7-1| NIL 3622800905
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (SKOLEM!)
        (("" (FLATTEN)
          (("" (SPLIT)
            (("1" (POSTPONE) NIL NIL)
             ("2" (EXPAND "empty?")
              (("2" (INST -1 "0")
                (("2" (DELETE -1 -2)
                  (("2" (GRIND)
                    (("2" (DELETE -1) (("2" (POSTPONE) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL))
 (|imported_goals_of?_TCC8| 0
  (|imported_goals_of?_TCC8-1| NIL 3622801678
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (SKOLEM!)
        (("" (FLATTEN)
          (("" (SKOLEM!)
            (("" (FLATTEN)
              (("" (DELETE -1 -2)
                (("" (SMASH)
                  (("1" (GRIND) NIL NIL)
                   ("2"
                    (CASE
                        "subset?(set!1,{i: below[length(finseq_appl(bs!1`space)(zs1!1))]| i<length(finseq_appl(bs!1`space)(zs1!1))})")
                    (("1"
                      (LEMMA
                       "finite_subset[below[length(finseq_appl(bs!1`space)(zs1!1))]]")
                      (("1" (INST?)
                        (("1" (SMASH)
                          (("1" (EXPAND "is_finite")
                            (("1" (SKOLEM -2 ("n" "f"))
                              (("1" (INST 1 "n" "f")
                                (("1" (EXPAND "injective?")
                                  (("1" (SKOLEM 1 ("y" "z"))
                                    (("1" (INST -2 "y" "z") NIL NIL)) NIL))
                                  NIL)
                                 ("2" (SKOLEM 1 "x")
                                  (("2" (SMASH)
                                    (("1" (GRIND) NIL NIL)
                                     ("2" (GRIND) NIL NIL)
                                     ("3" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (DELETE 2)
                          (("2" (DELETE -)
                            (("2" (EXPAND "is_finite")
                              (("2"
                                (INST 1
                                 "length(finseq_appl[trace](bs!1`space)(zs1!1))"
                                 "id")
                                (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (DELETE -1 2)
                      (("2" (EXPAND "subset?")
                        (("2" (SKOLEM 1 "x") (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL) NIL NIL
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL))
 (|imported_goals_of?_TCC9| 0
  (|imported_goals_of?_TCC9-1| NIL 3622805126
   ("" (SKOLEM!) (("" (FLATTEN) (("" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL)))

