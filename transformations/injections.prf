(|injections|
 (|tmap?_TCC1| 0
  (|tmap?_TCC1-1| NIL 3622803417 ("" (SUBTYPE-TCC) NIL NIL)
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (^ CONST-DECL "finseq" |finite_sequences| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL))
   NIL))
 (|tmap?_TCC2| 0
  (|tmap?_TCC2-1| NIL 3622803417 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs|
     NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (^ CONST-DECL "finseq" |finite_sequences| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (|increasing_rew| FORMULA-DECL NIL |increasing| NIL)
    (|increasing?| CONST-DECL "bool" |increasing| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|strand_progress_mapping_TCC_A| 0
  (|strand_progress_mapping_TCC_A-1| NIL 3622900287
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (EXPAND "protocol_assignment?") (("" (INST?) NIL NIL)) NIL)) NIL))
    NIL)
   ((|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/"))
   SHOSTAK))
 (|strand_progress_mapping_TCC_B| 0
  (|strand_progress_mapping_TCC_B-1| NIL 3622900384
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (TYPEPRED "ra!1")
        (("" (EXPAND "role_assignment?")
          (("" (INST?) (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|strand_progress_height_TCC_A| 0
  (|strand_progress_height_TCC_A-1| NIL 3622900434
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (SKOLEM 1 "i")
        (("" (TYPEPRED "i")
          (("" (TYPEPRED "ra!1")
            (("" (EXPAND "role_assignment?")
              (("" (INST?) (("" (GRIND) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|instance_at| DEF-DECL "lift[subst]" |traces| "../skeletons/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/"))
   SHOSTAK))
 (|strand_progress_height_TCC_B_TCC1| 0
  (|strand_progress_height_TCC_B_TCC1-1| NIL 3622906138
   ("" (SKOLEM!)
    (("" (TYPEPRED "pas!1(zs!1)`trace") (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|all_acquired?| CONST-DECL "bool" |roles| "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|acquired_index?| CONST-DECL "bool" |traces| "../skeletons/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL))
 (|strand_progress_height_TCC_B_TCC2| 0
  (|strand_progress_height_TCC_B_TCC2-1| NIL 3622906138
   ("" (SKOLEM!)
    (("" (TYPEPRED "pas!1")
      (("" (LEMMA "strand_progress_mapping_TCC_A")
        (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand_progress_mapping_TCC_A| FORMULA-DECL NIL |injections| NIL))
   NIL))
 (|strand_progress_height_TCC_B_TCC3| 0
  (|strand_progress_height_TCC_B_TCC3-1| NIL 3622906138
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (LEMMA "strand_progress_height_TCC_A")
        (("" (TYPEPRED "pas!1")
          (("" (INST?) (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand_progress_height_TCC_A| FORMULA-DECL NIL |injections| NIL))
   NIL))
 (|strand_progress_height_TCC_B| 0
  (|strand_progress_height_TCC_B-1| NIL 3622906139
   ("" (SKOLEM!)
    (("" (SMASH)
      (("1" (EXPAND "empty?")
        (("1" (INST -2 "0") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2"
        (CASE
            "is_finite[below[finseq_appl(bs!1`space)(zs!1)`length]]({i: index[event](finseq_appl[trace](bs!1`space)(zs!1)) | true})")
        (("1"
          (LEMMA "finite_subset[below[finseq_appl(bs!1`space)(zs!1)`length]]")
          (("1" (INST? :WHERE 1)
            (("1" (INST? :WHERE -2)
              (("1" (SMASH) (("1" (DELETE - 2) (("1" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL)
             ("2" (DELETE - 2)
              (("2" (TYPEPRED "pas!1")
                (("2" (LEMMA "strand_progress_height_TCC_A")
                  (("2" (INST?) (("2" (INST?) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (DELETE -1 2)
          (("2" (EXPAND "is_finite")
            (("2"
              (INST 1 "length(finseq_appl[trace](bs!1`space)(zs!1))"
               "lambda(i: index[event](finseq_appl[trace](bs!1`space)(zs!1))): i")
              (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    NIL (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|finite_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|strand_progress_height_TCC_A| FORMULA-DECL NIL |injections| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/") NIL
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/") NIL
    (|strand_increasing| TYPE-EQ-DECL NIL |injections| NIL)
    (|inj| TYPE-EQ-DECL NIL |injections| NIL)
    (|tmap| TYPE-EQ-DECL NIL |injections| NIL)
    (|tmap?| CONST-DECL "bool" |injections| NIL)
    (|increasing?| CONST-DECL "bool" |increasing| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL))
   SHOSTAK))
 (|strand_progress_mapping_TCC1| 0
  (|strand_progress_mapping_TCC1-1| NIL 3622900286
   ("" (SKOLEM!)
    (("" (TYPEPRED "pas!1")
      (("" (LEMMA "strand_progress_mapping_TCC_B")
        (("" (INST?) (("" (INST?) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|strand_progress_mapping_TCC_B| FORMULA-DECL NIL |injections| NIL))
   NIL))
 (|strand_progress_mapping_TCC2| 0
  (|strand_progress_mapping_TCC2-1| NIL 3622900286
   ("" (SKOLEM!)
    (("" (TYPEPRED "pad!1")
      (("" (LEMMA "strand_progress_mapping_TCC_B")
        (("" (INST?) (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand_progress_mapping_TCC_B| FORMULA-DECL NIL |injections| NIL))
   NIL))
 (|strand_progress_mapping_TCC3| 0
  (|strand_progress_mapping_TCC3-1| NIL 3622900286
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (DELETE -)
        (("" (TYPEPRED "pad!1")
          (("" (LEMMA "strand_progress_mapping_TCC_B")
            (("" (INST?) (("" (INST?) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|originates_index?| CONST-DECL "bool" |traces| "../skeletons/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../skeletons/")
    (|non| CONST-DECL "bool" |strand_spaces| "../skeletons/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../skeletons/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) NIL NIL
    (|instance_at| DEF-DECL "lift[subst]" |traces| "../skeletons/")
    (|strand_progress_mapping_TCC_B| FORMULA-DECL NIL |injections| NIL))
   NIL))
 (|strand_progress_height_TCC1| 0
  (|strand_progress_height_TCC1-1| NIL 3622900286
   ("" (LEMMA "strand_progress_height_TCC_B")
    (("" (SKOLEM!) (("" (INST?) NIL NIL)) NIL)) NIL)
   ((|strand_progress_height_TCC_B| FORMULA-DECL NIL |injections| NIL)
    (|strand_increasing| TYPE-EQ-DECL NIL |injections| NIL)
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|inj| TYPE-EQ-DECL NIL |injections| NIL)
    (|tmap| TYPE-EQ-DECL NIL |injections| NIL)
    (|tmap?| CONST-DECL "bool" |injections| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|increasing?| CONST-DECL "bool" |increasing| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/"))
   NIL))
 (|node_mapping_TCC1| 0
  (|node_mapping_TCC1-1| NIL 3622900286
   ("" (SKOLEM!)
    (("" (TYPEPRED "pas!1")
      (("" (EXPAND "role_assignment?")
        (("" (INST?) (("" (TYPEPRED "n!1`2") (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|instance_at| DEF-DECL "lift[subst]" |traces| "../skeletons/"))
   NIL))
 (|node_mapping_TCC2| 0
  (|node_mapping_TCC2-1| NIL 3622900286
   ("" (SKOLEM!)
    (("" (TYPEPRED "pas!1")
      (("" (LEMMA "strand_progress_mapping_TCC_A")
        (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|strand_progress_mapping_TCC_A| FORMULA-DECL NIL |injections| NIL))
   NIL))
 (|unique_origination_TCC1| 0
  (|unique_origination_TCC1-1| NIL 3622900286
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (SKOLEM 1 "h")
        (("" (FLATTEN)
          (("" (SKOLEM 1 ("x" "n"))
            (("" (EXPAND "strand_progress_height")
              (("" (EXPAND "node_mapping")
                (("" (REPLACE -2)
                  (("" (DELETE -2)
                    (("" (SMASH)
                      (("" (INST?)
                        (("" (FLATTEN)
                          (("" (TYPEPRED "n`2")
                            ((""
                              (NAME "w"
                                    "maxset(length(finseq_appl(bs!1`space)(n`1)))
              ({i: index(finseq_appl(bs!1`space)(n`1)) |
                  f!1(pas!1(n`1))`2(i) <
                   length(finseq_appl(bd!1`space)(g!1(n`1)))})")
                              (("1" (REPLACE -1)
                                (("1" (CASE "w < n`2")
                                  (("1" (GRIND) NIL NIL)
                                   ("2"
                                    (CASE "f!1(pas!1(n`1))`2(w) <
       length(finseq_appl[trace](bd!1`space)(g!1(n`1)))")
                                    (("1" (CASE-REPLACE "n`2=w")
                                      (("1" (DELETE -2 -3 -4 -5)
                                        (("1" (CASE "n`2<w")
                                          (("1"
                                            (CASE
                                                "f!1(pas!1(n`1))`2(n`2) <f!1(pas!1(n`1))`2(w)")
                                            (("1" (SMASH) NIL NIL)
                                             ("2" (DELETE -2 2 3 4)
                                              (("2" (SMASH)
                                                (("2" (LEMMA "increasing_rew")
                                                  (("2"
                                                    (TYPEPRED
                                                     "f!1(pas!1(n`1))`2")
                                                    (("2"
                                                      (INST -3
                                                       "pas!1(n`1)`trace`length"
                                                       "f!1(pas!1(n`1))`1`trace`length"
                                                       "f!1(pas!1(n`1))`2"
                                                       "n`2" "w")
                                                      (("2" (SMASH) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (DELETE -2 -4 2 3)
                                      (("2" (EXPAND "maxset")
                                        (("2"
                                          (LEMMA
                                           "epsilon_ax[({i: index(finseq_appl(bs!1`space)(n`1)) |
                      f!1(pas!1(n`1))`2(i) <
                       length(finseq_appl(bd!1`space)(g!1(n`1)))})]")
                                          (("1"
                                            (INST -1 "lambda(x:
                  ({i: index(finseq_appl(bs!1`space)(n`1)) |
                      f!1(pas!1(n`1))`2(i) <
                       length(finseq_appl(bd!1`space)(g!1(n`1)))})):
        FORALL (y:
                  ({i: index(finseq_appl(bs!1`space)(n`1)) |
                      f!1(pas!1(n`1))`2(i) <
                       length(finseq_appl(bd!1`space)(g!1(n`1)))})):
          y <= x")
                                            (("1" (SMASH) NIL NIL)) NIL)
                                           ("2" (INST 1 "0") NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("3" (TYPEPRED "w")
                                      (("3" (DELETE - 2 3)
                                        (("3" (TYPEPRED "pas!1")
                                          (("3"
                                            (LEMMA
                                             "strand_progress_height_TCC_A")
                                            (("3" (INST?)
                                              (("3" (INST?)
                                                (("3" (SMASH)
                                                  (("3" (INST?) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (DELETE -1 -3 2)
                                (("2" (LEMMA "strand_progress_height_TCC_B")
                                  (("2" (INST?) (("2" (SMASH) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("3" (TYPEPRED "pas!1")
                                (("3" (LEMMA "strand_progress_height_TCC_A")
                                  (("3" (INST?)
                                    (("3" (INST?) (("3" (SMASH) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|node_mapping| CONST-DECL "[strand(bd`space), nat]" |injections| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_progress_height_TCC_B| FORMULA-DECL NIL |injections| NIL)
    (|increasing_rew| FORMULA-DECL NIL |increasing| NIL) NIL NIL NIL NIL NIL
    NIL NIL NIL (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|epsilon_ax| FORMULA-DECL NIL |epsilons| NIL)
    (|strand_progress_height_TCC_A| FORMULA-DECL NIL |injections| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|strand_increasing| TYPE-EQ-DECL NIL |injections| NIL)
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|inj| TYPE-EQ-DECL NIL |injections| NIL)
    (|tmap| TYPE-EQ-DECL NIL |injections| NIL)
    (|tmap?| CONST-DECL "bool" |injections| NIL)
    (|increasing?| CONST-DECL "bool" |increasing| NIL)
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|maxset| CONST-DECL "below[n]" |maxset| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|strand_progress_height| CONST-DECL "bool" |injections| NIL))
   NIL)))

