(|tc_props|
 (|tc_ordered| 0
  (|tc_ordered-1| NIL 3598895705
   ("" (SKOLEM 1 ("n" "f"))
    (("" (FLATTEN)
      (("" (EXPAND "bijective?")
        (("" (SKOLEM 1 ("x" "y"))
          (("" (SPLIT)
            (("1" (LEMMA "TC_induction[T]")
              (("1" (INST?)
                (("1" (INST -1 "lambda(x,y):f(x)<f(y)")
                  (("1" (SMASH)
                    (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)
                     ("2" (DELETE -1 2)
                      (("2" (SKOLEM 1 ("u" "v"))
                        (("2" (INST?)
                          (("2" (SMASH)
                            (("2" (SKOLEM -1 "z")
                              (("2" (FLATTEN) (("2" (SMASH) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (FLATTEN)
              (("2"
                (CASE "forall(j:nat, x,y): f(x)+1+j=f(y) implies TC(P)(x,y)")
                (("1" (INST -1 "f(y)-f(x)-1" "x" "y")
                  (("1" (SMASH) NIL NIL) ("2" (SMASH) NIL NIL)) NIL)
                 ("2" (DELETE -1 2)
                  (("2" (INDUCT "j")
                    (("1" (SKOLEM!)
                      (("1" (INST?)
                        (("1" (SMASH)
                          (("1" (EXPAND "TC") (("1" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (SKOLEM 1 "i")
                      (("2" (FLATTEN)
                        (("2" (SKOLEM 1 ("u" "v"))
                          (("2" (FLATTEN)
                            (("2" (SMASH)
                              (("2" (EXPAND "surjective?")
                                (("2" (EXPAND "TC" 1)
                                  (("2" (FLATTEN)
                                    (("2" (INST -4 "1+f(u)+i")
                                      (("2" (SKOLEM -4 "z")
                                        (("2" (INST 2 "z")
                                          (("2" (INST -1 "u" "z")
                                            (("2" (INST -5 "z" "v")
                                              (("2" (SMASH)
                                                (("2" (EXPAND "TC")
                                                  (("2" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|surjective?| CONST-DECL "bool" |functions| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|n| SKOLEM-CONST-DECL "nat" |tc_props| NIL)
    (|f| SKOLEM-CONST-DECL "[T -> below[n]]" |tc_props| NIL)
    (|y| SKOLEM-CONST-DECL "T" |tc_props| NIL)
    (|x| SKOLEM-CONST-DECL "T" |tc_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (TC INDUCTIVE-DECL "bool" |relations| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|TC_induction| FORMULA-DECL NIL |relations| NIL)
    (T FORMAL-TYPE-DECL NIL |tc_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (P FORMAL-CONST-DECL "pred[[T, T]]" |tc_props| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL))
   SHOSTAK))
 (|tc_strict_total| 0
  (|tc_strict_total-1| NIL 3598900252
   ("" (SKOLEM 1 ("n" "f"))
    (("" (FLATTEN)
      (("" (EXPAND "strict_total_order?")
        (("" (EXPAND "trichotomous?")
          (("" (EXPAND "strict_order?")
            (("" (SPLIT)
              (("1" (EXPAND "irreflexive?")
                (("1" (SKOLEM 1 "x")
                  (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (EXPAND "transitive?")
                (("2" (SKOLEM 1 ("x" "y" "z"))
                  (("2" (FLATTEN)
                    (("2" (EXPAND "TC" 1)
                      (("2" (FLATTEN)
                        (("2" (INST?) (("2" (SMASH) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("3" (SKOLEM 1 ("x" "y"))
                (("3" (INST-CP -2 "x" "y")
                  (("3" (INST-CP -2 "y" "x")
                    (("3" (SMASH)
                      (("3" (EXPAND "injective?")
                        (("3" (INST?) (("3" (SMASH) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|trichotomous?| CONST-DECL "bool" |orders| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (T FORMAL-TYPE-DECL NIL |tc_props| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (TC INDUCTIVE-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|strict_total_order?| CONST-DECL "bool" |orders| NIL))
   SHOSTAK)))

