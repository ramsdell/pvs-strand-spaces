(|unilateral|
 (|init_trace_TCC1| 0
  (|init_trace_TCC1-1| NIL 3621854306
   ("" (EXPAND "all_acquired?")
    (("" (SKOLEM 1 "x")
      (("" (FLATTEN)
        (("" (TYPEPRED "x") (("" (DELETE 1) (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|vari?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|vari| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|param?| CONST-DECL "bool" |traces| "../skeletons/")
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences| "../skeletons/")
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|send?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|send| ADT-CONSTRUCTOR-DECL "[mesg -> (send?)]" |traces| "../skeletons/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|key| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| "../skeletons/")
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg|
     "../skeletons/")
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|asymkey| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg|
     "../skeletons/")
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg|
     "../skeletons/")
    (|recv?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|recv| ADT-CONSTRUCTOR-DECL "[mesg -> (recv?)]" |traces| "../skeletons/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |free_alg| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|occurs?| DEF-DECL "boolean" |free_alg| "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|all_acquired?| CONST-DECL "bool" |roles| "../skeletons/"))
   NIL))
 (|init_role_TCC1| 0
  (|init_role_TCC1-1| NIL 3621854563 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|init_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|init_role_TCC2| 0
  (|init_role_TCC2-1| NIL 3621854563 ("" (SUBTYPE-TCC) NIL NIL)
   ((|no_assumptions_length| FORMULA-DECL NIL |roles| "../skeletons/")
    (|init_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|init_role_TCC3| 0
  (|init_role_TCC3-1| NIL 3621854563 ("" (SUBTYPE-TCC) NIL NIL)
   ((|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|init_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|init_role_TCC4| 0
  (|init_role_TCC4-1| NIL 3621854563
   ("" (EXPAND "role?")
    (("" (SPLIT)
      (("1" (LEMMA "no_rnon_assumptions")
        (("1" (INST?) (("1" (GRIND) NIL NIL)) NIL)) NIL)
       ("2" (EXPAND "all_uniq_orig?")
        (("2" (SKOLEM 1 "i")
          (("2" (CASE-REPLACE "i=0")
            (("1" (SKOLEM 1 "x")
              (("1" (TYPEPRED "x")
                (("1" (CASE-REPLACE "x=tx(0)")
                  (("1" (DELETE -3) (("1" (GRIND) NIL NIL)) NIL)
                   ("2" (DELETE 2) (("2" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SKOLEM 2 "x")
              (("2" (TYPEPRED "x")
                (("2" (DELETE 2)
                  (("2" (TYPEPRED "i") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|no_assumptions_length| FORMULA-DECL NIL |roles| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|all_acquired?| CONST-DECL "bool" |roles| "../skeletons/")
    (|init_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../skeletons/")
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences| "../skeletons/")
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|singleton?| CONST-DECL "bool" |sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|no_rnon_assumptions| FORMULA-DECL NIL |roles| "../skeletons/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|originates_index?| CONST-DECL "bool" |traces| "../skeletons/")
    (|carried_by?| DEF-DECL "bool" |free_alg| "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|all_uniq_orig?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/"))
   NIL))
 (|resp_trace_TCC1| 0
  (|resp_trace_TCC1-1| NIL 3621876331
   ("" (EXPAND "all_acquired?")
    (("" (SKOLEM 1 "x")
      (("" (FLATTEN)
        (("" (TYPEPRED "x") (("" (DELETE 1) (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|vari?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|vari| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|param?| CONST-DECL "bool" |traces| "../skeletons/")
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences| "../skeletons/")
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|recv?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|recv| ADT-CONSTRUCTOR-DECL "[mesg -> (recv?)]" |traces| "../skeletons/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|key| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| "../skeletons/")
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg|
     "../skeletons/")
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|asymkey| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg|
     "../skeletons/")
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg|
     "../skeletons/")
    (|send?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|send| ADT-CONSTRUCTOR-DECL "[mesg -> (send?)]" |traces| "../skeletons/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |free_alg| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|occurs?| DEF-DECL "boolean" |free_alg| "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|all_acquired?| CONST-DECL "bool" |roles| "../skeletons/"))
   NIL))
 (|enumerate_unilateral_prot| 0
  (|enumerate_unilateral_prot-1| NIL 3621876776
   ("" (SKOLEM 1 "r")
    (("" (EXPAND "unilateral_prot")
      (("" (EXPAND "add") (("" (EXPAND "member") (("" (SMASH) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|unilateral_prot| CONST-DECL "protocol" |unilateral| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL))
   SHOSTAK))
 (|init_role_0_TCC1| 0
  (|init_role_0_TCC1-1| NIL 3626044593 ("" (SUBTYPE-TCC) NIL NIL)
   ((|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|unilateral_prot| CONST-DECL "protocol" |unilateral| NIL)
    (|adversary_prot| CONST-DECL "protocol" |adversary| "../skeletons/")
    (|dec_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|dec_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|sep_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|pair_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|hash_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_data| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_text| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|resp_role| CONST-DECL "role" |unilateral| NIL)
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|resp_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|init_role| CONST-DECL "role" |unilateral| NIL)
    (|init_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|init_role_0_TCC2| 0
  (|init_role_0_TCC2-1| NIL 3626044593 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|init_role| CONST-DECL "role" |unilateral| NIL)
    (|init_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|init_role_1_TCC1| 0
  (|init_role_1_TCC1-1| NIL 3626044593 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|init_role| CONST-DECL "role" |unilateral| NIL)
    (|init_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|resp_role_0_TCC1| 0
  (|resp_role_0_TCC1-1| NIL 3626044593 ("" (SUBTYPE-TCC) NIL NIL)
   ((|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|unilateral_prot| CONST-DECL "protocol" |unilateral| NIL)
    (|adversary_prot| CONST-DECL "protocol" |adversary| "../skeletons/")
    (|dec_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|dec_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|sep_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|pair_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|hash_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_data| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_text| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|resp_role| CONST-DECL "role" |unilateral| NIL)
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|resp_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|init_role| CONST-DECL "role" |unilateral| NIL)
    (|init_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|resp_role_0_TCC2| 0
  (|resp_role_0_TCC2-1| NIL 3626044593 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|resp_role| CONST-DECL "role" |unilateral| NIL)
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|resp_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|resp_role_1_TCC1| 0
  (|resp_role_1_TCC1-1| NIL 3626044593 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|resp_role| CONST-DECL "role" |unilateral| NIL)
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|resp_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|init_param_tx_0_TCC1| 0
  (|init_param_tx_0_TCC1-1| NIL 3626041612
   ("" (SKOLEM 1 "b") (("" (EXPAND "vari?") (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|send?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|send| ADT-CONSTRUCTOR-DECL "[mesg -> (send?)]" |traces| "../skeletons/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|key| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| "../skeletons/")
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg|
     "../skeletons/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|asymkey| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg|
     "../skeletons/")
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg|
     "../skeletons/")
    (|recv?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|recv| ADT-CONSTRUCTOR-DECL "[mesg -> (recv?)]" |traces| "../skeletons/")
    (|subterm| ADT-DEF-DECL "boolean" |free_alg| "../skeletons/")
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|init_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../skeletons/")
    (|init_role| CONST-DECL "role" |unilateral| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|occurs?| DEF-DECL "boolean" |free_alg| "../skeletons/")
    (|param?| CONST-DECL "bool" |traces| "../skeletons/")
    (|vari?| CONST-DECL "bool" |free_alg| "../skeletons/"))
   NIL))
 (|init_param_asym_0_TCC1| 0
  (|init_param_asym_0_TCC1-1| NIL 3626041612
   ("" (SKOLEM!) (("" (EXPAND "vari?") (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|send?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|send| ADT-CONSTRUCTOR-DECL "[mesg -> (send?)]" |traces| "../skeletons/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|key| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| "../skeletons/")
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg|
     "../skeletons/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|asymkey| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg|
     "../skeletons/")
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg|
     "../skeletons/")
    (|recv?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|recv| ADT-CONSTRUCTOR-DECL "[mesg -> (recv?)]" |traces| "../skeletons/")
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|init_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../skeletons/")
    (|init_role| CONST-DECL "role" |unilateral| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|occurs?| DEF-DECL "boolean" |free_alg| "../skeletons/")
    (|param?| CONST-DECL "bool" |traces| "../skeletons/")
    (|vari?| CONST-DECL "bool" |free_alg| "../skeletons/"))
   NIL))
 (|resp_param_tx_0_TCC1| 0
  (|resp_param_tx_0_TCC1-1| NIL 3626041612
   ("" (SKOLEM!) (("" (EXPAND "vari?") (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|recv?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|recv| ADT-CONSTRUCTOR-DECL "[mesg -> (recv?)]" |traces| "../skeletons/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|key| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| "../skeletons/")
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg|
     "../skeletons/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|asymkey| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg|
     "../skeletons/")
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg|
     "../skeletons/")
    (|send?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|send| ADT-CONSTRUCTOR-DECL "[mesg -> (send?)]" |traces| "../skeletons/")
    (|subterm| ADT-DEF-DECL "boolean" |free_alg| "../skeletons/")
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|resp_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../skeletons/")
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|resp_role| CONST-DECL "role" |unilateral| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|occurs?| DEF-DECL "boolean" |free_alg| "../skeletons/")
    (|param?| CONST-DECL "bool" |traces| "../skeletons/")
    (|vari?| CONST-DECL "bool" |free_alg| "../skeletons/"))
   NIL))
 (|resp_param_asym_0_TCC1| 0
  (|resp_param_asym_0_TCC1-1| NIL 3626041612
   ("" (SKOLEM!) (("" (EXPAND "vari?") (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|recv?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|recv| ADT-CONSTRUCTOR-DECL "[mesg -> (recv?)]" |traces| "../skeletons/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|key| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| "../skeletons/")
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg|
     "../skeletons/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|asymkey| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg|
     "../skeletons/")
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg|
     "../skeletons/")
    (|send?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|send| ADT-CONSTRUCTOR-DECL "[mesg -> (send?)]" |traces| "../skeletons/")
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|resp_trace| CONST-DECL "role_trace" |unilateral| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../skeletons/")
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|resp_role| CONST-DECL "role" |unilateral| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|occurs?| DEF-DECL "boolean" |free_alg| "../skeletons/")
    (|param?| CONST-DECL "bool" |traces| "../skeletons/")
    (|vari?| CONST-DECL "bool" |free_alg| "../skeletons/"))
   NIL)))

