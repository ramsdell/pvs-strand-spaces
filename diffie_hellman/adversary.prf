(|adversary|
 (|IMP_basis_TCC1| 0
  (|IMP_basis_TCC1-1| NIL 3584291189
   ("" (LEMMA "associativity") (("" (PROPAX) NIL NIL)) NIL)
   ((|associativity| FORMULA-DECL NIL |adversary| NIL)) NIL))
 (|IMP_basis_TCC2| 0
  (|IMP_basis_TCC2-1| NIL 3584291189
   ("" (LEMMA "unit") (("" (PROPAX) NIL NIL)) NIL)
   ((|unit| FORMULA-DECL NIL |adversary| NIL)) NIL))
 (|IMP_basis_TCC3| 0
  (|IMP_basis_TCC3-1| NIL 3584291189
   ("" (LEMMA "inverse") (("" (PROPAX) NIL NIL)) NIL)
   ((|inverse| FORMULA-DECL NIL |adversary| NIL)) NIL))
 (|IMP_basis_TCC4| 0
  (|IMP_basis_TCC4-1| NIL 3584291189
   ("" (LEMMA "commutativity") (("" (PROPAX) NIL NIL)) NIL)
   ((|commutativity| FORMULA-DECL NIL |adversary| NIL)) NIL))
 (|IMP_init_alg_TCC1| 0
  (|IMP_init_alg_TCC1-1| NIL 3580142537
   ("" (LEMMA "free") (("" (PROPAX) NIL NIL)) NIL)
   ((|free| FORMULA-DECL NIL |adversary| NIL)) NIL))
 (|exponentiate_anno| 0
  (|exponentiate_anno-1| NIL 3580638940
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (FLATTEN)
                (("" (TYPEPRED "ri")
                  (("" (REPLACE -2)
                    (("" (DELETE -2)
                      (("" (EXPAND "exponentiate_role")
                        (("" (SKOLEM!)
                          (("" (REPLACE -1)
                            (("" (LEMMA "simple_inst_anno")
                              (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|simple_inst_anno| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|simple_inst| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|base?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|base| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|expn?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|expn| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|exponentiate_trace| CONST-DECL "trace" |adversary| NIL)
    (|exponentiate_role| CONST-DECL "bool" |adversary| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|inv_trace_TCC1| 0
  (|inv_trace_TCC1-1| NIL 3584228500
   ("" (SKOLEM 1 "x")
    (("" (FLATTEN) (("" (TYPEPRED "x") (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
   ((|expn| ADT-DEF-DECL "boolean" |init_alg| NIL)
    (|expn| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|expn?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|inv_anno| 0
  (|inv_anno-1| NIL 3584228630
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (TYPEPRED "ri")
                (("" (REPLACE -2)
                  (("" (DELETE -2)
                    (("" (EXPAND "inv_role")
                      (("" (SKOLEM!)
                        (("" (REPLACE -1)
                          (("" (DELETE -1)
                            (("" (FLATTEN)
                              (("" (LEMMA "simple_inst_anno")
                                (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|inv_role| CONST-DECL "bool" |adversary| NIL)
    (|inv_trace| CONST-DECL "trace" |adversary| NIL)
    (|expn| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|expn?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|simple_inst| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|simple_inst_anno| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|mul_trace_TCC1| 0
  (|mul_trace_TCC1-1| NIL 3584228500
   ("" (SKOLEM!) (("" (TYPEPRED "y!1") (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|expn?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|expn| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|expn| ADT-DEF-DECL "boolean" |init_alg| NIL))
   NIL))
 (|mul_anno| 0
  (|mul_anno-1| NIL 3584258248
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (FLATTEN)
                (("" (TYPEPRED "ri")
                  (("" (REPLACE -2)
                    (("" (DELETE -2)
                      (("" (EXPAND "mul_role")
                        (("" (SKOLEM!)
                          (("" (REPLACE -1)
                            (("" (DELETE -1)
                              (("" (LEMMA "simple_inst_anno")
                                (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|mul_trace| CONST-DECL "trace" |adversary| NIL)
    (|expn| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|expn?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|simple_inst| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|simple_inst_anno| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|mul_role| CONST-DECL "bool" |adversary| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|create_anno| 0
  (|create_anno-1| NIL 3579774669
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (FLATTEN)
                (("" (TYPEPRED "ri")
                  (("" (REPLACE -2)
                    (("" (DELETE -2)
                      (("" (EXPAND "create_role")
                        (("" (SKOLEM!)
                          (("" (REPLACE -1)
                            (("" (LEMMA "simple_inst_anno")
                              (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|simple_inst_anno| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|simple_inst| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|atom?| CONST-DECL "bool" |init_alg| NIL)
    (|atom| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|create_trace| CONST-DECL "trace" |adversary| NIL)
    (|create_role| CONST-DECL "bool" |adversary| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|tag_anno| 0
  (|tag_anno-1| NIL 3579862353
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (FLATTEN)
                (("" (TYPEPRED "ri")
                  (("" (REPLACE -2)
                    (("" (DELETE -2)
                      (("" (EXPAND "tag_role")
                        (("" (SKOLEM!)
                          (("" (REPLACE -1)
                            (("" (LEMMA "simple_inst_anno")
                              (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|simple_inst_anno| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|simple_inst| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|tag?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|tag| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|tag_trace| CONST-DECL "trace" |adversary| NIL)
    (|tag_role| CONST-DECL "bool" |adversary| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|hash_anno| 0
  (|hash_anno-1| NIL 3579862489
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (FLATTEN)
                (("" (TYPEPRED "ri")
                  (("" (REPLACE -2)
                    (("" (DELETE -2)
                      (("" (EXPAND "hash_role")
                        (("" (SKOLEM!)
                          (("" (REPLACE -1)
                            (("" (LEMMA "simple_inst_anno")
                              (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|simple_inst_anno| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|simple_inst| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|hash_trace| CONST-DECL "trace" |adversary| NIL)
    (|hash_role| CONST-DECL "bool" |adversary| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|pair_anno| 0
  (|pair_anno-1| NIL 3579862768
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (FLATTEN)
                (("" (TYPEPRED "ri")
                  (("" (REPLACE -2)
                    (("" (DELETE -2)
                      (("" (EXPAND "pair_role")
                        (("" (SKOLEM!)
                          (("" (REPLACE -1)
                            (("" (LEMMA "simple_inst_anno")
                              (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|simple_inst_anno| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|simple_inst| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|pair_trace| CONST-DECL "trace" |adversary| NIL)
    (|pair_role| CONST-DECL "bool" |adversary| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|sep_anno| 0
  (|sep_anno-1| NIL 3579862917
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (FLATTEN)
                (("" (TYPEPRED "ri")
                  (("" (REPLACE -2)
                    (("" (DELETE -2)
                      (("" (EXPAND "sep_role")
                        (("" (SKOLEM!)
                          (("" (REPLACE -1)
                            (("" (LEMMA "simple_inst_anno")
                              (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|simple_inst_anno| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|simple_inst| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|sep_trace| CONST-DECL "trace" |adversary| NIL)
    (|sep_role| CONST-DECL "bool" |adversary| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|enc_anno| 0
  (|enc_anno-1| NIL 3579863045
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (FLATTEN)
                (("" (TYPEPRED "ri")
                  (("" (REPLACE -2)
                    (("" (DELETE -2)
                      (("" (EXPAND "enc_role")
                        (("" (SKOLEM!)
                          (("" (REPLACE -1)
                            (("" (LEMMA "simple_inst_anno")
                              (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|simple_inst_anno| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|simple_inst| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|base?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|enc_trace| CONST-DECL "trace" |adversary| NIL)
    (|enc_role| CONST-DECL "bool" |adversary| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|dec_anno| 0
  (|dec_anno-1| NIL 3579863166
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (FLATTEN)
                (("" (TYPEPRED "ri")
                  (("" (REPLACE -2)
                    (("" (DELETE -2)
                      (("" (EXPAND "dec_role")
                        (("" (SKOLEM!)
                          (("" (REPLACE -1)
                            (("" (LEMMA "simple_inst_anno")
                              (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|simple_inst_anno| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|simple_inst| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|base?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|dec_trace| CONST-DECL "trace" |adversary| NIL)
    (|dec_role| CONST-DECL "bool" |adversary| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|enumerate_adversary_roles| 0
  (|enumerate_adversary_roles-1| NIL 3578085661
   ("" (SKOLEM!) (("" (EXPAND "adversary_roles") (("" (GRIND) NIL NIL)) NIL))
    NIL)
   ((|adversary_roles| CONST-DECL "protocol" |adversary| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL))
   SHOSTAK))
 (|adversary_anno| 0
  (|adversary_anno-1| NIL 3579863305
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (LEMMA "enumerate_adversary_roles")
        (("" (INST?)
          (("" (SMASH)
            (("1" (LEMMA "create_anno")
              (("1" (INST?)
                (("1" (SMASH)
                  (("1" (LEMMA "exponentiate_anno")
                    (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (LEMMA "tag_anno")
              (("2" (INST?)
                (("2" (SMASH)
                  (("2" (LEMMA "inv_anno")
                    (("2" (INST?) (("2" (SMASH) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("3" (LEMMA "hash_anno")
              (("3" (INST?)
                (("3" (SMASH)
                  (("3" (LEMMA "create_anno")
                    (("3" (INST?)
                      (("3" (SMASH)
                        (("3" (LEMMA "mul_anno")
                          (("3" (INST?) (("3" (SMASH) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("4" (LEMMA "pair_anno")
              (("4" (INST?)
                (("4" (SMASH)
                  (("4" (LEMMA "tag_anno")
                    (("4" (INST?)
                      (("4" (SMASH)
                        (("4" (LEMMA "inv_anno")
                          (("4" (INST?)
                            (("4" (SMASH)
                              (("4" (LEMMA "create_anno")
                                (("4" (INST?) (("4" (SMASH) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("5" (LEMMA "sep_anno")
              (("5" (INST?)
                (("5" (SMASH)
                  (("5" (LEMMA "hash_anno")
                    (("5" (INST?)
                      (("5" (SMASH)
                        (("5" (LEMMA "mul_anno")
                          (("5" (INST?)
                            (("5" (SMASH)
                              (("5" (LEMMA "tag_anno")
                                (("5" (INST?) (("5" (SMASH) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("6" (LEMMA "enc_anno")
              (("6" (INST?)
                (("6" (SMASH)
                  (("6" (LEMMA "pair_anno")
                    (("6" (INST?)
                      (("6" (SMASH)
                        (("6" (LEMMA "create_anno")
                          (("6" (INST?)
                            (("6" (SMASH)
                              (("6" (LEMMA "hash_anno")
                                (("6" (INST?) (("6" (SMASH) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("7" (LEMMA "dec_anno")
              (("7" (INST?)
                (("7" (SMASH)
                  (("7" (LEMMA "sep_anno")
                    (("7" (INST?)
                      (("7" (SMASH)
                        (("7" (LEMMA "tag_anno")
                          (("7" (INST?)
                            (("7" (SMASH)
                              (("7" (LEMMA "pair_anno")
                                (("7" (INST?) (("7" (SMASH) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("8" (LEMMA "enc_anno")
              (("8" (INST?)
                (("8" (SMASH)
                  (("8" (LEMMA "hash_anno")
                    (("8" (INST?)
                      (("8" (SMASH)
                        (("8" (LEMMA "sep_anno")
                          (("8" (INST?) (("8" (SMASH) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("9" (LEMMA "dec_anno")
              (("9" (INST?)
                (("9" (SMASH)
                  (("9" (LEMMA "pair_anno")
                    (("9" (INST?)
                      (("9" (SMASH)
                        (("9" (LEMMA "enc_anno")
                          (("9" (INST?) (("9" (SMASH) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("10" (LEMMA "sep_anno")
              (("10" (INST?)
                (("10" (SMASH)
                  (("10" (LEMMA "dec_anno")
                    (("10" (INST?) (("10" (SMASH) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|dec_anno| FORMULA-DECL NIL |adversary| NIL)
    (|enc_anno| FORMULA-DECL NIL |adversary| NIL)
    (|sep_anno| FORMULA-DECL NIL |adversary| NIL)
    (|pair_anno| FORMULA-DECL NIL |adversary| NIL)
    (|hash_anno| FORMULA-DECL NIL |adversary| NIL)
    (|mul_anno| FORMULA-DECL NIL |adversary| NIL)
    (|tag_anno| FORMULA-DECL NIL |adversary| NIL)
    (|inv_anno| FORMULA-DECL NIL |adversary| NIL)
    (|create_anno| FORMULA-DECL NIL |adversary| NIL)
    (|exponentiate_anno| FORMULA-DECL NIL |adversary| NIL)
    (|enumerate_adversary_roles| FORMULA-DECL NIL |adversary| NIL))
   SHOSTAK))
 (|adversary_strands_are_short| 0
  (|adversary_strands_are_short-1| NIL 3578127244
   ("" (SKOLEM!)
    (("" (TYPEPRED "r!1")
      (("" (LEMMA "enumerate_adversary_roles")
        (("" (INST?) (("" (FLATTEN) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|e| FORMAL-CONST-DECL "grp" |adversary| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |adversary| NIL)
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |adversary| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |adversary| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |adversary| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |adversary| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|protocol| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| NIL)
    (|dec_role| CONST-DECL "bool" |adversary| NIL)
    (|dec_trace| CONST-DECL "trace" |adversary| NIL)
    (|invk| CONST-DECL "key" |init_alg| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|enc_role| CONST-DECL "bool" |adversary| NIL)
    (|enc_trace| CONST-DECL "trace" |adversary| NIL)
    (|sep_role| CONST-DECL "bool" |adversary| NIL)
    (|sep_trace| CONST-DECL "trace" |adversary| NIL)
    (|pair_role| CONST-DECL "bool" |adversary| NIL)
    (|pair_trace| CONST-DECL "trace" |adversary| NIL)
    (|hash_role| CONST-DECL "bool" |adversary| NIL)
    (|hash_trace| CONST-DECL "trace" |adversary| NIL)
    (|tag?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|tag| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|tag_role| CONST-DECL "bool" |adversary| NIL)
    (|tag_trace| CONST-DECL "trace" |adversary| NIL)
    (|elem?| CONST-DECL "bool" |init_alg| NIL)
    (|atom?| CONST-DECL "bool" |init_alg| NIL)
    (|atom| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|create_role| CONST-DECL "bool" |adversary| NIL)
    (|create_trace| CONST-DECL "trace" |adversary| NIL)
    (|mul_role| CONST-DECL "bool" |adversary| NIL)
    (|mul_trace| CONST-DECL "trace" |adversary| NIL)
    (|inv_role| CONST-DECL "bool" |adversary| NIL)
    (|inv_trace| CONST-DECL "trace" |adversary| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|originates_index?| CONST-DECL "bool" |traces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|role_pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|base?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|base| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|expn?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|expn| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|exponentiate_role| CONST-DECL "bool" |adversary| NIL)
    (|simple_role_item| CONST-DECL "role_item" |roles| "../strand_spaces/")
    (|no_annotations| DEF-DECL "annotations" |roles| "../strand_spaces/")
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../strand_spaces/")
    (|exponentiate_trace| CONST-DECL "trace" |adversary| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|exp| CONST-DECL "base" |init_alg| NIL)
    (|enumerate_adversary_roles| FORMULA-DECL NIL |adversary| NIL))
   SHOSTAK)))

