(|cpsa|
 (|subterm_extend| 0
  (|subterm_extend-1| NIL 3591018439
   ("" (INDUCT "s0")
    (("1" (INDUCT "s1")
      (("1" (GRIND) NIL NIL)
       ("2" (SKOLEM!)
        (("2" (FLATTEN)
          (("2" (SKOLEM!)
            (("2" (EXPAND "subterm" 1)
              (("2" (FLATTEN)
                (("2" (SMASH)
                  (("1" (DECOMPOSE-EQUALITY -2)
                    (("1" (REPLACE -2 :DIR RL)
                      (("1" (EXPAND "subterm" 1) (("1" (PROPAX) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("2" (INST?) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKOLEM!)
      (("2" (FLATTEN)
        (("2" (INDUCT "s1" 1)
          (("1" (SKOLEM 1 "x")
            (("1" (FLATTEN)
              (("1" (EXPAND "subterm" -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL)
           ("2" (SKOLEM!)
            (("2" (FLATTEN)
              (("2" (SKOLEM 1 "x")
                (("2" (EXPAND "subterm" 1)
                  (("2" (SMASH)
                    (("1" (DECOMPOSE-EQUALITY -2)
                      (("1" (REPLACE -2 :DIR RL)
                        (("1" (EXPAND "subterm" 2) (("1" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (INST? -1) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |tpm| NIL)
    (|boot| ADT-CONSTRUCTOR-DECL "(boot?)" |tpm| NIL)
    (|st| ADT-ACCESSOR-DECL "[(extend?) -> state]" |tpm| NIL)
    (|m| ADT-ACCESSOR-DECL "[(extend?) -> mesg]" |tpm| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|state_induction| FORMULA-DECL NIL |tpm| NIL)
    (|extend| ADT-CONSTRUCTOR-DECL "[[mesg, state] -> (extend?)]" |tpm| NIL)
    (|extend?| ADT-RECOGNIZER-DECL "[state -> boolean]" |tpm| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |tpm| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|state| TYPE-DECL NIL |tpm| NIL))
   SHOSTAK))
 (|no_circularity_in_subterm| 0
  (|no_circularity_in_subterm-1| NIL 3591011412
   ("" (INDUCT "s")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM!)
      (("2" (FLATTEN)
        (("2" (SKOLEM 1 "x")
          (("2" (EXPAND "subterm" -2)
            (("2" (SMASH)
              (("1" (DECOMPOSE-EQUALITY -2)
                (("1" (LEMMA "no_circularity_in_extend")
                  (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (LEMMA "subterm_extend")
                (("2" (INST?)
                  (("2" (SMASH) (("2" (DELETE -1) (("2" (INST?) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|no_circularity_in_extend| FORMULA-DECL NIL |tpm| NIL)
    (|st| ADT-ACCESSOR-DECL "[(extend?) -> state]" |tpm| NIL)
    (|m| ADT-ACCESSOR-DECL "[(extend?) -> mesg]" |tpm| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|subterm_extend| FORMULA-DECL NIL |cpsa| NIL)
    (|state_induction| FORMULA-DECL NIL |tpm| NIL)
    (|extend| ADT-CONSTRUCTOR-DECL "[[mesg, state] -> (extend?)]" |tpm| NIL)
    (|extend?| ADT-RECOGNIZER-DECL "[state -> boolean]" |tpm| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |tpm| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|state| TYPE-DECL NIL |tpm| NIL))
   SHOSTAK))
 (|new_node| 0
  (|new_node-1| NIL 3591008342
   ("" (SKOLEM 1 ("n" "s" "p" "i5" "i7" "i8"))
    (("" (EXPAND "cpsa")
      (("" (FLATTEN)
        (("" (CASE-REPLACE "i7=i5")
          (("1" (DELETE +)
            (("1" (GRIND)
              (("1" (DECOMPOSE-EQUALITY -7)
                (("1" (DECOMPOSE-EQUALITY -1)
                  (("1" (SMASH) NIL NIL)
                   ("2" (EXPAND "tag") (("2" (PROPAX) NIL NIL)) NIL)
                   ("3" (EXPAND "tag") (("3" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (CASE "i7<i5")
            (("1" (DELETE 1 3)
              (("1" (LEMMA "prefix_boot_extend")
                (("1" (INST -1 "p" "n" "1+i7" "i5")
                  (("1" (REPLACE -5)
                    (("1" (REPLACE -7)
                      (("1" (REPLACE -9)
                        (("1" (REPLACE -6)
                          (("1" (REPLACE -8)
                            (("1" (SMASH)
                              (("1" (LEMMA "no_circularity_in_subterm")
                                (("1" (INST?) NIL NIL)) NIL)
                               ("2" (SKOLEM!)
                                (("2" (INST 1 "j!1") (("2" (SMASH) NIL NIL))
                                  NIL))
                                NIL)
                               ("3" (DELETE - 2) (("3" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (DELETE 3)
              (("2" (LEMMA "prefix_boot_extend")
                (("2" (INST -1 "p" "n" "1+i5" "i7")
                  (("2" (REPLACE -4)
                    (("2" (REPLACE -6)
                      (("2" (REPLACE -8)
                        (("2" (REPLACE -5)
                          (("2" (REPLACE -9)
                            (("2" (SMASH)
                              (("1" (LEMMA "no_circularity_in_subterm")
                                (("1" (INST?) NIL NIL)) NIL)
                               ("2" (SKOLEM!)
                                (("2" (INST 3 "j!1") (("2" (SMASH) NIL NIL))
                                  NIL))
                                NIL)
                               ("3" (DELETE - 2 3 4) (("3" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cpsa| CONST-DECL "bool" |cpsa| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|n| SHARED-ADT-ACCESSOR-DECL
     "[{x: mesg | key(x) OR text(x) OR data(x) OR tag(x)} -> nat]" |init_alg|
     "../strand_spaces/")
    (|tag| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|data| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|text| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|key| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|st| ADT-ACCESSOR-DECL "[(extend?) -> state]" |tpm| NIL)
    (|tg| ADT-CONSTRUCTOR-DECL "[nat -> (tag?)]" |init_alg|
     "../strand_spaces/")
    (|tag?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|extend| ADT-CONSTRUCTOR-DECL "[[mesg, state] -> (extend?)]" |tpm| NIL)
    (|m| ADT-ACCESSOR-DECL "[(extend?) -> mesg]" |tpm| NIL)
    (|extend?| ADT-RECOGNIZER-DECL "[state -> boolean]" |tpm| NIL)
    (|state| TYPE-DECL NIL |tpm| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|path?| CONST-DECL "bool" |tpm| NIL) (|path| TYPE-EQ-DECL NIL |tpm| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|no_circularity_in_subterm| FORMULA-DECL NIL |cpsa| NIL)
    (|has| DEF-DECL "bool" |tpm| NIL)
    (|prefix_boot_extend| FORMULA-DECL NIL |tpm| NIL)
    (< CONST-DECL "bool" |reals| NIL))
   SHOSTAK)))

