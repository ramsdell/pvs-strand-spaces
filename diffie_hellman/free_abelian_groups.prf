(|free_abelian_groups|
 (|IMP_basis_TCC1| 0
  (|IMP_basis_TCC1-1| NIL 3584806701
   ("" (LEMMA "associativity") (("" (PROPAX) NIL NIL)) NIL)
   ((|associativity| FORMULA-DECL NIL |free_abelian_groups| NIL)) NIL))
 (|IMP_basis_TCC2| 0
  (|IMP_basis_TCC2-1| NIL 3584806701
   ("" (LEMMA "unit") (("" (PROPAX) NIL NIL)) NIL)
   ((|unit| FORMULA-DECL NIL |free_abelian_groups| NIL)) NIL))
 (|IMP_basis_TCC3| 0
  (|IMP_basis_TCC3-1| NIL 3584806701
   ("" (LEMMA "inverse") (("" (PROPAX) NIL NIL)) NIL)
   ((|inverse| FORMULA-DECL NIL |free_abelian_groups| NIL)) NIL))
 (|IMP_basis_TCC4| 0
  (|IMP_basis_TCC4-1| NIL 3584806701
   ("" (LEMMA "commutativity") (("" (PROPAX) NIL NIL)) NIL)
   ((|commutativity| FORMULA-DECL NIL |free_abelian_groups| NIL)) NIL))
 (|representation_TCC1| 0
  (|representation_TCC1-1| NIL 3584806701
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (LEMMA "restrict_finite[bas,(r!1`s)]")
        (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |free_abelian_groups| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |free_abelian_groups| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |free_abelian_groups| NIL)
    (|restrict_finite| FORMULA-DECL NIL |restrict_set_props| NIL))
   NIL))
 (|representation_TCC2| 0
  (|representation_TCC2-1| NIL 3584806701
   ("" (SKOLEM 1 ("g" "r"))
    (("" (FLATTEN)
      (("" (LEMMA "associativity")
        (("" (LEMMA "commutativity") (("" (SMASH) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|commutativity| FORMULA-DECL NIL |free_abelian_groups| NIL)
    (|associativity| FORMULA-DECL NIL |free_abelian_groups| NIL))
   NIL))
 (|dotequals_TCC1| 0
  (|dotequals_TCC1-1| NIL 3584812377 ("" (SUBTYPE-TCC) NIL NIL)
   ((|representation| CONST-DECL "representation" |free_abelian_groups| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |free_abelian_groups| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |free_abelian_groups| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |free_abelian_groups| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL))
   NIL))
 (|dotequals_TCC2| 0
  (|dotequals_TCC2-1| NIL 3584812377 ("" (SUBTYPE-TCC) NIL NIL)
   ((|representation| CONST-DECL "representation" |free_abelian_groups| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |free_abelian_groups| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |free_abelian_groups| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |free_abelian_groups| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL))
   NIL))
 (|dotequals_TCC3| 0
  (|dotequals_TCC3-1| NIL 3584812377
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (SKOLEM!)
        (("" (FLATTEN)
          (("" (SKOLEM!)
            (("" (FLATTEN)
              (("" (SKOLEM!)
                (("" (FLATTEN)
                  (("" (LEMMA "restrict_finite[bas,(sxy!1)]")
                    (("" (INST?)
                      (("" (SMASH)
                        (("" (LEMMA "finite_intersection[bas]")
                          (("" (REPLACE -4)
                            (("" (DELETE 2)
                              (("" (DELETE -4)
                                (("" (INST?)
                                  (("1" (REPLACE -2)
                                    (("1" (DELETE - 2)
                                      (("1" (EXPAND "representation")
                                        (("1" (LEMMA "free")
                                          (("1" (EXPAND "is_basis")
                                            (("1" (INST?)
                                              (("1" (EXPAND "exists1")
                                                (("1" (FLATTEN)
                                                  (("1"
                                                    (LEMMA
                                                     "epsilon_ax[representation]")
                                                    (("1" (INST?)
                                                      (("1" (SMASH) NIL NIL)
                                                       ("2" (DELETE - 2)
                                                        (("2" (SKOLEM!)
                                                          (("2" (FLATTEN)
                                                            (("2"
                                                              (LEMMA
                                                               "associativity")
                                                              (("2"
                                                                (LEMMA
                                                                 "commutativity")
                                                                (("2" (SMASH)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (DELETE - 2)
                                                        (("3" (SKOLEM!)
                                                          (("3" (FLATTEN)
                                                            (("3"
                                                              (LEMMA "unit")
                                                              (("3" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("4" (DELETE - 2)
                                                        (("4" (SKOLEM!)
                                                          (("4" (FLATTEN)
                                                            (("4"
                                                              (LEMMA
                                                               "restrict_finite[bas,(r!1`s)]")
                                                              (("4" (SMASH)
                                                                (("4" (INST?)
                                                                  (("4" (SMASH)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (REPLACE -1)
                                    (("2" (DELETE - 2)
                                      (("2" (LEMMA "free")
                                        (("2" (EXPAND "is_basis")
                                          (("2" (EXPAND "representation")
                                            (("2" (INST?)
                                              (("2" (EXPAND "exists1")
                                                (("2" (FLATTEN)
                                                  (("2"
                                                    (LEMMA
                                                     "epsilon_ax[representation]")
                                                    (("2" (INST?)
                                                      (("1" (SMASH) NIL NIL)
                                                       ("2" (DELETE - 2)
                                                        (("2" (SKOLEM!)
                                                          (("2" (FLATTEN)
                                                            (("2"
                                                              (LEMMA
                                                               "associativity")
                                                              (("2"
                                                                (LEMMA
                                                                 "commutativity")
                                                                (("2" (SMASH)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (DELETE - 2)
                                                        (("3" (SKOLEM!)
                                                          (("3" (FLATTEN)
                                                            (("3"
                                                              (LEMMA "unit")
                                                              (("3" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("4" (DELETE - 2)
                                                        (("4" (SKOLEM!)
                                                          (("4" (FLATTEN)
                                                            (("4"
                                                              (LEMMA
                                                               "restrict_finite[bas,(r!1`s)]")
                                                              (("4" (INST?)
                                                                (("4" (SMASH)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_intersection| FORMULA-DECL NIL |finite_sets| NIL)
    (|ry!1| SKOLEM-CONST-DECL "[# s: setof[bas], f: [(s) -> nzint] #]"
     |free_abelian_groups| NIL)
    (|rx!1| SKOLEM-CONST-DECL "[# s: setof[bas], f: [(s) -> nzint] #]"
     |free_abelian_groups| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|free| FORMULA-DECL NIL |free_abelian_groups| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| "finite_sets/")
    (|inv| FORMAL-CONST-DECL "[grp -> grp]" |free_abelian_groups| NIL)
    (|project| CONST-DECL "grp" |basis| NIL)
    (|commutative?| CONST-DECL "bool" |operator_defs| NIL)
    (|associative?| CONST-DECL "bool" |operator_defs| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|e| FORMAL-CONST-DECL "grp" |free_abelian_groups| NIL)
    (O FORMAL-CONST-DECL "[grp, grp -> grp]" |free_abelian_groups| NIL)
    (|identity?| CONST-DECL "bool" |operator_defs| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|associativity| FORMULA-DECL NIL |free_abelian_groups| NIL)
    (|commutativity| FORMULA-DECL NIL |free_abelian_groups| NIL)
    (|unit| FORMULA-DECL NIL |free_abelian_groups| NIL)
    (|epsilon_ax| FORMULA-DECL NIL |epsilons| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|is_basis| CONST-DECL "bool" |basis| NIL)
    (|representation| CONST-DECL "representation" |free_abelian_groups| NIL)
    (|mult_divides2| APPLICATION-JUDGEMENT "(divides(m))" |divides| NIL)
    (|mult_divides1| APPLICATION-JUDGEMENT "(divides(n))" |divides| NIL)
    (|nzint_times_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bas| FORMAL-SUBTYPE-DECL NIL |free_abelian_groups| NIL)
    (|bas_pred| CONST-DECL "[grp -> boolean]" |free_abelian_groups| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|grp| FORMAL-TYPE-DECL NIL |free_abelian_groups| NIL)
    (|restrict_finite| FORMULA-DECL NIL |restrict_set_props| NIL))
   NIL))
 (|dotequals_TCC4| 0
  (|dotequals_TCC4-1| NIL 3584812377 ("" (ASSUMING-TCC) NIL NIL)
   ((|identity?| CONST-DECL "bool" |operator_defs| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|representation| CONST-DECL "representation" |free_abelian_groups| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL))
   NIL))
 (|dotequals_TCC5| 0
  (|dotequals_TCC5-1| NIL 3584812377 ("" (ASSUMING-TCC) NIL NIL)
   ((|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|commutative?| CONST-DECL "bool" |operator_defs| NIL)
    (|associative?| CONST-DECL "bool" |operator_defs| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|representation| CONST-DECL "representation" |free_abelian_groups| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL))
   NIL)))

