(|state|
 (|has_key_unique_address| 0
  (|has_key_unique_address-1| NIL 3610784799
   ("" (SKOLEM 1 ("st" "k" "a0" "a1"))
    (("" (FLATTEN)
      (("" (GRIND)
        (("" (DECOMPOSE-EQUALITY -2)
          (("1" (EXPAND "key") (("1" (PROPAX) NIL NIL)) NIL)
           ("2" (EXPAND "key") (("2" (PROPAX) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|key| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|text| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|data| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|tag| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|n| SHARED-ADT-ACCESSOR-DECL
     "[{x: mesg | key(x) OR text(x) OR data(x) OR tag(x)} -> nat]" |init_alg|
     "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |init_alg|
     "../strand_spaces/")
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|attr| TYPE-DECL NIL |state| NIL) (|state| TYPE-EQ-DECL NIL |state| NIL)
    (|addr| TYPE-EQ-DECL NIL |state| NIL) (|key| CONST-DECL "skey" |state| NIL)
    (|has_key?| CONST-DECL "bool" |state| NIL))
   SHOSTAK))
 (|has_key_epsilon_TCC1| 0
  (|has_key_epsilon_TCC1-1| NIL 3610819968 ("" (EXISTENCE-TCC) NIL NIL)
   ((|has_key?| CONST-DECL "bool" |state| NIL)
    (|key| CONST-DECL "skey" |state| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|addr| TYPE-EQ-DECL NIL |state| NIL)
    (|state| TYPE-EQ-DECL NIL |state| NIL) (|attr| TYPE-DECL NIL |state| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|has_key_epsilon| 0
  (|has_key_epsilon-1| NIL 3610819975
   ("" (SKOLEM 1 ("st" "k" "a"))
    (("" (LEMMA "epsilon_ax[addr(st)]")
      (("1" (INST?)
        (("1" (SMASH)
          (("1" (LEMMA "has_key_unique_address")
            (("1" (INST -1 "st" "k" "a" "epsilon(has_key?(st, k))")
              (("1" (SMASH) NIL NIL) ("2" (INST 1 "a") NIL NIL)) NIL))
            NIL)
           ("2" (INST 1 "a") NIL NIL))
          NIL))
        NIL)
       ("2" (INST 1 "a") NIL NIL))
      NIL))
    NIL)
   ((|epsilon_ax| FORMULA-DECL NIL |epsilons| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|attr| TYPE-DECL NIL |state| NIL) (|state| TYPE-EQ-DECL NIL |state| NIL)
    (|addr| TYPE-EQ-DECL NIL |state| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|epsilon| CONST-DECL "T" |epsilons| NIL)
    (|st| SKOLEM-CONST-DECL "state" |state| NIL)
    (|has_key_unique_address| FORMULA-DECL NIL |state| NIL)
    (|has_key?| CONST-DECL "bool" |state| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL))
   SHOSTAK))
 (|encode_keys_TCC1| 0
  (|encode_keys_TCC1-1| NIL 3608887945
   ("" (LEMMA "wf_nat") (("" (GRIND) NIL NIL)) NIL)
   ((|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL))
   NIL))
 (|encode_keys_TCC2| 0
  (|encode_keys_TCC2-1| NIL 3608887945 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |nat_types| NIL)
    (|state| TYPE-EQ-DECL NIL |state| NIL) (|attr| TYPE-DECL NIL |state| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|encode_keys_TCC3| 0
  (|encode_keys_TCC3-1| NIL 3608887945 ("" (TERMINATION-TCC) NIL NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |nat_types| NIL)
    (|state| TYPE-EQ-DECL NIL |state| NIL) (|attr| TYPE-DECL NIL |state| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|encode_keys_TCC4| 0
  (|encode_keys_TCC4-1| NIL 3610580426 ("" (TERMINATION-TCC) NIL NIL)
   ((|restrict| CONST-DECL "R" |restrict| NIL)) NIL))
 (|encode_TCC1| 0
  (|encode_TCC1-1| NIL 3610580426 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|sticky_attr_trans_TCC1| 0
  (|sticky_attr_trans_TCC1-1| NIL 3610663174 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL)
    (|addr| TYPE-EQ-DECL NIL |state| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|path| TYPE-EQ-DECL NIL |paths| "../transitions/")
    (|path?| CONST-DECL "bool" |paths| "../transitions/")
    (|trans| CONST-DECL "bool" |state| NIL)
    (|init?| CONST-DECL "setof[state]" |state| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |state| NIL) (|attr| TYPE-DECL NIL |state| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sticky_attr_trans| 0
  (|sticky_attr_trans-1| NIL 3610661874
   ("" (SKOLEM 1 ("p" "i" "a" "r"))
    (("" (FLATTEN)
      (("" (TYPEPRED "p")
        (("" (EXPAND "path?")
          (("" (FLATTEN)
            (("" (DELETE -1)
              (("" (INST?)
                (("" (EXPAND "trans")
                  (("" (SMASH)
                    (("1" (GRIND) NIL NIL)
                     ("2" (SKOLEM -1 "a0")
                      (("2" (CASE-REPLACE "a0=a")
                        (("1" (DELETE -1) (("1" (GRIND) NIL NIL)) NIL)
                         ("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|addr| TYPE-EQ-DECL NIL |state| NIL) (< CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|path| TYPE-EQ-DECL NIL |paths| "../transitions/")
    (|path?| CONST-DECL "bool" |paths| "../transitions/")
    (|trans| CONST-DECL "bool" |state| NIL)
    (|init?| CONST-DECL "setof[state]" |state| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |state| NIL) (|attr| TYPE-DECL NIL |state| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|state_length_nondecreasing| 0
  (|state_length_nondecreasing-1| NIL 3610610525
   ("" (SKOLEM 1 ("p" "i" "j"))
    (("" (FLATTEN)
      (("" (NAME "n" "j-i")
        (("" (CASE-REPLACE "j=n+i")
          (("1" (DELETE -1 -2)
            (("1" (GENERALIZE "n" "n" "nat")
              (("1" (SMASH) NIL NIL)
               ("2" (INDUCT "n")
                (("1" (SMASH) NIL NIL)
                 ("2" (SKOLEM 1 "k")
                  (("2" (FLATTEN)
                    (("2" (SMASH)
                      (("2" (CASE "length(p(i + k)) <= length(p(1 + i + k))")
                        (("1" (GRIND) NIL NIL)
                         ("2" (DELETE -1 -2 2)
                          (("2" (TYPEPRED "p")
                            (("2" (EXPAND "path?")
                              (("2" (FLATTEN)
                                (("2" (DELETE -1)
                                  (("2" (INST?) (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("3" (SMASH) NIL NIL))
              NIL))
            NIL)
           ("2" (SMASH) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|n| SKOLEM-CONST-DECL "int" |state| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|attr| TYPE-DECL NIL |state| NIL) (|state| TYPE-EQ-DECL NIL |state| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|init?| CONST-DECL "setof[state]" |state| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|path?| CONST-DECL "bool" |paths| "../transitions/")
    (|path| TYPE-EQ-DECL NIL |paths| "../transitions/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   SHOSTAK))
 (|sticky_attr_TCC1| 0
  (|sticky_attr_TCC1-1| NIL 3610660930
   ("" (SKOLEM 1 ("p" "i" "j" "a" "r"))
    (("" (LEMMA "state_length_nondecreasing")
      (("" (INST -1 "p" "i" "j") (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|state_length_nondecreasing| FORMULA-DECL NIL |state| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|path| TYPE-EQ-DECL NIL |paths| "../transitions/")
    (|path?| CONST-DECL "bool" |paths| "../transitions/")
    (|trans| CONST-DECL "bool" |state| NIL)
    (|init?| CONST-DECL "setof[state]" |state| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |state| NIL) (|attr| TYPE-DECL NIL |state| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL))
 (|sticky_attr| 0
  (|sticky_attr-1| NIL 3610660931
   ("" (SKOLEM 1 ("p" "i" "j" "a" "r"))
    (("" (FLATTEN)
      (("" (NAME "n" "j-i")
        (("" (CASE-REPLACE "j=n+i")
          (("1" (DELETE -1 -2)
            (("1" (GENERALIZE "n" "n" "nat")
              (("1" (SMASH) NIL NIL)
               ("2" (INDUCT "n")
                (("1" (SMASH) NIL NIL)
                 ("2" (SKOLEM 1 "k")
                  (("2" (FLATTEN)
                    (("2" (SMASH)
                      (("2" (DELETE -1)
                        (("2" (LEMMA "sticky_attr_trans")
                          (("2" (INST -1 "p" "i+k" "a" "r")
                            (("2" (SMASH) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3" (DELETE -1 -2 2 3)
                  (("3" (SKOLEM 1 "k")
                    (("3" (LEMMA "state_length_nondecreasing")
                      (("3" (INST -1 "p" "i" "k+i") (("3" (SMASH) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("3" (DELETE 2)
                (("3" (SKOLEM 1 "k")
                  (("3" (FLATTEN)
                    (("3" (LEMMA "state_length_nondecreasing")
                      (("3" (INST -1 "p" "i" "k+i") (("3" (SMASH) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("4" (SMASH) NIL NIL))
              NIL))
            NIL)
           ("2" (SMASH) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|n| SKOLEM-CONST-DECL "int" |state| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (|attr| TYPE-DECL NIL |state| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|state| TYPE-EQ-DECL NIL |state| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|init?| CONST-DECL "setof[state]" |state| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|path?| CONST-DECL "bool" |paths| "../transitions/")
    (|path| TYPE-EQ-DECL NIL |paths| "../transitions/")
    (|addr| TYPE-EQ-DECL NIL |state| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|init_attr?| ADT-RECOGNIZER-DECL "[attr -> boolean]" |state| NIL)
    (|init_attr| ADT-CONSTRUCTOR-DECL "(init_attr?)" |state| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|state_length_nondecreasing| FORMULA-DECL NIL |state| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|sticky_attr_trans| FORMULA-DECL NIL |state| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|a| SKOLEM-CONST-DECL "addr(p(i))" |state| NIL)
    (|i| SKOLEM-CONST-DECL "nat" |state| NIL)
    (|p| SKOLEM-CONST-DECL "path[state, init?, trans]" |state| NIL)
    (|r| SKOLEM-CONST-DECL "attr" |state| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   SHOSTAK)))

