(|annotated_roles|
 (|buyer_trace_TCC1| 0
  (|buyer_trace_TCC1-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|buyer_trace_TCC2| 0
  (|buyer_trace_TCC2-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|buyer_runique_TCC1| 0
  (|buyer_runique_TCC1-1| NIL 3604397622 ("" (SUBTYPE-TCC) NIL NIL)
   ((|atom?| CONST-DECL "bool" |init_alg| "../strand_spaces/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|singleton?| CONST-DECL "bool" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|atom| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|buyer_role_item_TCC1| 0
  (|buyer_role_item_TCC1-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|buyer_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|buy| CONST-DECL "tag" |annotated_roles| NIL))
   NIL))
 (|buyer_role_item_TCC2| 0
  (|buyer_role_item_TCC2-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|no_annotations_length| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |protocols_and_state| "../state_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|buyer_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|buy| CONST-DECL "tag" |annotated_roles| NIL))
   NIL))
 (|buyer_role_item_TCC3| 0
  (|buyer_role_item_TCC3-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|no_assumptions_length| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |protocols_and_state| "../state_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|buyer_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|buy| CONST-DECL "tag" |annotated_roles| NIL))
   NIL))
 (|buyer_role_item_TCC4| 0
  (|buyer_role_item_TCC4-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|buyer_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|buyer_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|buyer_anno| 0
  (|buyer_anno-1| NIL 3582845049
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (TYPEPRED "ri")
                (("" (REPLACE -2)
                  (("" (DELETE -2)
                    (("" (FLATTEN)
                      (("" (EXPAND "buyer_role")
                        (("" (SKOLEM! -1)
                          (("" (REPLACE -1)
                            (("" (DELETE -1)
                              (("" (CASE "n`2=0 or n`2=1 or n`2=2")
                                (("1" (DELETE -2) (("1" (GRIND) NIL NIL)) NIL)
                                 ("2" (DELETE -2)
                                  (("2" (TYPEPRED "n`2")
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|originates_index?| CONST-DECL "bool" |traces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|buyer_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|no_annotations| DEF-DECL "annotations" |roles| "../strand_spaces/")
    (|buyer_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../strand_spaces/")
    (|buyer_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|buyer_role| CONST-DECL "bool" |annotated_roles| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|anno| TYPE-EQ-DECL NIL |protocols_and_state| "../state_spaces/")
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|encode_injective| 0
  (|encode_injective-1| NIL 3586185242
   ("" (SKOLEM!)
    (("" (EXPAND "encode")
      (("" (GRIND)
        (("" (DECOMPOSE-EQUALITY -1)
          (("1" (EXPAND "tag") (("1" (PROPAX) NIL NIL)) NIL)
           ("2" (EXPAND "tag") (("2" (PROPAX) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|key| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|text| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|data| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|tag| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|n| SHARED-ADT-ACCESSOR-DECL
     "[{x: mesg | key(x) OR text(x) OR data(x) OR tag(x)} -> nat]" |init_alg|
     "../strand_spaces/")
    (|tag?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|tg| ADT-CONSTRUCTOR-DECL "[nat -> (tag?)]" |init_alg|
     "../strand_spaces/")
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL))
   SHOSTAK))
 (|cashier_trace_TCC1| 0
  (|cashier_trace_TCC1-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL))
   NIL))
 (|cashier_rnon_TCC1| 0
  (|cashier_rnon_TCC1-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/"))
   NIL))
 (|cashier_runique_TCC1| 0
  (|cashier_runique_TCC1-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/"))
   NIL))
 (|cashier_annotations_TCC1| 0
  (|cashier_annotations_TCC1-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|cashier_annotations_TCC2| 0
  (|cashier_annotations_TCC2-1| NIL 3586697495 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|cashier_annotations_TCC3| 0
  (|cashier_annotations_TCC3-1| NIL 3586697495 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|cashier_annotations_TCC4| 0
  (|cashier_annotations_TCC4-1| NIL 3587203262 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|cashier_annotations_TCC5| 0
  (|cashier_annotations_TCC5-1| NIL 3587203262 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|cashier_annotations_TCC6| 0
  (|cashier_annotations_TCC6-1| NIL 3587203262 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|cashier_annotations_TCC7| 0
  (|cashier_annotations_TCC7-1| NIL 3587203262 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL))
   NIL))
 (|cashier_role_item_TCC1| 0
  (|cashier_role_item_TCC1-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|cashier_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/"))
   NIL))
 (|cashier_role_item_TCC2| 0
  (|cashier_role_item_TCC2-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|cashier_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/"))
   NIL))
 (|cashier_role_item_TCC3| 0
  (|cashier_role_item_TCC3-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|cashier_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/"))
   NIL))
 (|cashier_anno| 0
  (|cashier_anno-1| NIL 3582845237
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (SMASH)
      (("1" (TYPEPRED "ra")
        (("1" (EXPAND "role_assignment?")
          (("1" (INST -1 "n`1")
            (("1" (SKOLEM -1 "ri")
              (("1" (TYPEPRED "ri")
                (("1" (REPLACE -3)
                  (("1" (DELETE -3)
                    (("1" (EXPAND "cashier_role")
                      (("1" (SKOLEM!)
                        (("1" (EXPAND "annotations")
                          (("1" (INST?)
                            (("1" (SMASH)
                              (("1" (REPLACE -1)
                                (("1" (DELETE -)
                                  (("1" (GRIND)
                                    (("1" (DECOMPOSE-EQUALITY)
                                      (("1" (DECOMPOSE-EQUALITY)
                                        (("1" (SMASH)
                                          (("1" (DECOMPOSE-EQUALITY -2)
                                            (("1" (EXPAND "tag")
                                              (("1" (PROPAX) NIL NIL)) NIL)
                                             ("2" (EXPAND "tag")
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL)
                                           ("2" (DECOMPOSE-EQUALITY -1)
                                            (("1" (EXPAND "tag")
                                              (("1" (PROPAX) NIL NIL)) NIL)
                                             ("2" (EXPAND "tag")
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (EXPAND "anno_node?")
        (("2" (SKOLEM!)
          (("2" (EXPAND "annotations")
            (("2" (SKOLEM -2 "ri")
              (("2" (TYPEPRED "ri")
                (("2" (REPLACE -2)
                  (("2" (DELETE -2)
                    (("2" (EXPAND "cashier_role")
                      (("2" (SKOLEM!)
                        (("2" (REPLACE -1)
                          (("2" (DELETE -1)
                            (("2" (CASE "n`2=0 or n`2=1 or n`2=2 or n`2=4")
                              (("1" (GRIND) NIL NIL)
                               ("2" (FLATTEN)
                                (("2" (DELETE -2)
                                  (("2" (TYPEPRED "n`2")
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cashier_role| CONST-DECL "bool" |annotated_roles| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|tg| ADT-CONSTRUCTOR-DECL "[nat -> (tag?)]" |init_alg|
     "../strand_spaces/")
    (|tag?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|up| ADT-CONSTRUCTOR-DECL "[T -> (up?)]" |lift_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|lift_up_extensionality| FORMULA-DECL NIL |lift_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|key| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|text| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|data| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|tag| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|n| SHARED-ADT-ACCESSOR-DECL
     "[{x: mesg | key(x) OR text(x) OR data(x) OR tag(x)} -> nat]" |init_alg|
     "../strand_spaces/")
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|cashier_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|cashier_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|cashier_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|cashier_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|anno| TYPE-EQ-DECL NIL |protocols_and_state| "../state_spaces/")
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_index?| CONST-DECL "bool" |traces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|new_card_rnon_TCC1| 0
  (|new_card_rnon_TCC1-1| NIL 3604397622 ("" (SUBTYPE-TCC) NIL NIL)
   ((|atom?| CONST-DECL "bool" |init_alg| "../strand_spaces/")
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|singleton?| CONST-DECL "bool" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|atom| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|new_card_annotations_TCC1| 0
  (|new_card_annotations_TCC1-1| NIL 3586696028 ("" (SUBTYPE-TCC) NIL NIL)
   ((|new_card_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|new_card| CONST-DECL "tag" |annotated_roles| NIL))
   NIL))
 (|new_card_annotations_TCC2| 0
  (|new_card_annotations_TCC2-1| NIL 3587203262 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|new_card_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|new_card| CONST-DECL "tag" |annotated_roles| NIL))
   NIL))
 (|new_card_annotations_TCC3| 0
  (|new_card_annotations_TCC3-1| NIL 3587203262 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|new_card_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|new_card| CONST-DECL "tag" |annotated_roles| NIL))
   NIL))
 (|new_card_role_item_TCC1| 0
  (|new_card_role_item_TCC1-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|new_card_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|new_card_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|new_card| CONST-DECL "tag" |annotated_roles| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|new_card_role_item_TCC2| 0
  (|new_card_role_item_TCC2-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|new_card_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|new_card_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|new_card| CONST-DECL "tag" |annotated_roles| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|new_card_role_item_TCC3| 0
  (|new_card_role_item_TCC3-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|new_card_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|new_card| CONST-DECL "tag" |annotated_roles| NIL))
   NIL))
 (|new_card_role_item_TCC4| 0
  (|new_card_role_item_TCC4-1| NIL 3582811549 ("" (SUBTYPE-TCC) NIL NIL)
   ((|no_assumptions_length| FORMULA-DECL NIL |roles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |protocols_and_state| "../state_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|new_card_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|new_card| CONST-DECL "tag" |annotated_roles| NIL))
   NIL))
 (|new_card_anno| 0
  (|new_card_anno-1| NIL 3582844355
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (TYPEPRED "ra")
            (("1" (EXPAND "role_assignment?")
              (("1" (INST -1 "n`1")
                (("1" (SKOLEM -1 "ri")
                  (("1" (TYPEPRED "ri")
                    (("1" (REPLACE -4)
                      (("1" (DELETE -4)
                        (("1" (EXPAND "new_card_role")
                          (("1" (SKOLEM!)
                            (("1" (EXPAND "annotations")
                              (("1" (INST?)
                                (("1" (SMASH)
                                  (("1" (REPLACE -1)
                                    (("1" (REPLACE -3)
                                      (("1" (DELETE -)
                                        (("1" (GRIND)
                                          (("1" (DECOMPOSE-EQUALITY)
                                            (("1" (DECOMPOSE-EQUALITY)
                                              (("1" (GRIND)
                                                (("1" (DECOMPOSE-EQUALITY)
                                                  (("1" (EXPAND "tag")
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL)
                                                   ("2" (EXPAND "tag")
                                                    (("2" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (EXPAND "anno_node?")
            (("2" (SKOLEM!)
              (("2" (EXPAND "annotations")
                (("2" (SKOLEM -1 "ri")
                  (("2" (FLATTEN)
                    (("2" (TYPEPRED "ri")
                      (("2" (REPLACE -4)
                        (("2" (EXPAND "new_card_role")
                          (("2" (SKOLEM!)
                            (("2" (DELETE -4)
                              (("2" (REPLACE -1)
                                (("2" (DELETE -1) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|originates_index?| CONST-DECL "bool" |traces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|anno_node?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|new_card_role| CONST-DECL "bool" |annotated_roles| NIL)
    (|annotations| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|new_card| CONST-DECL "tag" |annotated_roles| NIL)
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|new_card_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|new_card_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../strand_spaces/")
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|new_card_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|new_card_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|n| SHARED-ADT-ACCESSOR-DECL
     "[{x: mesg | key(x) OR text(x) OR data(x) OR tag(x)} -> nat]" |init_alg|
     "../strand_spaces/")
    (|tag| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|data| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|text| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|key| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|lift_up_extensionality| FORMULA-DECL NIL |lift_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|up| ADT-CONSTRUCTOR-DECL "[T -> (up?)]" |lift_adt| NIL)
    (|tag?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|tg| ADT-CONSTRUCTOR-DECL "[nat -> (tag?)]" |init_alg|
     "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|anno| TYPE-EQ-DECL NIL |protocols_and_state| "../state_spaces/")
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|enumerate_annotated_roles| 0
  (|enumerate_annotated_roles-1| NIL 3582844320
   ("" (SKOLEM 1 "r") (("" (GRIND) NIL NIL)) NIL)
   ((|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|annotated_roles| CONST-DECL "protocol" |annotated_roles| NIL)
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |protocols_and_state| "../state_spaces/")
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL))
   SHOSTAK)))

