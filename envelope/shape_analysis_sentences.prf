(|shape_analysis_sentences|
 (|alice_pov_TCC1| 0
  (|alice_pov_TCC1-1| NIL 3578038417 ("" (SUBTYPE-TCC) NIL NIL)
   ((|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|alice_pov_TCC2| 0
  (|alice_pov_TCC2-1| NIL 3578038417 ("" (SUBTYPE-TCC) NIL NIL)
   ((|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_pov_TCC3| 0
  (|alice_pov_TCC3-1| NIL 3578038417 ("" (SUBTYPE-TCC) NIL NIL)
   ((|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_pov_TCC4| 0
  (|alice_pov_TCC4-1| NIL 3578038417 ("" (SUBTYPE-TCC) NIL NIL)
   ((|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_pov_TCC5| 0
  (|alice_pov_TCC5-1| NIL 3601198601 ("" (SUBTYPE-TCC) NIL NIL)
   ((|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC1| 0
  (|alice_shape_TCC1-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC2| 0
  (|alice_shape_TCC2-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC3| 0
  (|alice_shape_TCC3-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC4| 0
  (|alice_shape_TCC4-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC5| 0
  (|alice_shape_TCC5-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC6| 0
  (|alice_shape_TCC6-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC7| 0
  (|alice_shape_TCC7-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC8| 0
  (|alice_shape_TCC8-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC9| 0
  (|alice_shape_TCC9-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC10| 0
  (|alice_shape_TCC10-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC11| 0
  (|alice_shape_TCC11-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC12| 0
  (|alice_shape_TCC12-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC13| 0
  (|alice_shape_TCC13-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC14| 0
  (|alice_shape_TCC14-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC15| 0
  (|alice_shape_TCC15-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC16| 0
  (|alice_shape_TCC16-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC17| 0
  (|alice_shape_TCC17-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC18| 0
  (|alice_shape_TCC18-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC19| 0
  (|alice_shape_TCC19-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC20| 0
  (|alice_shape_TCC20-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC21| 0
  (|alice_shape_TCC21-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC22| 0
  (|alice_shape_TCC22-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC23| 0
  (|alice_shape_TCC23-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC24| 0
  (|alice_shape_TCC24-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_TCC25| 0
  (|alice_shape_TCC25-1| NIL 3578145472 ("" (SUBTYPE-TCC) NIL NIL)
   ((|alice_pov| CONST-DECL "bool" |shape_analysis_sentences| NIL)
    (|alice_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|alice_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|alice_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|alice_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|sextupleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|refusal| CONST-DECL "mesg" |annotated_roles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (|tpm_create_key_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_create_key_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_create_key_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_create_key_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|create_key| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_decrypt_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_decrypt_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_decrypt_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_decrypt_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_decrypt_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|created| CONST-DECL "tag" |annotated_roles| NIL)
    (|decrypt| CONST-DECL "tag" |annotated_roles| NIL)
    (|obtain_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|obtain| CONST-DECL "tag" |annotated_roles| NIL)
    (|tpm_quote_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|tpm_quote_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_quote_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|tpm_quote_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_quote_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|quote| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse_pcr| CONST-DECL "mesg" |annotated_roles| NIL)
    (|tpm_extend_enc_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|state| TYPE-DECL NIL |tpm| NIL) (|trans| CONST-DECL "bool" |tpm| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|tpm_extend_enc_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|tpm_extend_enc_annotations| CONST-DECL "annotations" |annotated_roles|
     NIL)
    (|tpm_extend_enc_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|tpm_extend_enc_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|state| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend| CONST-DECL "tag" |annotated_roles| NIL)
    (|establish_transport| CONST-DECL "tag" |annotated_roles| NIL)
    (|refuse| CONST-DECL "tag" |annotated_roles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|data| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/"))
   NIL))
 (|alice_shape_analysis_sentence| 0
  (|alice_shape_analysis_sentence-1| NIL 3581273394 ("" (POSTPONE) NIL NIL) NIL
   SHOSTAK)))

