(|strands|
 (|cashier_inst_role| 0
  (|cashier_inst_role-1| NIL 3582845817
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (TYPEPRED "ra!1")
        (("" (EXPAND "role_assignment?")
          (("" (INST?)
            (("" (SKOLEM -1 "ri")
              (("" (TYPEPRED "ri")
                (("" (LEMMA "enumerate_annotated_roles")
                  (("" (INST?)
                    (("" (SMASH)
                      (("1" (REPLACE -2)
                        (("1" (DELETE -2)
                          (("1" (DELETE 1)
                            (("1" (DELETE -1)
                              (("1" (EXPAND "buyer_role")
                                (("1" (SKOLEM!)
                                  (("1" (REPLACE -1)
                                    (("1" (DELETE -1) (("1" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (REPLACE -2)
                        (("2" (DELETE -2 -1 1)
                          (("2" (EXPAND "new_card_role")
                            (("2" (SKOLEM!)
                              (("2" (REPLACE -1)
                                (("2" (DELETE -1) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (LEMMA "adversary_strands_are_short")
                        (("3" (INST -1 "bu!1`space" "z!1" "5" "ra!1(z!1)")
                          (("3" (SPLIT -1)
                            (("1" (EXPAND "role_pred")
                              (("1" (INST?)
                                (("1" (EXPAND "pred")
                                  (("1" (EXPAND "cashier_inst")
                                    (("1" (EXPAND "pred")
                                      (("1" (SMASH) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SMASH) NIL NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("4" (EXPAND "protocol_assignment?")
                        (("4" (INST?)
                          (("4" (EXPAND "member") (("4" (PROPAX) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|enumerate_annotated_roles| FORMULA-DECL NIL |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|buyer_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../strand_spaces/")
    (|buyer_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|no_annotations| DEF-DECL "annotations" |roles| "../strand_spaces/")
    (|buyer_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|originates_index?| CONST-DECL "bool" |traces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../strand_spaces/")
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|cashier_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|cashier_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|cashier_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|cashier_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|cashier_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|bu!1| SKOLEM-CONST-DECL "bundle[mesg, carried_by?]" |strands| NIL)
    (|z!1| SKOLEM-CONST-DECL "strand[mesg, carried_by?](bu!1`space)" |strands|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|buyer_role| CONST-DECL "bool" |annotated_roles| NIL)
    (|new_card_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|new_card_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|new_card_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|new_card_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|new_card| CONST-DECL "tag" |annotated_roles| NIL)
    (|new_card_role| CONST-DECL "bool" |annotated_roles| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|role_pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|adversary_strands_are_short| FORMULA-DECL NIL |adversary|
     "../strand_spaces/")
    (|assignment| TYPE-EQ-DECL NIL |annotated_roles| NIL)
    (|annotated_roles| CONST-DECL "protocol" |annotated_roles| NIL)
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|anno| TYPE-EQ-DECL NIL |protocols_and_state| "../state_spaces/")
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|cashier_inst_rew_TCC1| 0
  (|cashier_inst_rew_TCC1-1| NIL 3582923892 ("" (SUBTYPE-TCC) NIL NIL)
   ((|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|non| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|cashier_inst_rew| 0
  (|cashier_inst_rew-1| NIL 3582924477
   ("" (SKOLEM!)
    (("" (EXPAND "cashier_inst")
      (("" (EXPAND "pred")
        (("" (EXPAND "inst")
          (("" (EXPAND "cashier_role_item")
            (("" (SPLIT)
              (("1" (FLATTEN)
                (("1" (SMASH)
                  (("1" (INST -3 "0")
                    (("1" (INST -3 "nc!1") (("1" (GRIND) NIL NIL)) NIL)) NIL)
                   ("2" (INST -2 "2")
                    (("2" (INST -2 "k!1") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL)
               ("2" (SMASH)
                (("1" (SKOLEM!)
                  (("1" (SKOLEM!)
                    (("1" (CASE "m!1=nc!1 and j!1=0")
                      (("1" (SMASH) NIL NIL)
                       ("2" (TYPEPRED "m!1")
                        (("2" (DELETE 2 -4 -5) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (SKOLEM!)
                  (("2" (SKOLEM!)
                    (("2" (CASE-REPLACE "m!1=k!1")
                      (("2" (TYPEPRED "m!1")
                        (("2" (DELETE 2 -4 -5) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cashier_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|k!1| SKOLEM-CONST-DECL "skey" |strands| NIL)
    (|c!1| SKOLEM-CONST-DECL "akey" |strands| NIL)
    (|b!1| SKOLEM-CONST-DECL "akey" |strands| NIL)
    (|nb!1| SKOLEM-CONST-DECL "text" |strands| NIL)
    (|nc!1| SKOLEM-CONST-DECL "text" |strands| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |protocols_and_state| "../state_spaces/")
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|buy| CONST-DECL "tag" |annotated_roles| NIL)
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|zero| CONST-DECL "tag" |annotated_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|cashier_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|cashier_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|cashier_runique| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|cashier_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|j!1| SKOLEM-CONST-DECL
     "below(finseq_appl[trace[mesg, carried_by?]](bu!1`space)(z!1)`length)"
     |strands| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|j!1| SKOLEM-CONST-DECL
     "below(finseq_appl[trace[mesg, carried_by?]](bu!1`space)(z!1)`length)"
     |strands| NIL)
    (|z!1| SKOLEM-CONST-DECL "strand[mesg, carried_by?](bu!1`space)" |strands|
     NIL)
    (|bu!1| SKOLEM-CONST-DECL "bundle[mesg, carried_by?]" |strands| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|cashier_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../strand_spaces/"))
   SHOSTAK))
 (|new_card_inst_rew| 0
  (|new_card_inst_rew-1| NIL 3582923920
   ("" (SKOLEM!)
    (("" (SPLIT)
      (("1" (EXPAND "new_card_inst")
        (("1" (EXPAND "pred")
          (("1" (EXPAND "inst")
            (("1" (EXPAND "new_card_role_item")
              (("1" (SMASH)
                (("1" (INST -2 "1")
                  (("1" (DELETE -1 -3)
                    (("1" (INST?)
                      (("1" (DELETE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (EXPAND "new_card_inst")
        (("2" (EXPAND "pred")
          (("2" (EXPAND "inst")
            (("2" (EXPAND "new_card_role_item")
              (("2" (SMASH)
                (("1" (SKOLEM!)
                  (("1" (SKOLEM 1 "m")
                    (("1" (TYPEPRED "m")
                      (("1" (DELETE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (SKOLEM!)
                  (("2" (SKOLEM!)
                    (("2" (CASE-REPLACE "m!1=k!1")
                      (("2" (TYPEPRED "m!1")
                        (("2" (DELETE -4 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|pred| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|new_card_role_item| CONST-DECL "role_item" |annotated_roles| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|event| TYPE-DECL NIL |traces| "../strand_spaces/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|bundle?| CONST-DECL "bool" |bundles| "../strand_spaces/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|k!1| SKOLEM-CONST-DECL "skey" |strands| NIL)
    (|c!1| SKOLEM-CONST-DECL "akey" |strands| NIL)
    (|b!1| SKOLEM-CONST-DECL "akey" |strands| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|boxes| CONST-DECL "nat" |annotated_roles| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|trans| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|anno| TYPE-EQ-DECL NIL |protocols_and_state| "../state_spaces/")
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../strand_spaces/")
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|new_card_annotations| CONST-DECL "annotations" |annotated_roles| NIL)
    (|encode| CONST-DECL "mesg" |annotated_roles| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../strand_spaces/")
    (|new_card_rnon| CONST-DECL "assumptions" |annotated_roles| NIL)
    (|new_card_trace| CONST-DECL "trace" |annotated_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|one| CONST-DECL "tag" |annotated_roles| NIL)
    (|new_card| CONST-DECL "tag" |annotated_roles| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|inst| CONST-DECL "bool" |roles| "../strand_spaces/")
    (|new_card_inst| CONST-DECL "bool" |annotated_roles| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL))
   SHOSTAK)))

