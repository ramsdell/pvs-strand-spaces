(|free_alg|
 (|invk_TCC1| 0
  (|invk_TCC1-1| NIL 3565079001 ("" (CASES-TCC) NIL NIL)
   ((|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|invk_skey| 0
  (|invk_skey-1| NIL 3622155266
   ("" (SKOLEM 1 "k") (("" (EXPAND "invk") (("" (APPLY-ETA "k") NIL NIL)) NIL))
    NIL)
   ((|invk| CONST-DECL "key" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|mesg_sk_eta| FORMULA-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|invk_invk_identity| 0
  (|invk_invk_identity-1| NIL 3565079138
   ("" (SKOLEM 1 "k")
    (("" (TYPEPRED "k")
      (("" (SMASH)
        (("1" (GRIND)
          (("1" (DECOMPOSE-EQUALITY)
            (("1" (LEMMA "invert_ax") (("1" (INST?) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (CASE "skey?(k)") (("1" (SMASH) NIL NIL) ("2" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|invk| CONST-DECL "key" |free_alg| NIL)
    (|invert_ax| FORMULA-DECL NIL |free_alg| NIL)
    (|mesg_ak_extensionality| FORMULA-DECL NIL |free_alg| NIL)
    (|kk| ADT-ACCESSOR-DECL "[(akey?) -> asymkey]" |free_alg| NIL)
    (|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg| NIL)
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (|invk_skey| FORMULA-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|not_akey_invk_identity| 0
  (|not_akey_invk_identity-1| NIL 3602353454
   ("" (SKOLEM 1 "k")
    (("" (TYPEPRED "k")
      (("" (SMASH)
        (("" (CASE "skey?(k)")
          (("1" (SMASH) NIL NIL) ("2" (SMASH) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|invk_skey| FORMULA-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|subtype_TCC1| 0
  (|subtype_TCC1-1| NIL 3565079001 ("" (JUDGEMENT-TCC) NIL NIL)
   ((|atom?| CONST-DECL "bool" |free_alg| NIL)) NIL))
 (|subtype_TCC2| 0
  (|subtype_TCC2-1| NIL 3565079001 ("" (JUDGEMENT-TCC) NIL NIL)
   ((|atom?| CONST-DECL "bool" |free_alg| NIL)) NIL))
 (|subtype_TCC3| 0
  (|subtype_TCC3-1| NIL 3565528569 ("" (JUDGEMENT-TCC) NIL NIL)
   ((|atom?| CONST-DECL "bool" |free_alg| NIL)) NIL))
 (|subtype_TCC4| 0
  (|subtype_TCC4-1| NIL 3565528569 ("" (JUDGEMENT-TCC) NIL NIL)
   ((|atom?| CONST-DECL "bool" |free_alg| NIL)) NIL))
 (|carried_by?_TCC1| 0
  (|carried_by?_TCC1-1| NIL 3579539818 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)) NIL))
 (|carried_by?_TCC2| 0
  (|carried_by?_TCC2-1| NIL 3579539818 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)) NIL))
 (|carried_by?_TCC3| 0
  (|carried_by?_TCC3-1| NIL 3579539818 ("" (TERMINATION-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|akey_var_TCC1| 0
  (|akey_var_TCC1-1| NIL 3621115391 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[asymkey])" |free_alg| NIL)) NIL))
 (|akey_var_TCC2| 0
  (|akey_var_TCC2-1| NIL 3621115391 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|vars_TCC1| 0
  (|vars_TCC1-1| NIL 3621115391 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|vars_TCC2| 0
  (|vars_TCC2-1| NIL 3621115391 ("" (TERMINATION-TCC) NIL NIL)
   ((OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|vars_TCC3| 0
  (|vars_TCC3-1| NIL 3621115391 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|dom_TCC1| 0
  (|dom_TCC1-1| NIL 3621115391 ("" (TERMINATION-TCC) NIL NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|lookup_TCC1| 0
  (|lookup_TCC1-1| NIL 3621078824 ("" (TERMINATION-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|lookup_akey| 0
  (|lookup_akey-1| NIL 3621090269
   ("" (SKOLEM 1 ("x" "_"))
    (("" (INDUCT "s")
      (("1" (GRIND) NIL NIL)
       ("2" (SKOLEM 1 ("y" "t"))
        (("2" (FLATTEN)
          (("2" (EXPAND "lookup" 1)
            (("2" (TYPEPRED "y")
              (("2" (EXPAND "mapping?")
                (("2" (SMASH)
                  (("2" (TYPEPRED "y") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|lookup| DEF-DECL "mesg" |free_alg| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|lookup_skey| 0
  (|lookup_skey-1| NIL 3621094591
   ("" (SKOLEM 1 ("x" "_"))
    (("" (INDUCT "s")
      (("1" (GRIND) NIL NIL)
       ("2" (SKOLEM 1 ("y" "t"))
        (("2" (SMASH)
          (("2" (EXPAND "lookup" 1)
            (("2" (TYPEPRED "y") (("2" (GRIND) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|lookup| DEF-DECL "mesg" |free_alg| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|subst_akey_TCC1| 0
  (|subst_akey_TCC1-1| NIL 3621091746 ("" (SUBTYPE-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|subst_akey_TCC2| 0
  (|subst_akey_TCC2-1| NIL 3621091746
   ("" (LEMMA "lookup_akey") (("" (GRIND) NIL NIL)) NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg| NIL)
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|lookup_akey| FORMULA-DECL NIL |free_alg| NIL))
   NIL))
 (|subst_akey_TCC3| 0
  (|subst_akey_TCC3-1| NIL 3621091746 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|subst_TCC1| 0
  (|subst_TCC1-1| NIL 3621089470
   ("" (LEMMA "subst_well_founded") (("" (SMASH) (("" (GRIND) NIL NIL)) NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|key| ADT-DEF-DECL "boolean" |free_alg| NIL))
   NIL))
 (|subst_TCC2| 0
  (|subst_TCC2-1| NIL 3621089470
   ("" (SKOLEM 1 ("m" "s"))
    (("" (FLATTEN)
      (("" (LEMMA "lookup_skey") (("" (INST?) (("" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|key| ADT-DEF-DECL "boolean" |free_alg| NIL)
    (|lookup_skey| FORMULA-DECL NIL |free_alg| NIL))
   NIL))
 (|subst_TCC3| 0
  (|subst_TCC3-1| NIL 3621089470
   ("" (SKOLEM 1 "m") (("" (FLATTEN) (("" (GRIND) NIL NIL)) NIL)) NIL) NIL
   NIL))
 (|subst_TCC4| 0
  (|subst_TCC4-1| NIL 3621089470 ("" (TERMINATION-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|subst_TCC5| 0
  (|subst_TCC5-1| NIL 3621089470 ("" (TERMINATION-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|subst_TCC6| 0
  (|subst_TCC6-1| NIL 3621089470 ("" (TERMINATION-TCC) NIL NIL)
   ((|key| ADT-DEF-DECL "boolean" |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|subst_TCC7| 0
  (|subst_TCC7-1| NIL 3621089470 ("" (TERMINATION-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|subst_TCC8| 0
  (|subst_TCC8-1| NIL 3621098126 ("" (TERMINATION-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|subst_TCC9| 0
  (|subst_TCC9-1| NIL 3621098126
   ("" (SKOLEM 1 ("m" "v" "s"))
    (("" (FLATTEN)
      (("" (TYPEPRED "v(ky(m), s)")
        (("" (TYPEPRED "ky(m)") (("" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)
    (|strict_well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|ky| ADT-ACCESSOR-DECL "[(enc?) -> key]" |free_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|key| ADT-DEF-DECL "boolean" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|subst_TCC10| 0
  (|subst_TCC10-1| NIL 3621098126
   ("" (SKOLEM 1 ("m" "v" "s"))
    (("" (FLATTEN) (("" (DELETE +) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
   ((|key| ADT-DEF-DECL "boolean" |free_alg| NIL)) NIL))
 (|subst_TCC11| 0
  (|subst_TCC11-1| NIL 3621098126 ("" (SUBTYPE-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)) NIL))
 (|subst_TCC12| 0
  (|subst_TCC12-1| NIL 3621098126 ("" (TERMINATION-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|subst_TCC13| 0
  (|subst_TCC13-1| NIL 3621098126
   ("" (SUBTYPE-TCC) (("" (EXPAND "key") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|key| ADT-DEF-DECL "boolean" |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|find_lookup| 0
  (|find_lookup-1| NIL 3621159508
   ("" (SKOLEM 1 ("x" "_"))
    (("" (INDUCT "s")
      (("1" (GRIND) NIL NIL)
       ("2" (SKOLEM 1 ("p" "s"))
        (("2" (FLATTEN)
          (("2" (EXPAND "find" -2)
            (("2" (EXPAND "find" 1)
              (("2" (EXPAND "lookup" 1) (("2" (SMASH) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|find| DEF-DECL "lift[mesg]" |free_alg| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|lookup| DEF-DECL "mesg" |free_alg| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL))
   SHOSTAK))
 (|match_akey_TCC1| 0
  (|match_akey_TCC1-1| NIL 3621153651
   ("" (SKOLEM 1 ("p" "t" "s" "x"))
    (("" (FLATTEN)
      (("" (TYPEPRED "s")
        (("" (SPLIT)
          (("1" (EXPAND "every" 1)
            (("1" (SMASH)
              (("1" (DELETE -2 -3)
                (("1" (GENERALIZE "s" "s")
                  (("1" (INDUCT "s")
                    (("1" (GRIND) NIL NIL)
                     ("2" (SKOLEM 1 ("a" "b"))
                      (("2" (FLATTEN)
                        (("2" (EXPAND "every" -2)
                          (("2" (EXPAND "every" 1)
                            (("2" (SMASH)
                              (("2" (DELETE -)
                                (("2" (TYPEPRED "a") (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL)
           ("2" (EXPAND "every" 1) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|match_akey_TCC2| 0
  (|match_akey_TCC2-1| NIL 3621153651 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[asymkey])" |free_alg| NIL)) NIL))
 (|match_akey_TCC3| 0
  (|match_akey_TCC3-1| NIL 3621153651 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|match_akey_TCC4| 0
  (|match_akey_TCC4-1| NIL 3621153651 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[asymkey])" |free_alg| NIL)) NIL))
 (|match_akey_invert| 0
  (|match_akey_invert-1| NIL 3621160797
   ("" (SKOLEM 1 ("_" "y" "s"))
    (("" (INDUCT "x")
      (("1" (SKOLEM 1 "x")
        (("1" (EXPAND "match_akey" 1 1)
          (("1" (SMASH)
            (("1" (LEMMA "asymkey_invert_eta")
              (("1" (INST?)
                (("1" (REPLACE -1 :DIR RL)
                  (("1" (LEMMA "invert_ax")
                    (("1" (INST?)
                      (("1" (REPLACE -1) (("1" (SMASH) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKOLEM 1 "k")
        (("2" (FLATTEN)
          (("2" (LEMMA "invert_ax")
            (("2" (INST?) (("2" (REPLACE -1) (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (|match_akey| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg| NIL)
    (|asymkey_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|asymkey_invert_eta| FORMULA-DECL NIL |free_alg| NIL)
    (|n| ADT-ACCESSOR-DECL "[(invkey?) -> asymkey]" |free_alg| NIL)
    (|invert_ax| FORMULA-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|match_akey_append| 0
  (|match_akey_append-1| NIL 3621726408
   ("" (INDUCT "x")
    (("1" (SMASH) NIL NIL)
     ("2" (SKOLEM 1 "x")
      (("2" (SKOLEM 1 ("y" "s"))
        (("2" (FLATTEN)
          (("2" (EXPAND "match_akey")
            (("2" (SMASH)
              (("1" (INST 1 "cons((ak(asym(x)), ak(y)), null)")
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                 ("3" (GRIND) NIL NIL))
                NIL)
               ("2" (INST 2 "null") (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKOLEM 1 "x")
      (("3" (FLATTEN)
        (("3" (SKOLEM 1 ("y" "s"))
          (("3" (FLATTEN)
            (("3" (SMASH)
              (("3" (INST -1 "invert(y)" "s") (("3" (SMASH) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|match_akey_invert| FORMULA-DECL NIL |free_alg| NIL)
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg| NIL)
    (|x| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|y| SKOLEM-CONST-DECL "asymkey" |free_alg| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|asymkey_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|match_akey| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|match_akey_find| 0
  (|match_akey_find-1| NIL 3621730805
   ("" (SKOLEM 1 ("v" "w" "_" "_" "s"))
    (("" (INDUCT "x")
      (("1" (SMASH) NIL NIL) ("2" (SKOLEM 1 "x") (("2" (GRIND) NIL NIL)) NIL)
       ("3" (SKOLEM 1 "x")
        (("3" (FLATTEN)
          (("3" (SKOLEM 1 "y")
            (("3" (SMASH)
              (("3" (INST -1 "invert(y)") (("3" (SMASH) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|find| DEF-DECL "lift[mesg]" |free_alg| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|up| ADT-CONSTRUCTOR-DECL "[T -> (up?)]" |lift_adt| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|match_akey| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|asymkey_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|match_akey_invert| FORMULA-DECL NIL |free_alg| NIL)
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg| NIL))
   SHOSTAK))
 (|match_akey_subst| 0
  (|match_akey_subst-1| NIL 3621159307
   ("" (INDUCT "x")
    (("1" (SKOLEM 1 ("y" "s")) (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL)
     ("2" (SKOLEM 1 "z")
      (("2" (SKOLEM 1 ("y" "s"))
        (("2" (FLATTEN)
          (("2" (GRIND)
            (("2" (LEMMA "find_lookup")
              (("2" (INST?) (("2" (SMASH) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKOLEM 1 "z")
      (("3" (FLATTEN)
        (("3" (SKOLEM 1 ("y" "s"))
          (("3" (SMASH)
            (("3" (INST?)
              (("3" (SMASH)
                (("3" (EXPAND "subst_akey" 1)
                  (("3" (SMASH)
                    (("1" (REPLACE -2) (("1" (GRIND) NIL NIL)) NIL)
                     ("2" (REPLACE -2) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg| NIL)
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|match_akey_invert| FORMULA-DECL NIL |free_alg| NIL)
    (|lookup| DEF-DECL "mesg" |free_alg| NIL)
    (|find_lookup| FORMULA-DECL NIL |free_alg| NIL)
    (|asymkey_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|match_akey| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|subst_akey| DEF-DECL "(akey?)" |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|match_match_akey| 0
  (|match_match_akey-1| NIL 3621261984
   ("" (INDUCT "x")
    (("1" (SMASH) NIL NIL)
     ("2" (SKOLEM 1 "x")
      (("2" (INDUCT "v")
        (("1" (SKOLEM 1 "v")
          (("1" (SKOLEM 1 ("w" "y" "s"))
            (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (SKOLEM 1 "v")
          (("2" (FLATTEN)
            (("2" (SKOLEM 1 ("w" "y" "s"))
              (("2" (FLATTEN)
                (("2" (EXPAND "subst")
                  (("2" (SMASH)
                    (("2" (INST -1 "invert(w)" "y" "s")
                      (("2" (SMASH)
                        (("2" (EXPAND "subst_akey" 1)
                          (("2" (SMASH)
                            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (GRIND) NIL NIL))
    NIL)
   ((|n| ADT-ACCESSOR-DECL "[(invkey?) -> asymkey]" |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg| NIL)
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|match_akey_invert| FORMULA-DECL NIL |free_alg| NIL)
    (|subst_akey| DEF-DECL "(akey?)" |free_alg| NIL)
    (|find| DEF-DECL "lift[mesg]" |free_alg| NIL)
    (|find_lookup| FORMULA-DECL NIL |free_alg| NIL)
    (|lookup| DEF-DECL "mesg" |free_alg| NIL)
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg| NIL)
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|asymkey_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|match_akey| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|subst| DEF-DECL "{x: mesg | key(m) IMPLIES key(x)}" |free_alg| NIL)
    (|key| ADT-DEF-DECL "boolean" |free_alg| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|match_TCC1| 0
  (|match_TCC1-1| NIL 3621153651
   ("" (SKOLEM 1 ("p" "t" "s"))
    (("" (FLATTEN)
      (("" (TYPEPRED "s")
        (("" (DELETE 1 -2)
          (("" (SPLIT)
            (("1" (EXPAND "every" 1)
              (("1" (SMASH)
                (("1" (DELETE -1 -3)
                  (("1" (GENERALIZE "s" "s")
                    (("1" (INDUCT "s")
                      (("1" (GRIND) NIL NIL)
                       ("2" (SKOLEM 1 ("a" "b"))
                        (("2" (FLATTEN)
                          (("2" (EXPAND "every" -2)
                            (("2" (EXPAND "every" 1)
                              (("2" (SMASH)
                                (("2" (DELETE -)
                                  (("2" (TYPEPRED "a") (("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (EXPAND "every" 1) (("2" (SMASH) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|match_TCC2| 0
  (|match_TCC2-1| NIL 3621153651 ("" (TERMINATION-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|match_TCC3| 0
  (|match_TCC3-1| NIL 3621153651 ("" (TERMINATION-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|match_TCC4| 0
  (|match_TCC4-1| NIL 3621153651 ("" (TERMINATION-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|match_TCC5| 0
  (|match_TCC5-1| NIL 3621153651 ("" (TERMINATION-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|match_TCC6| 0
  (|match_TCC6-1| NIL 3621153651 ("" (TERMINATION-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|match_append_var| 0
  (|match_append_var-1| NIL 3621726891
   ("" (SKOLEM 1 ("x" "y" "s"))
    (("" (SMASH)
      (("" (TYPEPRED "x")
        (("" (EXPAND "match")
          (("" (SMASH)
            (("1" (LEMMA "match_akey_append")
              (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL)
             ("2" (INST 2 "cons((x, y), null)")
              (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
             ("3" (INST 3 "null") (("3" (GRIND) NIL NIL)) NIL)
             ("4" (INST 2 "cons((x, y), null)")
              (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
             ("5" (INST 3 "null") (("5" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|match| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|match_akey_append| FORMULA-DECL NIL |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|kk| ADT-ACCESSOR-DECL "[(akey?) -> asymkey]" |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|match_append| 0
  (|match_append-1| NIL 3621725400
   ("" (INDUCT "x")
    (("1" (SMASH) NIL NIL)
     ("2" (SKOLEM 1 "x")
      (("2" (SKOLEM 1 ("y" "s"))
        (("2" (FLATTEN)
          (("2" (EXPAND "match")
            (("2" (SMASH)
              (("1" (LEMMA "match_akey_append")
                (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL)
               ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKOLEM 1 "x")
      (("3" (SKOLEM 1 ("y" "s"))
        (("3" (FLATTEN)
          (("3" (LEMMA "match_append_var")
            (("3" (INST?) (("1" (SMASH) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKOLEM 1 "x")
      (("4" (FLATTEN)
        (("4" (SKOLEM 1 ("y" "s"))
          (("4" (INST -1 "n(y)" "s")
            (("1" (EXPAND "match" 1)
              (("1" (SMASH)
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                 ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL))
                NIL))
              NIL)
             ("2" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("5" (SKOLEM 1 "x")
      (("5" (SKOLEM 1 ("y" "s"))
        (("5" (LEMMA "match_append_var")
          (("5" (INST?) (("1" (SMASH) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("6" (SKOLEM 1 "x")
      (("6" (SKOLEM 1 ("y" "s"))
        (("6" (FLATTEN)
          (("6" (LEMMA "match_append_var")
            (("6" (INST?) (("1" (SMASH) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("7" (SKOLEM 1 "x")
      (("7" (SKOLEM 1 ("y" "s"))
        (("7" (EXPAND "match")
          (("7" (SMASH)
            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
             ("3" (INST 2 "null") (("3" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("8" (SKOLEM 1 "x")
      (("8" (SKOLEM 1 ("y" "s"))
        (("8" (LEMMA "match_append_var")
          (("8" (INST?) (("1" (SMASH) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("9" (SKOLEM 1 ("a" "b"))
      (("9" (FLATTEN)
        (("9" (SKOLEM 1 ("y" "s"))
          (("9" (FLATTEN)
            (("9" (EXPAND "match" -3)
              (("9" (SMASH)
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                 ("3" (EXPAND "match" 3)
                  (("3" (INST -1 "fst(y)" "s")
                    (("3" (SMASH)
                      (("3" (SKOLEM -2 "f")
                        (("3" (INST -3 "snd(y)" "down(match(a, fst(y), s))")
                          (("3" (SMASH)
                            (("3" (SKOLEM -4 "g")
                              (("3" (INST 2 "append(g, f)")
                                (("3" (REPLACE -4)
                                  (("3" (REPLACE -2)
                                    (("3" (LEMMA "append_assoc[(mapping?)]")
                                      (("3" (INST?) (("3" (SMASH) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("10" (SKOLEM 1 ("a" "b"))
      (("10" (FLATTEN)
        (("10" (SKOLEM 1 ("y" "s"))
          (("10" (FLATTEN)
            (("10" (EXPAND "match" -3)
              (("10" (EXPAND "match" 1)
                (("10" (SMASH)
                  (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                   ("3" (INST -1 "plt(y)" "s")
                    (("3" (SMASH)
                      (("3" (SKOLEM -2 "f")
                        (("3" (REPLACE -2)
                          (("3" (INST -3 "ky(y)" "append(f, s)")
                            (("3" (SMASH)
                              (("3" (SKOLEM -4 "g")
                                (("3" (REPLACE -4)
                                  (("3" (INST 2 "append(g, f)")
                                    (("3" (LEMMA "append_assoc[(mapping?)]")
                                      (("3" (INST?) (("3" (SMASH) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|ky| ADT-ACCESSOR-DECL "[(enc?) -> key]" |free_alg| NIL)
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|plt| ADT-ACCESSOR-DECL "[(enc?) -> mesg]" |free_alg| NIL)
    (|snd| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |free_alg| NIL)
    (|append_assoc| FORMULA-DECL NIL |list_props| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|fst| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |free_alg| NIL)
    (|x| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|vm| ADT-CONSTRUCTOR-DECL "[nat -> (mvar?)]" |free_alg| NIL)
    (|mvar?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|dt| ADT-CONSTRUCTOR-DECL "[nat -> (data?)]" |free_alg| NIL)
    (|x| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|x| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| NIL)
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|y| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|n| ADT-ACCESSOR-DECL "[(hash?) -> mesg]" |free_alg| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |free_alg| NIL)
    (|x| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|match_append_var| FORMULA-DECL NIL |free_alg| NIL)
    (|kk| ADT-ACCESSOR-DECL "[(akey?) -> asymkey]" |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (|match_akey_append| FORMULA-DECL NIL |free_alg| NIL)
    (|mesg_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|match| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|match_find| 0
  (|match_find-1| NIL 3621729390
   ("" (SKOLEM 1 ("v" "w" "_" "_" "_"))
    (("" (INDUCT "x")
      (("1" (SMASH) NIL NIL)
       ("2" (SKOLEM 1 "x")
        (("2" (SKOLEM 1 ("y" "s"))
          (("2" (EXPAND "match")
            (("2" (SMASH)
              (("1" (LEMMA "match_akey_find")
                (("1" (INST -1 "v" "w" "x" "kk(y)" "s") (("1" (SMASH) NIL NIL))
                  NIL))
                NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (SKOLEM 1 "x")
        (("3" (SKOLEM 1 ("y" "s")) (("3" (GRIND) NIL NIL)) NIL)) NIL)
       ("4" (SKOLEM 1 "x")
        (("4" (FLATTEN)
          (("4" (SKOLEM 1 ("y" "s"))
            (("4" (INST -1 "n(y)" "s")
              (("1" (SMASH) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKOLEM 1 "x")
        (("5" (SKOLEM 1 ("y" "s")) (("5" (GRIND) NIL NIL)) NIL)) NIL)
       ("6" (SKOLEM 1 "x")
        (("6" (SKOLEM 1 ("y" "s")) (("6" (GRIND) NIL NIL)) NIL)) NIL)
       ("7" (SKOLEM 1 "x")
        (("7" (SKOLEM 1 ("y" "s")) (("7" (GRIND) NIL NIL)) NIL)) NIL)
       ("8" (SKOLEM 1 "x")
        (("8" (SKOLEM 1 ("y" "s")) (("8" (GRIND) NIL NIL)) NIL)) NIL)
       ("9" (SKOLEM 1 ("a" "b"))
        (("9" (FLATTEN)
          (("9" (SKOLEM 1 ("y" "s"))
            (("9" (EXPAND "match" 1)
              (("9" (SMASH)
                (("1" (GRIND) NIL NIL)
                 ("2" (INST -1 "fst(y)" "s")
                  (("2" (SMASH)
                    (("2" (INST -4 "snd(y)" "down(match(a, fst(y), s))")
                      (("2" (SMASH) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("10" (SKOLEM 1 ("a" "b"))
        (("10" (FLATTEN)
          (("10" (SKOLEM 1 ("y" "s"))
            (("10" (EXPAND "match" 1)
              (("10" (SMASH)
                (("1" (GRIND) NIL NIL)
                 ("2" (INST -1 "plt(y)" "s")
                  (("2" (SMASH)
                    (("2" (INST -4 "ky(y)" "down(match(a, plt(y), s))")
                      (("2" (SMASH) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|find| DEF-DECL "lift[mesg]" |free_alg| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|up| ADT-CONSTRUCTOR-DECL "[T -> (up?)]" |lift_adt| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|match| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|mesg_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|kk| ADT-ACCESSOR-DECL "[(akey?) -> asymkey]" |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (|match_akey_find| FORMULA-DECL NIL |free_alg| NIL)
    (|n| ADT-ACCESSOR-DECL "[(hash?) -> mesg]" |free_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|y| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|fst| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |free_alg| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|snd| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |free_alg| NIL)
    (|plt| ADT-ACCESSOR-DECL "[(enc?) -> mesg]" |free_alg| NIL)
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|ky| ADT-ACCESSOR-DECL "[(enc?) -> key]" |free_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|match_match_subst_var| 0
  (|match_match_subst_var-1| NIL 3621735909
   ("" (SKOLEM 1 ("v" "w" "x" "y" "s"))
    (("" (SMASH)
      (("" (LEMMA "match_find")
        (("" (INST -1 "v" "w" "x" "y" "down(match(v, w, s))")
          (("" (SMASH)
            (("1" (EXPAND "subst")
              (("1" (SMASH)
                (("1" (TYPEPRED "v")
                  (("1" (GRIND)
                    (("1" (CASE-REPLACE "ak(kk(v))=v")
                      (("1" (DECOMPOSE-EQUALITY -3) (("1" (SMASH) NIL NIL))
                        NIL)
                       ("2" (LEMMA "mesg_ak_eta") (("2" (INST?) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (DECOMPOSE-EQUALITY -1) NIL NIL))
                NIL))
              NIL)
             ("2" (DELETE -2 2)
              (("2" (GRIND)
                (("2" (TYPEPRED "v")
                  (("2" (GRIND)
                    (("1" (GRIND)
                      (("1" (EXPAND "match")
                        (("1" (SMASH)
                          (("1" (DELETE -)
                            (("1" (LEMMA "mesg_ak_eta")
                              (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL))
                            NIL)
                           ("2" (LEMMA "mesg_ak_eta")
                            (("2" (INST?) (("2" (SMASH) NIL NIL)) NIL)) NIL)
                           ("3" (CASE-REPLACE "ak(kk(v))=v")
                            (("1" (CASE-REPLACE "ak(kk(w))=w")
                              (("1" (DECOMPOSE-EQUALITY 2) NIL NIL)
                               ("2" (LEMMA "mesg_ak_eta")
                                (("2" (INST?) NIL NIL)) NIL))
                              NIL)
                             ("2" (LEMMA "mesg_ak_eta") (("2" (INST?) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) (("2" (DECOMPOSE-EQUALITY 2) NIL NIL)) NIL)
                     ("3" (DECOMPOSE-EQUALITY 2) NIL NIL)
                     ("4" (DECOMPOSE-EQUALITY 2) NIL NIL)
                     ("5" (DECOMPOSE-EQUALITY 2) NIL NIL)
                     ("6" (DECOMPOSE-EQUALITY 2) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|match| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|match_akey| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|lift_up_extensionality| FORMULA-DECL NIL |lift_adt| NIL)
    (|subst| DEF-DECL "{x: mesg | key(m) IMPLIES key(x)}" |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|kk| ADT-ACCESSOR-DECL "[(akey?) -> asymkey]" |free_alg| NIL)
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|find| DEF-DECL "lift[mesg]" |free_alg| NIL)
    (|up| ADT-CONSTRUCTOR-DECL "[T -> (up?)]" |lift_adt| NIL)
    (|mesg_ak_eta| FORMULA-DECL NIL |free_alg| NIL)
    (|subst_akey| DEF-DECL "(akey?)" |free_alg| NIL)
    (|find_lookup| FORMULA-DECL NIL |free_alg| NIL)
    (|match_find| FORMULA-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|match_match_subst| 0
  (|match_match_subst-1| NIL 3621180260
   ("" (INDUCT "v")
    (("1" (SMASH) NIL NIL)
     ("2" (INDUCT "ak1_var")
      (("1" (SKOLEM 1 "v")
        (("1" (SKOLEM 1 ("w" "x" "y" "s"))
          (("1" (FLATTEN)
            (("1" (LEMMA "match_match_subst_var")
              (("1" (INST -1 "ak(asym(v))" "w" "x" "y" "s")
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKOLEM 1 "v")
        (("2" (FLATTEN)
          (("2" (SKOLEM 1 ("w" "x" "y" "s"))
            (("2" (CASE "akey?(w)")
              (("1" (SMASH)
                (("1" (INST -2 "ak(invert(kk(w)))" "x" "y" "s")
                  (("1"
                    (CASE-REPLACE
                     "match(ak(invert(v)), w, s)=match(ak(v), ak(invert(kk(w))), s)")
                    (("1" (DELETE -1)
                      (("1" (SMASH)
                        (("1" (EXPAND "subst")
                          (("1" (EXPAND "subst_akey" 1)
                            (("1" (SMASH)
                              (("1" (GRIND) NIL NIL)
                               ("2" (GRIND)
                                (("2" (LEMMA "mesg_ak_eta")
                                  (("2" (INST?) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (EXPAND "match" 1)
                      (("2" (LEMMA "match_akey_invert") (("2" (INST?) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKOLEM 1 "v")
      (("3" (SKOLEM 1 ("w" "x" "y" "s"))
        (("3" (FLATTEN)
          (("3" (LEMMA "match_match_subst_var")
            (("3" (INST -1 "sk(v)" "w" "x" "y" "s")
              (("1" (SMASH) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKOLEM 1 "v")
      (("4" (FLATTEN)
        (("4" (SKOLEM 1 ("w" "x" "y" "s"))
          (("4" (INST -1 "n(w)" "x" "y" "s")
            (("1" (FLATTEN)
              (("1" (GRIND)
                (("1" (LEMMA "mesg_hs_eta") (("1" (INST?) NIL NIL)) NIL)) NIL))
              NIL)
             ("2" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("5" (SKOLEM 1 "v")
      (("5" (SKOLEM 1 ("w" "x" "y" "s"))
        (("5" (LEMMA "match_match_subst_var")
          (("5" (INST -1 "tx(v)" "w" "x" "y" "s")
            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("6" (SKOLEM 1 "v")
      (("6" (SKOLEM 1 ("w" "x" "y" "s"))
        (("6" (LEMMA "match_match_subst_var")
          (("6" (INST -1 "dt(v)" "w" "x" "y" "s")
            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("7" (SKOLEM 1 "v")
      (("7" (SKOLEM 1 ("w" "x" "y" "s")) (("7" (GRIND) NIL NIL)) NIL)) NIL)
     ("8" (SKOLEM 1 "v")
      (("8" (SKOLEM 1 ("w" "x" "y" "s"))
        (("8" (LEMMA "match_match_subst_var")
          (("8" (INST -1 "vm(v)" "w" "x" "y" "s")
            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("9" (SKOLEM 1 ("a" "b"))
      (("9" (FLATTEN)
        (("9" (SKOLEM 1 ("w" "x" "y" "s"))
          (("9" (FLATTEN)
            (("9" (EXPAND "subst" 1)
              (("9" (SMASH)
                (("1" (GRIND) NIL NIL)
                 ("2" (DECOMPOSE-EQUALITY 2)
                  (("1" (INST -1 "fst(w)" "pr(b, x)" "pr(snd(w), y)" "s")
                    (("1" (DELETE -2)
                      (("1" (SMASH)
                        (("1" (EXPAND "match" -1 1)
                          (("1" (SMASH)
                            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                             ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL)
                             ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "match" -2 2)
                          (("2" (EXPAND "match" 2 1)
                            (("2" (SMASH)
                              (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                               ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL)
                               ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL)
                               ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL)
                               ("9" (GRIND) NIL NIL) ("10" (GRIND) NIL NIL)
                               ("11" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (EXPAND "match" -1) (("3" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (DELETE -1)
                    (("2" (EXPAND "match" 1 2)
                      (("2" (SMASH)
                        (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                         ("3" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("10" (SKOLEM 1 ("a" "b"))
      (("10" (FLATTEN)
        (("10" (SKOLEM 1 ("w" "x" "y" "s"))
          (("10" (FLATTEN)
            (("10" (EXPAND "subst" 1)
              (("10" (SMASH)
                (("1" (GRIND) NIL NIL)
                 ("2" (DECOMPOSE-EQUALITY 2)
                  (("1" (DELETE -2)
                    (("1" (INST -1 "plt(w)" "pr(b, x)" "pr(ky(w), y)" "s")
                      (("1" (SMASH)
                        (("1" (EXPAND "match" -1 1)
                          (("1" (SMASH)
                            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                             ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL)
                             ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "match" 2 1) (("2" (GRIND) NIL NIL)) NIL)
                         ("3" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (DELETE -1)
                    (("2" (EXPAND "match" 1 2)
                      (("2" (SMASH)
                        (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                         ("3" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg| NIL)
    (|w| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|mesg_en_extensionality| FORMULA-DECL NIL |free_alg| NIL)
    (|ky| ADT-ACCESSOR-DECL "[(enc?) -> key]" |free_alg| NIL)
    (|plt| ADT-ACCESSOR-DECL "[(enc?) -> mesg]" |free_alg| NIL)
    (|pr| ADT-CONSTRUCTOR-DECL "[[mesg, mesg] -> (pair?)]" |free_alg| NIL)
    (|w| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|mesg_pr_extensionality| FORMULA-DECL NIL |free_alg| NIL)
    (|fst| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |free_alg| NIL)
    (|snd| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |free_alg| NIL)
    (|v| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|vm| ADT-CONSTRUCTOR-DECL "[nat -> (mvar?)]" |free_alg| NIL)
    (|mvar?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|v| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|dt| ADT-CONSTRUCTOR-DECL "[nat -> (data?)]" |free_alg| NIL)
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|v| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| NIL)
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|mesg_hs_eta| FORMULA-DECL NIL |free_alg| NIL)
    (|w| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|n| ADT-ACCESSOR-DECL "[(hash?) -> mesg]" |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |free_alg| NIL)
    (|v| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg| NIL)
    (|asymkey_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|match_match_subst_var| FORMULA-DECL NIL |free_alg| NIL)
    (|subst_akey| DEF-DECL "(akey?)" |free_alg| NIL)
    (|v| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg| NIL)
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|kk| ADT-ACCESSOR-DECL "[(akey?) -> asymkey]" |free_alg| NIL)
    (|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg| NIL)
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg| NIL)
    (|match_akey_invert| FORMULA-DECL NIL |free_alg| NIL)
    (|mesg_ak_eta| FORMULA-DECL NIL |free_alg| NIL)
    (|mesg_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|match| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|subst| DEF-DECL "{x: mesg | key(m) IMPLIES key(x)}" |free_alg| NIL)
    (|key| ADT-DEF-DECL "boolean" |free_alg| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|match_subst_var| 0
  (|match_subst_var-1| NIL 3621735350
   ("" (SKOLEM 1 ("x" "y" "s"))
    (("" (TYPEPRED "x")
      (("" (GRIND)
        (("" (EXPAND "match")
          (("" (SMASH)
            (("1" (LEMMA "mesg_ak_eta") (("1" (INST?) NIL NIL)) NIL)
             ("2" (GRIND)
              (("2" (LEMMA "mesg_ak_eta") (("2" (INST?) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mesg_ak_eta| FORMULA-DECL NIL |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|match_akey| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|find_lookup| FORMULA-DECL NIL |free_alg| NIL)
    (|lookup| DEF-DECL "mesg" |free_alg| NIL)
    (|subst| DEF-DECL "{x: mesg | key(m) IMPLIES key(x)}" |free_alg| NIL)
    (|match| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|subst_akey| DEF-DECL "(akey?)" |free_alg| NIL))
   SHOSTAK))
 (|match_subst| 0
  (|match_subst-1| NIL 3621155631
   ("" (INDUCT "x")
    (("1" (SKOLEM!) (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL)
     ("2" (SKOLEM 1 "k")
      (("2" (SKOLEM 1 ("y" "s"))
        (("2" (EXPAND "subst")
          (("2" (LEMMA "match_akey_subst")
            (("2" (INST -1 "k" "kk(y)" "s")
              (("1" (CASE-REPLACE "ak(kk(y))=y")
                (("1" (GRIND) NIL NIL)
                 ("2" (DELETE -1 2)
                  (("2" (GRIND)
                    (("2" (LEMMA "mesg_ak_eta") (("2" (INST?) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKOLEM 1 "x")
      (("3" (SKOLEM!)
        (("3" (LEMMA "match_subst_var")
          (("3" (INST?)
            (("1" (SMASH) NIL NIL)
             ("2" (DELETE 2) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKOLEM 1 "h")
      (("4" (FLATTEN)
        (("4" (SKOLEM 1 ("y" "s"))
          (("4" (EXPAND "subst" 1)
            (("4" (SMASH)
              (("1" (GRIND) NIL NIL)
               ("2" (EXPAND "match" -2)
                (("2" (EXPAND "match" 2)
                  (("2" (SMASH)
                    (("2" (INST -1 "n(y)" "s")
                      (("2" (SMASH) (("2" (DECOMPOSE-EQUALITY 2) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("5" (SKOLEM!)
      (("5" (SKOLEM!)
        (("5" (LEMMA "match_subst_var")
          (("5" (INST?)
            (("1" (SMASH) NIL NIL)
             ("2" (DELETE 2) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("6" (SKOLEM!)
      (("6" (SKOLEM!)
        (("6" (LEMMA "match_subst_var")
          (("6" (INST?)
            (("1" (SMASH) NIL NIL)
             ("2" (DELETE 2) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("7" (SKOLEM!) (("7" (SKOLEM!) (("7" (GRIND) NIL NIL)) NIL)) NIL)
     ("8" (SKOLEM!)
      (("8" (SKOLEM!)
        (("8" (LEMMA "match_subst_var")
          (("8" (INST?)
            (("1" (SMASH) NIL NIL)
             ("2" (DELETE 2) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("9" (SKOLEM 1 ("x" "y"))
      (("9" (FLATTEN)
        (("9" (SKOLEM 1 ("z" "s"))
          (("9" (EXPAND "subst" 1)
            (("9" (SMASH)
              (("1" (GRIND) NIL NIL)
               ("2" (EXPAND "match" -3)
                (("2" (EXPAND "match" 2)
                  (("2" (SMASH)
                    (("2" (INST -1 "fst(z)" "s")
                      (("2" (SMASH)
                        (("2" (INST -3 "snd(z)" "down(match(x, fst(z), s))")
                          (("2" (SMASH)
                            (("2" (REPLACE -4)
                              (("2"
                                (CASE-REPLACE
                                 "subst(x, down(match(y, snd(z), down(match(x, fst(z), s)))))=fst(z)")
                                (("1" (DELETE - 1)
                                  (("1" (GRIND)
                                    (("1" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (DELETE 2 3 -4 -5)
                                  (("2" (LEMMA "match_match_subst")
                                    (("2"
                                      (INST -1 "x" "fst(z)" "y" "snd(z)" "s")
                                      (("2" (SMASH) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("10" (SKOLEM 1 ("u" "v"))
      (("10" (FLATTEN)
        (("10" (SKOLEM 1 ("y" "s"))
          (("10" (EXPAND "subst" 1)
            (("10" (SMASH)
              (("1" (GRIND) NIL NIL)
               ("2" (EXPAND "match" -3)
                (("2" (EXPAND "match" 2)
                  (("2" (SMASH)
                    (("2" (INST -1 "plt(y)" "s")
                      (("2" (SMASH)
                        (("2" (INST -3 "ky(y)" "down(match(u, plt(y), s))")
                          (("2" (SMASH)
                            (("2" (REPLACE -4)
                              (("2"
                                (CASE-REPLACE
                                 "subst(u, down(match(v, ky(y), down(match(u, plt(y), s)))))=plt(y)")
                                (("1" (DECOMPOSE-EQUALITY 2) NIL NIL)
                                 ("2" (DELETE 2 3 -4 -5)
                                  (("2" (LEMMA "match_match_subst")
                                    (("2"
                                      (INST -1 "u" "plt(y)" "v" "ky(y)" "s")
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|plt| ADT-ACCESSOR-DECL "[(enc?) -> mesg]" |free_alg| NIL)
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|ky| ADT-ACCESSOR-DECL "[(enc?) -> key]" |free_alg| NIL)
    (|mesg_en_extensionality| FORMULA-DECL NIL |free_alg| NIL)
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg| NIL)
    (|fst| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |free_alg| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|snd| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |free_alg| NIL)
    (|match_match_subst| FORMULA-DECL NIL |free_alg| NIL)
    (|mesg_pr_extensionality| FORMULA-DECL NIL |free_alg| NIL)
    (|pr| ADT-CONSTRUCTOR-DECL "[[mesg, mesg] -> (pair?)]" |free_alg| NIL)
    (|vm1_var!1| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|vm| ADT-CONSTRUCTOR-DECL "[nat -> (mvar?)]" |free_alg| NIL)
    (|mvar?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|dt1_var!1| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|dt| ADT-CONSTRUCTOR-DECL "[nat -> (data?)]" |free_alg| NIL)
    (|data?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|tx1_var!1| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| NIL)
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|n| ADT-ACCESSOR-DECL "[(hash?) -> mesg]" |free_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|mesg_hs_extensionality| FORMULA-DECL NIL |free_alg| NIL)
    (|hs| ADT-CONSTRUCTOR-DECL "[mesg -> (hash?)]" |free_alg| NIL)
    (|match_subst_var| FORMULA-DECL NIL |free_alg| NIL)
    (|x| SKOLEM-CONST-DECL "nat" |free_alg| NIL)
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|kk| ADT-ACCESSOR-DECL "[(akey?) -> asymkey]" |free_alg| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|y| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|mesg_ak_eta| FORMULA-DECL NIL |free_alg| NIL)
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg| NIL)
    (|match_akey_subst| FORMULA-DECL NIL |free_alg| NIL)
    (|mesg_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|match| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|subst| DEF-DECL "{x: mesg | key(m) IMPLIES key(x)}" |free_alg| NIL)
    (|key| ADT-DEF-DECL "boolean" |free_alg| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL))
   SHOSTAK))
 (|mvar_match_subst_TCC1| 0
  (|mvar_match_subst_TCC1-1| NIL 3622183449 ("" (SUBTYPE-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)) NIL))
 (|mvar_match_subst_TCC2| 0
  (|mvar_match_subst_TCC2-1| NIL 3622183449 ("" (SUBTYPE-TCC) NIL NIL)
   ((|vari?| CONST-DECL "bool" |free_alg| NIL)) NIL))
 (|mvar_match_subst| 0
  (|mvar_match_subst-1| NIL 3622183465
   ("" (SKOLEM 1 ("v" "_" "_" "_"))
    (("" (TYPEPRED "v")
      (("" (INDUCT "x")
        (("1" (SMASH) NIL NIL)
         ("2" (SKOLEM 1 "x")
          (("2" (SKOLEM 1 ("y" "s"))
            (("2" (FLATTEN)
              (("2" (DELETE 1)
                (("2" (EXPAND "match")
                  (("2" (SMASH)
                    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                     ("3" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (SKOLEM 1 "x")
          (("3" (SKOLEM 1 ("y" "s")) (("3" (GRIND) NIL NIL)) NIL)) NIL)
         ("4" (SKOLEM 1 "x")
          (("4" (FLATTEN)
            (("4" (SKOLEM 1 ("y" "s"))
              (("4" (FLATTEN)
                (("4" (INST -1 "n(y)" "s")
                  (("1" (EXPAND "match" -2)
                    (("1" (SMASH)
                      (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                       ("3" (SKOLEM -1 "u")
                        (("3" (INST 2 "u")
                          (("3" (EXPAND "match" 2)
                            (("3" (EXPAND "vars" 2)
                              (("3" (SMASH)
                                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                                 ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL)
                                 ("5" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL)
                       ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL)
                       ("8" (GRIND) NIL NIL))
                      NIL))
                    NIL)
                   ("2" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("5" (SKOLEM 1 "x")
          (("5" (SKOLEM 1 ("y" "s"))
            (("5" (FLATTEN) (("5" (DELETE 1) (("5" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("6" (SKOLEM 1 "x")
          (("6" (SKOLEM 1 ("y" "s"))
            (("6" (FLATTEN) (("6" (DELETE 1) (("6" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("7" (SKOLEM 1 "x")
          (("7" (SKOLEM 1 ("y" "s")) (("7" (GRIND) NIL NIL)) NIL)) NIL)
         ("8" (SKOLEM 1 "x")
          (("8" (SKOLEM 1 ("y" "s"))
            (("8" (FLATTEN)
              (("8" (INST 1 "vm(x)")
                (("8" (SMASH)
                  (("1" (LEMMA "match_subst")
                    (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL)
                   ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("9" (SKOLEM 1 ("a" "b"))
          (("9" (FLATTEN)
            (("9" (SKOLEM 1 ("y" "s"))
              (("9" (FLATTEN)
                (("9" (EXPAND "match" -3)
                  (("9" (SMASH)
                    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                     ("3" (EXPAND "vars" -5)
                      (("3" (SPLIT)
                        (("1" (INST -2 "fst(y)" "s")
                          (("1" (SMASH)
                            (("1" (SKOLEM -3 "u")
                              (("1" (FLATTEN)
                                (("1" (INST 2 "u")
                                  (("1" (EXPAND "vars" 2 1)
                                    (("1" (EXPAND "match" 2)
                                      (("1" (LEMMA "match_find")
                                        (("1"
                                          (INST -1 "u"
                                           "down(find(u, down(match(a, fst(y), s))))"
                                           "b" "snd(y)"
                                           "down(match(a, fst(y), s))")
                                          (("1" (SMASH)
                                            (("1" (DELETE -7)
                                              (("1" (EXPAND "subst")
                                                (("1" (SMASH)
                                                  (("1" (REPLACE -1)
                                                    (("1"
                                                      (CASE-REPLACE
                                                       "up(down(find(u, down(match(a, fst(y), s)))))=find(u, down(match(a, fst(y), s)))")
                                                      (("1"
                                                        (DECOMPOSE-EQUALITY 1)
                                                        NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (GRIND) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (DECOMPOSE-EQUALITY 1) NIL
                                              NIL)
                                             ("3" (DECOMPOSE-EQUALITY 1) NIL
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (INST -3 "snd(y)" "down(match(a, fst(y), s))")
                          (("2" (DELETE -2)
                            (("2" (SMASH)
                              (("2" (SKOLEM -3 "u")
                                (("2" (INST 3 "u")
                                  (("2" (EXPAND "match" 3)
                                    (("2" (SMASH)
                                      (("2" (EXPAND "vars" 3)
                                        (("2" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("10" (SKOLEM 1 ("a" "b"))
          (("10" (FLATTEN)
            (("10" (SKOLEM 1 ("y" "s"))
              (("10" (FLATTEN)
                (("10" (EXPAND "match" -3)
                  (("10" (SMASH)
                    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                     ("3" (EXPAND "vars" -5)
                      (("3" (EXPAND "match" 3)
                        (("3" (EXPAND "vars" 3 1)
                          (("3" (SMASH)
                            (("1" (DELETE -2 1)
                              (("1" (INST -1 "plt(y)" "s")
                                (("1" (SMASH)
                                  (("1" (SKOLEM -3 "u")
                                    (("1" (FLATTEN)
                                      (("1" (LEMMA "match_find")
                                        (("1"
                                          (INST -1 "u"
                                           "down(find(u, down(match(a, plt(y), s))))"
                                           "b" "ky(y)"
                                           "down(match(a, plt(y), s))")
                                          (("1" (SMASH)
                                            (("1"
                                              (CASE-REPLACE
                                               "up(down(find(u, down(match(a, plt(y), s)))))=find(u, down(match(a, plt(y), s)))")
                                              (("1" (INST 1 "u")
                                                (("1" (REPLACE -2)
                                                  (("1" (EXPAND "subst")
                                                    (("1" (SMASH)
                                                      (("1" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (DECOMPOSE-EQUALITY 1) NIL
                                                NIL))
                                              NIL)
                                             ("2" (DECOMPOSE-EQUALITY 1) NIL
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (DELETE -1 1)
                              (("2"
                                (INST -1 "ky(y)" "down(match(a, plt(y), s))")
                                (("2" (SMASH)
                                  (("2" (SKOLEM -3 "u")
                                    (("2" (INST 2 "u") (("2" (SMASH) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("11" (GRIND) NIL NIL) ("12" (GRIND) NIL NIL) ("13" (GRIND) NIL NIL)
         ("14" (GRIND) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|mvar?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|ky| ADT-ACCESSOR-DECL "[(enc?) -> key]" |free_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|u| SKOLEM-CONST-DECL "(mvar?)" |free_alg| NIL)
    (|a| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|y| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|s| SKOLEM-CONST-DECL "subst" |free_alg| NIL)
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|plt| ADT-ACCESSOR-DECL "[(enc?) -> mesg]" |free_alg| NIL)
    (|fst| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |free_alg| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|snd| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |free_alg| NIL)
    (|u| SKOLEM-CONST-DECL "(mvar?)" |free_alg| NIL)
    (|a| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|y| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|s| SKOLEM-CONST-DECL "subst" |free_alg| NIL)
    (|up| ADT-CONSTRUCTOR-DECL "[T -> (up?)]" |lift_adt| NIL)
    (|lift_up_extensionality| FORMULA-DECL NIL |lift_adt| NIL)
    (|match_find| FORMULA-DECL NIL |free_alg| NIL)
    (|match_subst| FORMULA-DECL NIL |free_alg| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|vm| ADT-CONSTRUCTOR-DECL "[nat -> (mvar?)]" |free_alg| NIL)
    (|n| ADT-ACCESSOR-DECL "[(hash?) -> mesg]" |free_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|y| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|find_lookup| FORMULA-DECL NIL |free_alg| NIL)
    (|y| SKOLEM-CONST-DECL "mesg" |free_alg| NIL)
    (|mesg_induction| FORMULA-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|subst| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |lift_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|match| DEF-DECL "lift[subst]" |free_alg| NIL)
    (|v| SKOLEM-CONST-DECL "(mvar?)" |free_alg| NIL)
    (|vars| DEF-DECL "bool" |free_alg| NIL)
    (|find| DEF-DECL "lift[mesg]" |free_alg| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|subst| DEF-DECL "{x: mesg | key(m) IMPLIES key(x)}" |free_alg| NIL)
    (|key| ADT-DEF-DECL "boolean" |free_alg| NIL))
   SHOSTAK))
 (|position?_TCC1| 0
  (|position?_TCC1-1| NIL 3621108034 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)) NIL))
 (|position?_TCC2| 0
  (|position?_TCC2-1| NIL 3621108034 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)) NIL))
 (|position?_TCC3| 0
  (|position?_TCC3-1| NIL 3621108034 ("" (TERMINATION-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|position?_TCC4| 0
  (|position?_TCC4-1| NIL 3621108034 ("" (TERMINATION-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |free_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL))
   NIL))
 (|position?_TCC5| 0
  (|position?_TCC5-1| NIL 3621108034 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)) NIL))
 (|akey_term_at_TCC1| 0
  (|akey_term_at_TCC1-1| NIL 3621108034
   ("" (SKOLEM 1 ("k" "p" "d" "r"))
    (("" (FLATTEN)
      (("" (TYPEPRED "p")
        (("" (EXPAND "akey_position?") (("" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|akey_position?| DEF-DECL "bool" |free_alg| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|akey_term_at_TCC2| 0
  (|akey_term_at_TCC2-1| NIL 3621108034
   ("" (SKOLEM 1 ("k" "p" "d" "r"))
    (("" (FLATTEN)
      (("" (TYPEPRED "p")
        (("" (EXPAND "akey_position?" -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|akey_position?| DEF-DECL "bool" |free_alg| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|akey_term_at_TCC3| 0
  (|akey_term_at_TCC3-1| NIL 3621108034 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[asymkey])" |free_alg| NIL)
    (|akey_position?| DEF-DECL "bool" |free_alg| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|asymkey| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|term_at_TCC1| 0
  (|term_at_TCC1-1| NIL 3621108034
   ("" (SKOLEM 1 ("m" "p" "d" "r"))
    (("" (FLATTEN)
      (("" (SKOLEM 1 ("f" "s"))
        (("" (TYPEPRED "p")
          (("" (EXPAND "position?" -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|position?| DEF-DECL "bool" |free_alg| NIL)
    (|position| TYPE-EQ-DECL NIL |free_alg| NIL))
   NIL))
 (|term_at_TCC2| 0
  (|term_at_TCC2-1| NIL 3621108034
   ("" (SKOLEM 1 ("m" "p" "d" "r"))
    (("" (FLATTEN)
      (("" (SKOLEM 1 ("f" "s"))
        (("" (TYPEPRED "p")
          (("" (EXPAND "position?" -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|position?| DEF-DECL "bool" |free_alg| NIL)
    (|position| TYPE-EQ-DECL NIL |free_alg| NIL))
   NIL))
 (|term_at_TCC3| 0
  (|term_at_TCC3-1| NIL 3621108034
   ("" (SKOLEM 1 ("m" "p" "d" "r"))
    (("" (FLATTEN)
      (("" (SKOLEM 1 ("t" "k"))
        (("" (TYPEPRED "p")
          (("" (EXPAND "position?" -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|position?| DEF-DECL "bool" |free_alg| NIL)
    (|position| TYPE-EQ-DECL NIL |free_alg| NIL))
   NIL))
 (|term_at_TCC4| 0
  (|term_at_TCC4-1| NIL 3621108034
   ("" (SKOLEM 1 ("m" "p" "d" "r"))
    (("" (TYPEPRED "p")
      (("" (FLATTEN)
        (("" (SKOLEM 1 ("t" "k"))
          (("" (EXPAND "position?" -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|position?| DEF-DECL "bool" |free_alg| NIL)
    (|position| TYPE-EQ-DECL NIL |free_alg| NIL))
   NIL))
 (|term_at_TCC5| 0
  (|term_at_TCC5-1| NIL 3621108034
   ("" (SKOLEM 1 ("m" "p" "d" "r"))
    (("" (FLATTEN)
      (("" (SKOLEM 1 "t")
        (("" (TYPEPRED "p")
          (("" (EXPAND "position?" -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|position?| DEF-DECL "bool" |free_alg| NIL)
    (|position| TYPE-EQ-DECL NIL |free_alg| NIL))
   NIL))
 (|term_at_TCC6| 0
  (|term_at_TCC6-1| NIL 3621108034 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |free_alg| NIL)
    (|position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|position?| DEF-DECL "bool" |free_alg| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|term_at_TCC7| 0
  (|term_at_TCC7-1| NIL 3621108034
   ("" (SKOLEM 1 ("m" "p" "d" "r"))
    (("" (FLATTEN)
      (("" (TYPEPRED "p")
        (("" (EXPAND "position?" -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|akey_position?| DEF-DECL "bool" |free_alg| NIL)
    (|position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|position?| DEF-DECL "bool" |free_alg| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|term_at_TCC8| 0
  (|term_at_TCC8-1| NIL 3621108034
   ("" (SKOLEM 1 ("m" "p" "d" "r"))
    (("" (FLATTEN)
      (("" (TYPEPRED "p")
        (("" (EXPAND "position?" -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|akey_position?| DEF-DECL "bool" |free_alg| NIL)
    (|position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|position?| DEF-DECL "bool" |free_alg| NIL)
    (|pre_position| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|direction| TYPE-DECL NIL |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL)))

