(|bridge|
 (|prefix_boot_extend_bridge| 0
  (|prefix_boot_extend_bridge-1| NIL 3598742748
   ("" (SKOLEM 1 ("bu" "n0" "n1" "x"))
    (("" (SMASH)
      (("" (TYPEPRED "bu")
        (("" (EXPAND "bundle?")
          (("" (EXPAND "well_formed_next?")
            (("" (FLATTEN)
              (("" (DELETE -1 -2 -3 -4 -5)
                (("" (SKOLEM -1 ("i" "f"))
                  (("" (EXPAND "bijective?")
                    (("" (FLATTEN)
                      (("" (SKOLEM -4 "p")
                        (("" (LEMMA "next_prec_ordered")
                          (("" (INST?)
                            (("" (EXPAND "bijective?")
                              (("" (SMASH)
                                (("1" (DELETE -1)
                                  (("1" (INST-CP -1 "n0" "n1")
                                    (("1" (INST-CP -5 "n0")
                                      (("1" (INST-CP -5 "n1")
                                        (("1" (REPLACE -6)
                                          (("1" (REPLACE -7)
                                            (("1" (SMASH)
                                              (("1" (DELETE -7 -8)
                                                (("1"
                                                  (LEMMA "prefix_boot_extend")
                                                  (("1"
                                                    (INST -1 "p" "x" "1+f(n0)"
                                                     "f(n1)")
                                                    (("1" (SMASH)
                                                      (("1" (SKOLEM -2 "j")
                                                        (("1" (FLATTEN)
                                                          (("1"
                                                            (EXPAND
                                                             "surjective?")
                                                            (("1" (INST -9 "j")
                                                              (("1"
                                                                (SKOLEM -9
                                                                 "n2")
                                                                (("1"
                                                                  (REPLACE -9
                                                                           :DIR
                                                                           RL)
                                                                  (("1"
                                                                    (INST 2
                                                                     "n2"
                                                                     "p(f(n2))")
                                                                    (("1"
                                                                      (INST-CP
                                                                       -5 "n0"
                                                                       "n2")
                                                                      (("1"
                                                                        (INST-CP
                                                                         -5
                                                                         "n2"
                                                                         "n1")
                                                                        (("1"
                                                                          (INST
                                                                           -12
                                                                           "n2")
                                                                          (("1"
                                                                            (REPLACE
                                                                             -12)
                                                                            (("1"
                                                                              (SMASH)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (SMASH) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|next_prec_ordered| FORMULA-DECL NIL |bundles| "../transitions/")
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|prefix_boot_extend| FORMULA-DECL NIL |state| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|j| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (|i| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|path?| CONST-DECL "bool" |paths| "../transitions/")
    (|path| TYPE-EQ-DECL NIL |paths| "../transitions/")
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../transitions/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|trans| CONST-DECL "bool" |state| NIL) (|state| TYPE-DECL NIL |state| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|init_extend_bridge| 0
  (|init_extend_bridge-1| NIL 3598811811
   ("" (SKOLEM 1 ("bu" "n" "st" "x"))
    (("" (FLATTEN)
      (("" (TYPEPRED "bu")
        (("" (EXPAND "bundle?")
          (("" (EXPAND "well_formed_next?")
            (("" (EXPAND "bijective?")
              (("" (FLATTEN)
                (("" (DELETE -1 -2 -3 -4 -5)
                  (("" (SKOLEM -1 ("i" "f"))
                    (("" (FLATTEN)
                      (("" (SKOLEM -4 "p")
                        (("" (LEMMA "next_prec_ordered")
                          (("" (INST?)
                            (("" (EXPAND "bijective?")
                              (("" (SMASH)
                                (("1" (DELETE -1)
                                  (("1" (INST-CP -4 "n")
                                    (("1" (REPLACE -5)
                                      (("1" (SMASH)
                                        (("1" (DELETE -5)
                                          (("1" (LEMMA "init_extend")
                                            (("1" (INST -1 "p" "x" "st" "f(n)")
                                              (("1" (SMASH)
                                                (("1" (SKOLEM -2 "j")
                                                  (("1" (EXPAND "surjective?")
                                                    (("1" (INST -5 "j")
                                                      (("1" (SKOLEM -5 "n1")
                                                        (("1"
                                                          (REPLACE -5 :DIR RL)
                                                          (("1" (INST -6 "n1")
                                                            (("1"
                                                              (INST -3 "n1"
                                                               "n")
                                                              (("1"
                                                                (INST 1 "n1")
                                                                (("1" (SMASH)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SMASH) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|bijective?| CONST-DECL "bool" |functions| NIL)
    (|next_prec_ordered| FORMULA-DECL NIL |bundles| "../transitions/")
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|path| TYPE-EQ-DECL NIL |paths| "../transitions/")
    (|path?| CONST-DECL "bool" |paths| "../transitions/")
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|j| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (|i| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|init_extend| FORMULA-DECL NIL |state| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../transitions/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|trans| CONST-DECL "bool" |state| NIL) (|state| TYPE-DECL NIL |state| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|prefix_extend_bridge| 0
  (|prefix_extend_bridge-1| NIL 3599880583
   ("" (SKOLEM 1 ("bu" "n0" "n1" "st" "x"))
    (("" (SMASH)
      (("" (TYPEPRED "bu")
        (("" (EXPAND "bundle?")
          (("" (EXPAND "well_formed_next?")
            (("" (FLATTEN)
              (("" (DELETE -1 -2 -3 -4 -5)
                (("" (SKOLEM -1 ("i" "f"))
                  (("" (FLATTEN)
                    (("" (SKOLEM -3 "p")
                      (("" (LEMMA "next_prec_ordered")
                        (("" (INST?)
                          (("" (SMASH)
                            (("" (DELETE -2)
                              (("" (EXPAND "bijective?")
                                (("" (INST-CP -2 "n0" "n1")
                                  (("" (INST-CP -4 "n0")
                                    (("" (INST-CP -4 "n1")
                                      (("" (REPLACE -5)
                                        (("" (REPLACE -6)
                                          (("" (DELETE -5 -6)
                                            (("" (SMASH)
                                              (("" (LEMMA "prefix_extend")
                                                ((""
                                                  (INST -1 "p" "x" "st"
                                                   "1+f(n0)" "f(n1)")
                                                  (("" (SMASH)
                                                    (("" (SKOLEM -2 "j")
                                                      ((""
                                                        (EXPAND "surjective?")
                                                        (("" (INST -4 "j")
                                                          (("1"
                                                            (SKOLEM -4 "n2")
                                                            (("1"
                                                              (REPLACE -4 :DIR
                                                                       RL)
                                                              (("1"
                                                                (INST-CP -5
                                                                 "n0" "n2")
                                                                (("1"
                                                                  (INST-CP -5
                                                                   "n2" "n1")
                                                                  (("1"
                                                                    (INST -10
                                                                     "n2")
                                                                    (("1"
                                                                      (INST 2
                                                                       "n2")
                                                                      (("1"
                                                                        (REPLACE
                                                                         -10)
                                                                        (("1"
                                                                          (SMASH)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (SMASH) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|event| TYPE-DECL NIL |traces| "../transitions/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|path| TYPE-EQ-DECL NIL |paths| "../transitions/")
    (|path?| CONST-DECL "bool" |paths| "../transitions/")
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|j| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (|i| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|prefix_extend| FORMULA-DECL NIL |state| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|next_prec_ordered| FORMULA-DECL NIL |bundles| "../transitions/")
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|trans| CONST-DECL "bool" |state| NIL) (|state| TYPE-DECL NIL |state| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|exists_extend_strand| 0
  (|exists_extend_strand-1| NIL 3598746802
   ("" (SKOLEM 1 ("bu" "n" "st" "x"))
    (("" (FLATTEN)
      (("" (TYPEPRED "bu")
        (("" (EXPAND "run?")
          (("" (SKOLEM -2 "pa")
            (("" (TYPEPRED "pa")
              (("" (EXPAND "protocol_assignment?")
                (("" (INST -2 "n`1")
                  (("" (EXPAND "role_assignment?")
                    (("" (INST -1 "n`1")
                      (("" (EXPAND "member")
                        (("" (LEMMA "enumerate_protocol_roles")
                          (("" (INST?)
                            (("" (SKOLEM -2 "ri")
                              (("" (TYPEPRED "ri")
                                (("" (SMASH)
                                  (("1" (REPLACE -3)
                                    (("1" (DELETE 1 -2 -3)
                                      (("1" (EXPAND "boot_role")
                                        (("1" (SKOLEM -1 "st0")
                                          (("1" (REPLACE -1)
                                            (("1" (DELETE -1 -3)
                                              (("1" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (REPLACE -3)
                                    (("2" (DELETE -2 -3 -5)
                                      (("2" (EXPAND "extend_role")
                                        (("2" (SKOLEM -1 ("st0" "x0"))
                                          (("2" (REPLACE -1)
                                            (("2" (DELETE -1)
                                              (("2" (CASE "n`2=1")
                                                (("1" (TYPEPRED "n")
                                                  (("1" (DELETE -4 1)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (EXPAND "extend_role_item")
                                                  (("2" (DELETE -2)
                                                    (("2" (SMASH)
                                                      (("2" (TYPEPRED "n")
                                                        (("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("3" (REPLACE -3)
                                    (("3" (DELETE -2 -3 -5 1)
                                      (("3" (EXPAND "quote_role")
                                        (("3" (SKOLEM!)
                                          (("3" (REPLACE -1)
                                            (("3" (DELETE -1)
                                              (("3" (TYPEPRED "n")
                                                (("3" (CASE "n`2=1")
                                                  (("1" (EXPAND "sync_at")
                                                    (("1" (EXPAND "event_at")
                                                      (("1"
                                                        (EXPAND
                                                         "quote_role_item")
                                                        (("1" (REPLACE -1)
                                                          (("1" (SMASH)
                                                            (("1"
                                                              (CASE
                                                                  "t(finseq_appl(finseq_appl[trace[state, trans, mesg, carried_by?, pcr]]
                        (bu`space)(n`1))
                   (1)) = (st!1,st!1)")
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1"
                                                                  (DELETE -1 -2
                                                                          -3
                                                                          -4)
                                                                  (("1"
                                                                    (DECOMPOSE-EQUALITY)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "no_circularity_in_extend")
                                                                      (("1"
                                                                        (INST?)
                                                                        (("1"
                                                                          (SMASH)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (DELETE -1 -2
                                                                        -4)
                                                                (("2" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (GRIND) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("4" (TYPEPRED "n")
                                    (("4" (DELETE -3 -6 -7 1)
                                      (("4" (LEMMA "enumerate_adversary_roles")
                                        (("4" (INST?)
                                          (("4" (SMASH)
                                            (("1" (REPLACE -2)
                                              (("1" (DELETE -1 -2)
                                                (("1" (EXPAND "create_role")
                                                  (("1" (SKOLEM!)
                                                    (("1" (REPLACE -2)
                                                      (("1" (DELETE -2)
                                                        (("1" (SMASH)
                                                          (("1" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (REPLACE -2)
                                              (("2" (DELETE -1 -2)
                                                (("2" (EXPAND "tag_role")
                                                  (("2" (SKOLEM!)
                                                    (("2" (REPLACE -2)
                                                      (("2" (DELETE -2)
                                                        (("2" (SMASH)
                                                          (("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("3" (REPLACE -2)
                                              (("3" (DELETE -1 -2)
                                                (("3" (EXPAND "hash_role")
                                                  (("3" (SKOLEM!)
                                                    (("3" (REPLACE -2)
                                                      (("3" (DELETE -2)
                                                        (("3" (SMASH)
                                                          (("3" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("4" (REPLACE -2)
                                              (("4" (DELETE -2 -1)
                                                (("4" (EXPAND "pair_role")
                                                  (("4" (SKOLEM!)
                                                    (("4" (REPLACE -2)
                                                      (("4" (DELETE -2)
                                                        (("4" (SMASH)
                                                          (("4" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("5" (REPLACE -2)
                                              (("5" (DELETE -1 -2)
                                                (("5" (EXPAND "sep_role")
                                                  (("5" (SKOLEM!)
                                                    (("5" (REPLACE -2)
                                                      (("5" (DELETE -2)
                                                        (("5" (SMASH)
                                                          (("5" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("6" (REPLACE -2)
                                              (("6" (DELETE -1 -2)
                                                (("6" (EXPAND "enc_role")
                                                  (("6" (SKOLEM!)
                                                    (("6" (REPLACE -2)
                                                      (("6" (DELETE -2)
                                                        (("6" (SMASH)
                                                          (("6" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("7" (REPLACE -2)
                                              (("7" (DELETE -1 -2)
                                                (("7" (EXPAND "dec_role")
                                                  (("7" (SKOLEM!)
                                                    (("7" (REPLACE -2)
                                                      (("7" (DELETE -2)
                                                        (("7" (SMASH)
                                                          (("7" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../transitions/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../transitions/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../transitions/")
    (|enumerate_protocol_roles| FORMULA-DECL NIL |protocol_roles| NIL)
    (|extend_inst_rew| FORMULA-DECL NIL |strands| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|boot_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../transitions/")
    (|simple_role_item| CONST-DECL "role_item" |roles| "../transitions/")
    (|boot_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|appears_index?| CONST-DECL "bool" |traces| "../transitions/")
    (|appears_at?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../transitions/")
    (|start_node?| CONST-DECL "bool" |bundles| "../transitions/")
    (|sync_at| CONST-DECL "(trans)" |strand_spaces| "../transitions/")
    (|starts_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|originates_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|non| CONST-DECL "bool" |bundles| "../transitions/")
    (|uniq| CONST-DECL "bool" |bundles| "../transitions/")
    (|inst| CONST-DECL "bool" |roles| "../transitions/")
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|boot_role| CONST-DECL "bool" |protocol_roles| NIL)
    (|simple_inst| FORMULA-DECL NIL |roles| "../transitions/")
    (|extend_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|extend_role| CONST-DECL "bool" |protocol_roles| NIL)
    (|t| ADT-ACCESSOR-DECL "[(sync?) -> (trans)]" |traces| "../transitions/")
    (|sync?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces|
     "../transitions/")
    (|no_circularity_in_extend| FORMULA-DECL NIL |state| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|extend?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|extend| ADT-CONSTRUCTOR-DECL "[[mesg, state] -> (extend?)]" |state| NIL)
    (|quote_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|make_quote| CONST-DECL "mesg" |protocol_roles| NIL)
    (|quote| CONST-DECL "tag" |protocol_roles| NIL)
    (|quote_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|quote_role| CONST-DECL "bool" |protocol_roles| NIL)
    (|dec_role| CONST-DECL "bool" |adversary| "../transitions/")
    (|invk| CONST-DECL "key" |init_alg| "../strand_spaces/")
    (|dec_trace| CONST-DECL "trace" |adversary| "../transitions/")
    (|enc_role| CONST-DECL "bool" |adversary| "../transitions/")
    (|enc_trace| CONST-DECL "trace" |adversary| "../transitions/")
    (|sep_role| CONST-DECL "bool" |adversary| "../transitions/")
    (|sep_trace| CONST-DECL "trace" |adversary| "../transitions/")
    (|pair_role| CONST-DECL "bool" |adversary| "../transitions/")
    (|pair_trace| CONST-DECL "trace" |adversary| "../transitions/")
    (|hash_role| CONST-DECL "bool" |adversary| "../transitions/")
    (|hash_trace| CONST-DECL "trace" |adversary| "../transitions/")
    (|tag_role| CONST-DECL "bool" |adversary| "../transitions/")
    (|tag_trace| CONST-DECL "trace" |adversary| "../transitions/")
    (|create_role| CONST-DECL "bool" |adversary| "../transitions/")
    (|create_trace| CONST-DECL "trace" |adversary| "../transitions/")
    (|enumerate_adversary_roles| FORMULA-DECL NIL |adversary|
     "../transitions/")
    (|member| CONST-DECL "bool" |sets| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../transitions/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|trans| CONST-DECL "bool" |state| NIL) (|state| TYPE-DECL NIL |state| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|init_extend_implies_extend_strand_TCC1| 0
  (|init_extend_implies_extend_strand_TCC1-1| NIL 3598807142
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|extend_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../transitions/")
    (|inst| CONST-DECL "bool" |roles| "../transitions/")
    (|uniq| CONST-DECL "bool" |bundles| "../transitions/")
    (|non| CONST-DECL "bool" |bundles| "../transitions/")
    (|originates_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|starts_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|start_node?| CONST-DECL "bool" |bundles| "../transitions/")
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|appears_at?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|extend_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|simple_role_item| CONST-DECL "role_item" |roles| "../transitions/")
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|sync_at| CONST-DECL "(trans)" |strand_spaces| "../transitions/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../transitions/")
    (|state| TYPE-DECL NIL |state| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../transitions/")
    (|prec?| CONST-DECL "bool" |bundles| "../transitions/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../transitions/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../transitions/")
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../transitions/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../transitions/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|event| TYPE-DECL NIL |traces| "../transitions/")
    (|run| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../transitions/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|init_extend_implies_extend_strand| 0
  (|init_extend_implies_extend_strand-1| NIL 3598807142
   ("" (SKOLEM 1 ("bu" "n" "st" "x"))
    (("" (FLATTEN)
      (("" (LEMMA "init_extend_bridge")
        (("" (INST?)
          (("" (SPLIT)
            (("1" (SKOLEM -1 "n0")
              (("1" (FLATTEN)
                (("1" (LEMMA "exists_extend_strand")
                  (("1" (INST?)
                    (("1" (SPLIT)
                      (("1" (SKOLEM -1 "z")
                        (("1" (INST?)
                          (("1" (FLATTEN)
                            (("1" (REPLACE -2) (("1" (SMASH) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (PROPAX) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (PROPAX) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|state| TYPE-DECL NIL |state| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|role_item| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|role| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|protocol| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|run?| CONST-DECL "bool" |roles| "../transitions/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|event| TYPE-DECL NIL |traces| "../transitions/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|exists_extend_strand| FORMULA-DECL NIL |bridge| NIL)
    (|init_extend_bridge| FORMULA-DECL NIL |bridge| NIL))
   SHOSTAK))
 (|quote_extend_implies_extend_strand_TCC1| 0
  (|quote_extend_implies_extend_strand_TCC1-1| NIL 3598807142
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|extend_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|extend_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|quote_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../transitions/")
    (|inst| CONST-DECL "bool" |roles| "../transitions/")
    (|uniq| CONST-DECL "bool" |bundles| "../transitions/")
    (|non| CONST-DECL "bool" |bundles| "../transitions/")
    (|originates_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|starts_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|sync_at| CONST-DECL "(trans)" |strand_spaces| "../transitions/")
    (|start_node?| CONST-DECL "bool" |bundles| "../transitions/")
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../transitions/")
    (|appears_at?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|quote_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|simple_role_item| CONST-DECL "role_item" |roles| "../transitions/")
    (|state| TYPE-DECL NIL |state| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|quote_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|make_quote| CONST-DECL "mesg" |protocol_roles| NIL)
    (|quote| CONST-DECL "tag" |protocol_roles| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../transitions/")
    (|prec?| CONST-DECL "bool" |bundles| "../transitions/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../transitions/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../transitions/")
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../transitions/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../transitions/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../transitions/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|quote_extend_implies_extend_strand_TCC2| 0
  (|quote_extend_implies_extend_strand_TCC2-1| NIL 3598807142
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|extend_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|extend_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|quote_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../transitions/")
    (|inst| CONST-DECL "bool" |roles| "../transitions/")
    (|uniq| CONST-DECL "bool" |bundles| "../transitions/")
    (|non| CONST-DECL "bool" |bundles| "../transitions/")
    (|originates_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|starts_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|sync_at| CONST-DECL "(trans)" |strand_spaces| "../transitions/")
    (|start_node?| CONST-DECL "bool" |bundles| "../transitions/")
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../transitions/")
    (|appears_at?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|quote_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|simple_role_item| CONST-DECL "role_item" |roles| "../transitions/")
    (|state| TYPE-DECL NIL |state| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|quote_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|make_quote| CONST-DECL "mesg" |protocol_roles| NIL)
    (|quote| CONST-DECL "tag" |protocol_roles| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../transitions/")
    (|prec?| CONST-DECL "bool" |bundles| "../transitions/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../transitions/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../transitions/")
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../transitions/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../transitions/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../transitions/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|quote_extend_implies_extend_strand| 0
  (|quote_extend_implies_extend_strand-1| NIL 3598807726
   ("" (SKOLEM!)
    (("" (FLATTEN)
      (("" (LEMMA "quote_transition_node")
        (("" (INST?)
          (("" (SPLIT)
            (("1" (LEMMA "init_extend_implies_extend_strand")
              (("1" (INST?)
                (("1" (SPLIT)
                  (("1" (PROPAX) NIL NIL)
                   ("2" (DELETE 2) (("2" (SMASH) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (PROPAX) NIL NIL) ("3" (SMASH) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|state| TYPE-DECL NIL |state| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|role_item| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|role| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|protocol| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|run?| CONST-DECL "bool" |roles| "../transitions/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|extend?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|extend| ADT-CONSTRUCTOR-DECL "[[mesg, state] -> (extend?)]" |state| NIL)
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|init_extend_implies_extend_strand| FORMULA-DECL NIL |bridge| NIL)
    (|quote_inst_rew| FORMULA-DECL NIL |strands| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../transitions/")
    (|sync_at| CONST-DECL "(trans)" |strand_spaces| "../transitions/")
    (|quote| CONST-DECL "tag" |protocol_roles| NIL)
    (|make_quote| CONST-DECL "mesg" |protocol_roles| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|quote_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|z!1| SKOLEM-CONST-DECL
     "strand[state, trans, mesg, carried_by?, pcr](bu!1`space)" |bridge| NIL)
    (|bu!1| SKOLEM-CONST-DECL
     "run[state, boot?, trans, mesg, carried_by?, pcr](protocol_roles)"
     |bridge| NIL)
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../transitions/")
    (|quote_transition_node| FORMULA-DECL NIL |strands| NIL))
   SHOSTAK))
 (|extend_extend_implies_extend_strand_TCC1| 0
  (|extend_extend_implies_extend_strand_TCC1-1| NIL 3598949639
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|extend_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../transitions/")
    (|inst| CONST-DECL "bool" |roles| "../transitions/")
    (|uniq| CONST-DECL "bool" |bundles| "../transitions/")
    (|non| CONST-DECL "bool" |bundles| "../transitions/")
    (|originates_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|starts_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|sync_at| CONST-DECL "(trans)" |strand_spaces| "../transitions/")
    (|start_node?| CONST-DECL "bool" |bundles| "../transitions/")
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../transitions/")
    (|appears_at?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|extend_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|simple_role_item| CONST-DECL "role_item" |roles| "../transitions/")
    (|state| TYPE-DECL NIL |state| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../transitions/")
    (|prec?| CONST-DECL "bool" |bundles| "../transitions/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../transitions/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../transitions/")
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../transitions/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../transitions/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../transitions/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|extend_extend_implies_extend_strand_TCC2| 0
  (|extend_extend_implies_extend_strand_TCC2-1| NIL 3598949639
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|extend_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../transitions/")
    (|inst| CONST-DECL "bool" |roles| "../transitions/")
    (|uniq| CONST-DECL "bool" |bundles| "../transitions/")
    (|non| CONST-DECL "bool" |bundles| "../transitions/")
    (|originates_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|starts_at?| CONST-DECL "bool" |bundles| "../transitions/")
    (|sync_at| CONST-DECL "(trans)" |strand_spaces| "../transitions/")
    (|start_node?| CONST-DECL "bool" |bundles| "../transitions/")
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../transitions/")
    (|appears_at?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|extend_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|simple_role_item| CONST-DECL "role_item" |roles| "../transitions/")
    (|state| TYPE-DECL NIL |state| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../transitions/")
    (|prec?| CONST-DECL "bool" |bundles| "../transitions/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../transitions/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../transitions/")
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../transitions/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../transitions/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../transitions/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|extend_extend_implies_extend_strand| 0
  (|extend_extend_implies_extend_strand-1| NIL 3598949640
   ("" (SKOLEM 1 ("bu" "z1" "st" "x0" "x1"))
    (("" (FLATTEN)
      (("" (LEMMA "init_extend_implies_extend_strand")
        (("" (INST?)
          (("1" (SPLIT)
            (("1" (PROPAX) NIL NIL)
             ("2" (DELETE 2) (("2" (SMASH) (("2" (GRIND) NIL NIL)) NIL)) NIL))
            NIL)
           ("2" (DELETE 2)
            (("2" (LEMMA "extend_transition_node")
              (("2" (INST?) (("2" (SMASH) NIL NIL)) NIL)) NIL))
            NIL)
           ("3" (SMASH) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|tran_node?| CONST-DECL "bool" |strand_spaces| "../transitions/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|z1| SKOLEM-CONST-DECL
     "strand[state, trans, mesg, carried_by?, pcr](bu`space)" |bridge| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|bu| SKOLEM-CONST-DECL
     "run[state, boot?, trans, mesg, carried_by?, pcr](protocol_roles)"
     |bridge| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../transitions/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../transitions/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|bundle?| CONST-DECL "bool" |bundles| "../transitions/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../transitions/")
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../transitions/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../transitions/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../transitions/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|trans| CONST-DECL "bool" |state| NIL) (|state| TYPE-DECL NIL |state| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|sync_at| CONST-DECL "(trans)" |strand_spaces| "../transitions/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../transitions/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|extend_inst_rew| FORMULA-DECL NIL |strands| NIL)
    (|extend_transition_node| FORMULA-DECL NIL |strands| NIL)
    (|extend?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|extend| ADT-CONSTRUCTOR-DECL "[[mesg, state] -> (extend?)]" |state| NIL)
    (|init_extend_implies_extend_strand| FORMULA-DECL NIL |bridge| NIL))
   SHOSTAK)))

