(|blanchet|
 (|binit_trace_TCC1| 0
  (|binit_trace_TCC1-1| NIL 3622974131
   ("" (EXPAND "all_acquired?")
    (("" (SKOLEM 1 "x")
      (("" (FLATTEN)
        (("" (DELETE 1)
          (("" (TYPEPRED "x") (("" (DELETE -1) (("" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    NIL
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|recv| ADT-CONSTRUCTOR-DECL "[mesg -> (recv?)]" |traces| "../skeletons/")
    (|recv?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg|
     "../skeletons/")
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg|
     "../skeletons/")
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg|
     "../skeletons/")
    (|asymkey| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |free_alg| "../skeletons/")
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg|
     "../skeletons/")
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| "../skeletons/")
    (|key| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|send| ADT-CONSTRUCTOR-DECL "[mesg -> (send?)]" |traces| "../skeletons/")
    (|send?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences| "../skeletons/")
    (|param?| CONST-DECL "bool" |traces| "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|vari?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|all_acquired?| CONST-DECL "bool" |roles| "../skeletons/"))
   NIL))
 (|binit_role_TCC1| 0
  (|binit_role_TCC1-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|binit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|binit_role_TCC2| 0
  (|binit_role_TCC2-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|no_assumptions_length| FORMULA-DECL NIL |roles| "../skeletons/")
    (|binit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|binit_role_TCC3| 0
  (|binit_role_TCC3-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|binit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|binit_role_TCC4| 0
  (|binit_role_TCC4-1| NIL 3622974131
   ("" (EXPAND "role?")
    (("" (SMASH)
      (("1" (EXPAND "all_uniq_orig?")
        (("1" (SKOLEM 1 "i")
          (("1" (TYPEPRED "i")
            (("1" (SKOLEM 1 "x")
              (("1" (TYPEPRED "x")
                (("1" (CASE-REPLACE "i=0")
                  (("1" (CASE-REPLACE "x=sk(0)")
                    (("1" (DELETE -1 -2 -4 -5) (("1" (GRIND) NIL NIL)) NIL)
                     ("2" (DELETE -1 -4 2) (("2" (GRIND) NIL NIL)) NIL))
                    NIL)
                   ("2" (DELETE 2) (("2" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "no_rnon_assumptions")
        (("2" (INST?) (("2" (DELETE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|binit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|carried_by?| DEF-DECL "bool" |free_alg| "../skeletons/")
    (|originates_index?| CONST-DECL "bool" |traces| "../skeletons/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |free_alg| "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|singleton?| CONST-DECL "bool" |sets| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|all_uniq_orig?| CONST-DECL "bool" |roles| "../skeletons/")
    (|no_assumptions_length| FORMULA-DECL NIL |roles| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|all_acquired?| CONST-DECL "bool" |roles| "../skeletons/")
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../skeletons/")
    (|no_rnon_assumptions| FORMULA-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/"))
   NIL))
 (|bresp_trace_TCC1| 0
  (|bresp_trace_TCC1-1| NIL 3622974131
   ("" (EXPAND "all_acquired?")
    (("" (SKOLEM 1 "x")
      (("" (FLATTEN)
        (("" (DELETE 1)
          (("" (TYPEPRED "x") (("" (DELETE -1) (("" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    NIL
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|send| ADT-CONSTRUCTOR-DECL "[mesg -> (send?)]" |traces| "../skeletons/")
    (|send?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg|
     "../skeletons/")
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg|
     "../skeletons/")
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg|
     "../skeletons/")
    (|asymkey| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |free_alg| "../skeletons/")
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg|
     "../skeletons/")
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| "../skeletons/")
    (|key| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|recv| ADT-CONSTRUCTOR-DECL "[mesg -> (recv?)]" |traces| "../skeletons/")
    (|recv?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences| "../skeletons/")
    (|param?| CONST-DECL "bool" |traces| "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|vari?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|all_acquired?| CONST-DECL "bool" |roles| "../skeletons/"))
   NIL))
 (|enumerate_bprot| 0
  (|enumerate_bprot-1| NIL 3622977064
   ("" (SKOLEM 1 "r")
    (("" (EXPAND "bprot")
      (("" (EXPAND "add") (("" (EXPAND "member") (("" (SMASH) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|bprot| CONST-DECL "protocol" |blanchet| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL))
   SHOSTAK))
 (|cinit_trace_TCC1| 0
  (|cinit_trace_TCC1-1| NIL 3622974131
   ("" (EXPAND "all_acquired?")
    (("" (SKOLEM 1 "x")
      (("" (FLATTEN)
        (("" (DELETE 1) (("" (TYPEPRED "x") (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) NIL
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|recv| ADT-CONSTRUCTOR-DECL "[mesg -> (recv?)]" |traces| "../skeletons/")
    (|recv?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg|
     "../skeletons/")
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg|
     "../skeletons/")
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg|
     "../skeletons/")
    (|asymkey| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |free_alg| "../skeletons/")
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|pr| ADT-CONSTRUCTOR-DECL "[[mesg, mesg] -> (pair?)]" |free_alg|
     "../skeletons/")
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg|
     "../skeletons/")
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| "../skeletons/")
    (|key| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|send| ADT-CONSTRUCTOR-DECL "[mesg -> (send?)]" |traces| "../skeletons/")
    (|send?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences| "../skeletons/")
    (|param?| CONST-DECL "bool" |traces| "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|vari?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|all_acquired?| CONST-DECL "bool" |roles| "../skeletons/"))
   NIL))
 (|cinit_role_TCC1| 0
  (|cinit_role_TCC1-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|cinit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|cinit_role_TCC2| 0
  (|cinit_role_TCC2-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|no_assumptions_length| FORMULA-DECL NIL |roles| "../skeletons/")
    (|cinit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|cinit_role_TCC3| 0
  (|cinit_role_TCC3-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|cinit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|cinit_role_TCC4| 0
  (|cinit_role_TCC4-1| NIL 3622974131
   ("" (EXPAND "role?")
    (("" (SMASH)
      (("1" (EXPAND "all_uniq_orig?")
        (("1" (SKOLEM 1 "i")
          (("1" (SKOLEM 1 "x")
            (("1" (TYPEPRED "x")
              (("1" (CASE-REPLACE "i=0")
                (("1" (CASE-REPLACE "x=sk(0)")
                  (("1" (DELETE -4) (("1" (GRIND) NIL NIL)) NIL)
                   ("2" (DELETE 2) (("2" (GRIND) NIL NIL)) NIL))
                  NIL)
                 ("2" (DELETE 2)
                  (("2" (TYPEPRED "i") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "no_rnon_assumptions")
        (("2" (INST?) (("2" (DELETE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences| "../skeletons/")
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|singleton?| CONST-DECL "bool" |sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |free_alg| "../skeletons/")
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|originates_index?| CONST-DECL "bool" |traces| "../skeletons/")
    (|carried_by?| DEF-DECL "bool" |free_alg| "../skeletons/")
    (|cinit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|all_uniq_orig?| CONST-DECL "bool" |roles| "../skeletons/")
    (|no_assumptions_length| FORMULA-DECL NIL |roles| "../skeletons/")
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|all_acquired?| CONST-DECL "bool" |roles| "../skeletons/")
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../skeletons/")
    (|no_rnon_assumptions| FORMULA-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/"))
   NIL))
 (|cresp_trace_TCC1| 0
  (|cresp_trace_TCC1-1| NIL 3622974131
   ("" (EXPAND "all_acquired?")
    (("" (SKOLEM 1 "x")
      (("" (FLATTEN)
        (("" (DELETE 1) (("" (TYPEPRED "x") (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) NIL
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|tx| ADT-CONSTRUCTOR-DECL "[nat -> (text?)]" |free_alg| "../skeletons/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|send| ADT-CONSTRUCTOR-DECL "[mesg -> (send?)]" |traces| "../skeletons/")
    (|send?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|invert| ADT-CONSTRUCTOR-DECL "[asymkey -> (invkey?)]" |free_alg|
     "../skeletons/")
    (|invkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|asym| ADT-CONSTRUCTOR-DECL "[nat -> (asymkey?)]" |free_alg|
     "../skeletons/")
    (|asymkey?| ADT-RECOGNIZER-DECL "[asymkey -> boolean]" |free_alg|
     "../skeletons/")
    (|ak| ADT-CONSTRUCTOR-DECL "[asymkey -> (akey?)]" |free_alg|
     "../skeletons/")
    (|asymkey| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |free_alg| "../skeletons/")
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|pr| ADT-CONSTRUCTOR-DECL "[[mesg, mesg] -> (pair?)]" |free_alg|
     "../skeletons/")
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|en| ADT-CONSTRUCTOR-DECL "[[mesg, key] -> (enc?)]" |free_alg|
     "../skeletons/")
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg| "../skeletons/")
    (|key| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|recv| ADT-CONSTRUCTOR-DECL "[mesg -> (recv?)]" |traces| "../skeletons/")
    (|recv?| ADT-RECOGNIZER-DECL "[event -> boolean]" |traces| "../skeletons/")
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|nmtfinseq| TYPE-EQ-DECL NIL |nonempty_finite_sequences| "../skeletons/")
    (|param?| CONST-DECL "bool" |traces| "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|vari?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|all_acquired?| CONST-DECL "bool" |roles| "../skeletons/"))
   NIL))
 (|enumerate_cprot| 0
  (|enumerate_cprot-1| NIL 3622977127
   ("" (SKOLEM 1 "r")
    (("" (EXPAND "cprot")
      (("" (EXPAND "add") (("" (EXPAND "member") (("" (SMASH) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|cprot| CONST-DECL "protocol" |blanchet| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL))
   SHOSTAK))
 (|pmap_TCC1| 0
  (|pmap_TCC1-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|bprot| CONST-DECL "protocol" |blanchet| NIL)
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../skeletons/")
    (|dec_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|dec_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|sep_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|pair_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|hash_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_data| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_text| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|bresp_role| CONST-DECL "role" |blanchet| NIL)
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|bresp_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|binit_role| CONST-DECL "role" |blanchet| NIL)
    (|binit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|cinit_role| CONST-DECL "role" |blanchet| NIL)
    (|cinit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|pmap_TCC2| 0
  (|pmap_TCC2-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|bprot| CONST-DECL "protocol" |blanchet| NIL)
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../skeletons/")
    (|dec_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|dec_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|sep_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|pair_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|hash_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_data| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_text| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|bresp_role| CONST-DECL "role" |blanchet| NIL)
    (|bresp_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|binit_role| CONST-DECL "role" |blanchet| NIL)
    (|binit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|cinit_role| CONST-DECL "role" |blanchet| NIL)
    (|cinit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|cresp_role| CONST-DECL "role" |blanchet| NIL)
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|cresp_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/"))
   NIL))
 (|pmap_TCC3| 0
  (|pmap_TCC3-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|create_tag?| CONST-DECL "bool" |adversary| "../skeletons/")
    (|bprot| CONST-DECL "protocol" |blanchet| NIL)
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../skeletons/")
    (|dec_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|dec_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|sep_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|pair_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|hash_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_data| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_text| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|bresp_role| CONST-DECL "role" |blanchet| NIL)
    (|bresp_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|binit_role| CONST-DECL "role" |blanchet| NIL)
    (|binit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|cinit_role| CONST-DECL "role" |blanchet| NIL)
    (|cinit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|cresp_role| CONST-DECL "role" |blanchet| NIL)
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|cresp_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    NIL (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|all_uniq_orig?| CONST-DECL "bool" |roles| "../skeletons/")
    (|all_non_vars_occur?| CONST-DECL "bool" |roles| "../skeletons/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|cprot| CONST-DECL "protocol" |blanchet| NIL))
   NIL))
 (|bmap_TCC1| 0
  (|bmap_TCC1-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|create_tag?| CONST-DECL "bool" |adversary| "../skeletons/")
    (|cprot| CONST-DECL "protocol" |blanchet| NIL)
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../skeletons/")
    (|dec_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|dec_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|sep_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|pair_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|hash_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_data| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_text| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|cresp_role| CONST-DECL "role" |blanchet| NIL)
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|cresp_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|cinit_role| CONST-DECL "role" |blanchet| NIL)
    (|cinit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../skeletons/")
    (|non| CONST-DECL "bool" |strand_spaces| "../skeletons/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../skeletons/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) NIL NIL
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) NIL
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |free_alg|
     "../skeletons/")
    (|sk| ADT-CONSTRUCTOR-DECL "[nat -> (skey?)]" |free_alg| "../skeletons/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../skeletons/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|originates_index?| CONST-DECL "bool" |traces| "../skeletons/")
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../skeletons/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|cprot_assignment| TYPE-EQ-DECL NIL |blanchet| NIL)
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|bmap_TCC2| 0
  (|bmap_TCC2-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|cprot_assignment| TYPE-EQ-DECL NIL |blanchet| NIL)
    (|cprot| CONST-DECL "protocol" |blanchet| NIL)
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|bmap_TCC3| 0
  (|bmap_TCC3-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../skeletons/")
    (|event| TYPE-DECL NIL |traces| "../skeletons/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|create_tag?| CONST-DECL "bool" |adversary| "../skeletons/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../skeletons/")
    (|dec_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|dec_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|enc_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|sep_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|pair_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|hash_role| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_data| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_text| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_skey| CONST-DECL "role" |adversary| "../skeletons/")
    (|create_akey| CONST-DECL "role" |adversary| "../skeletons/")
    (|cresp_role| CONST-DECL "role" |blanchet| NIL)
    (|simple_role| CONST-DECL "role" |roles| "../skeletons/")
    (|cresp_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|cinit_role| CONST-DECL "role" |blanchet| NIL)
    (|cinit_trace| CONST-DECL "role_trace" |blanchet| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../skeletons/")
    (|inst| CONST-DECL "bool" |roles| "../skeletons/")
    (|instance| CONST-DECL "lift[subst]" |traces| "../skeletons/")
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|prec?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../skeletons/")
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|cprot_assignment| TYPE-EQ-DECL NIL |blanchet| NIL)
    (|cprot| CONST-DECL "protocol" |blanchet| NIL)
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|role?| CONST-DECL "bool" |roles| "../skeletons/")
    (|pre_role| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| "../skeletons/")
    (|atom?| CONST-DECL "bool" |free_alg| "../skeletons/")
    (|mesg| TYPE-DECL NIL |free_alg| "../skeletons/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| "../skeletons/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|bundle?| CONST-DECL "bool" |bundles| "../skeletons/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../skeletons/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../skeletons/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|bmap_TCC4| 0
  (|bmap_TCC4-1| NIL 3622974131 ("" (SKOLEM!) (("" (POSTPONE) NIL NIL)) NIL)
   NIL NIL))
 (|bmap_TCC5| 0
  (|bmap_TCC5-1| NIL 3622974131 ("" (SKOLEM!) (("" (POSTPONE) NIL NIL)) NIL)
   NIL NIL))
 (|bmap_TCC6| 0
  (|bmap_TCC6-1| NIL 3622974131 ("" (SKOLEM!) (("" (POSTPONE) NIL NIL)) NIL)
   NIL NIL))
 (|bmap_TCC7| 0
  (|bmap_TCC7-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|bmap_TCC8| 0
  (|bmap_TCC8-1| NIL 3622974131 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|bmap_TCC9| 0
  (|bmap_TCC9-1| NIL 3622974131 ("" (SKOLEM!) (("" (POSTPONE) NIL NIL)) NIL)
   NIL NIL))
 (|bmap_TCC10| 0
  (|bmap_TCC10-1| NIL 3622974131 ("" (SKOLEM!) (("" (POSTPONE) NIL NIL)) NIL)
   NIL NIL)))

