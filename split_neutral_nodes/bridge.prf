(|bridge|
 (|init_extend_observe_bridge| 0
  (|init_extend_observe_bridge-1| NIL 3599404132
   ("" (SKOLEM 1 ("bu" "n" "x" "s"))
    (("" (FLATTEN)
      (("" (TYPEPRED "bu")
        (("" (EXPAND "bundle?")
          (("" (EXPAND "well_formed_next?")
            (("" (FLATTEN)
              (("" (DELETE -1 -2 -3 -4)
                (("" (SKOLEM -1 ("i" "f" "p"))
                  (("" (LEMMA "next_prec_ordered")
                    (("" (INST?)
                      (("" (SMASH)
                        (("" (DELETE -2)
                          (("" (EXPAND "bijective?")
                            (("" (INST-CP -3 "n")
                              (("" (REPLACE -4)
                                (("" (DELETE -4)
                                  (("" (TYPEPRED "p")
                                    (("" (EXPAND "path?")
                                      (("" (FLATTEN)
                                        (("" (INST -2 "f(n)")
                                          (("" (REPLACE -7)
                                            (("" (DELETE -7)
                                              (("" (EXPAND "trans")
                                                (("" (EXPAND "pcr")
                                                  (("" (SMASH)
                                                    (("" (SKOLEM -2 "lb")
                                                      (("" (EXPAND "ob")
                                                        (("" (SMASH)
                                                          (("1"
                                                            (DELETE -1 -3 -4 -6
                                                                    -7 -8 -9 1)
                                                            (("1" (GRIND)
                                                              (("1"
                                                                (REPLACE -1
                                                                         :DIR
                                                                         RL)
                                                                (("1" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (REPLACE -2 :DIR
                                                                     RL)
                                                            (("2" (SMASH)
                                                              (("2"
                                                                (DECOMPOSE-EQUALITY
                                                                 -4)
                                                                (("2"
                                                                  (DECOMPOSE-EQUALITY
                                                                   -1)
                                                                  (("2"
                                                                    (LEMMA
                                                                     "init_extend")
                                                                    (("2"
                                                                      (INST -1
                                                                       "p" "x"
                                                                       "st(p(f(n))`1)"
                                                                       "f(n)")
                                                                      (("2"
                                                                        (SMASH)
                                                                        (("1"
                                                                          (SKOLEM
                                                                           -1
                                                                           "j")
                                                                          (("1"
                                                                            (EXPAND
                                                                             "surjective?")
                                                                            (("1"
                                                                              (INST
                                                                               -8
                                                                               "j")
                                                                              (("1"
                                                                                (SKOLEM
                                                                                 -8
                                                                                 "n0")
                                                                                (("1"
                                                                                  (INST
                                                                                   -10
                                                                                   "n0")
                                                                                  (("1"
                                                                                    (INST
                                                                                     -9
                                                                                     "n0"
                                                                                     "n")
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -2)
                                                                                      (("1"
                                                                                        (INST
                                                                                         2
                                                                                         "n0")
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -10)
                                                                                          (("1"
                                                                                            (REPLACE
                                                                                             -8
                                                                                             :DIR
                                                                                             RL)
                                                                                            (("1"
                                                                                              (SMASH)
                                                                                              (("1"
                                                                                                (TYPEPRED
                                                                                                 "p")
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "path?")
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -1
                                                                                                     "f(n0)")
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -3)
                                                                                                      (("1"
                                                                                                        (REPLACE
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (DELETE
                                                                                                           -2
                                                                                                           -3
                                                                                                           -4
                                                                                                           -5
                                                                                                           -6
                                                                                                           -7
                                                                                                           -8
                                                                                                           -9
                                                                                                           -10
                                                                                                           -11
                                                                                                           -12
                                                                                                           -13)
                                                                                                          (("1"
                                                                                                            (DELETE
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               "ex")
                                                                                                              (("1"
                                                                                                                (EXPAND
                                                                                                                 "trans")
                                                                                                                (("1"
                                                                                                                  (SKOLEM
                                                                                                                   -1
                                                                                                                   "lb1")
                                                                                                                  (("1"
                                                                                                                    (FLATTEN)
                                                                                                                    (("1"
                                                                                                                      (SMASH)
                                                                                                                      (("1"
                                                                                                                        (DECOMPOSE-EQUALITY
                                                                                                                         -3)
                                                                                                                        (("1"
                                                                                                                          (GRIND)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (LEMMA
                                                                                                                         "no_circularity_in_extend")
                                                                                                                        (("2"
                                                                                                                          (DELETE
                                                                                                                           -2
                                                                                                                           -4
                                                                                                                           +)
                                                                                                                          (("2"
                                                                                                                            (INST?)
                                                                                                                            (("2"
                                                                                                                              (SMASH)
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (SMASH)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (REPLACE
                                                                           -1)
                                                                          (("2"
                                                                            (DECOMPOSE-EQUALITY
                                                                             1)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|event| TYPE-DECL NIL |traces| "../neutral_nodes/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../neutral_nodes/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|neutral_node?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|lab_injective| FORMULA-DECL NIL |state| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|snd| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |init_alg|
     "../strand_spaces/")
    (|fst| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |init_alg|
     "../strand_spaces/")
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|state_extend_extensionality| FORMULA-DECL NIL |state| NIL)
    (|j| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (|i| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|ex| CONST-DECL "mesg" |state| NIL) (|lab| CONST-DECL "mesg" |state| NIL)
    (|extend| ADT-CONSTRUCTOR-DECL "[[mesg, state] -> (extend?)]" |state| NIL)
    (|label| TYPE-DECL NIL |state| NIL)
    (|exl?| ADT-RECOGNIZER-DECL "[label -> boolean]" |state| NIL)
    (|obl?| ADT-RECOGNIZER-DECL "[label -> boolean]" |state| NIL)
    (|m| SHARED-ADT-ACCESSOR-DECL "[{x: label | exl?(x) OR obl?(x)} -> mesg]"
     |state| NIL)
    (|no_circularity_in_extend| FORMULA-DECL NIL |state| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|init_extend| FORMULA-DECL NIL |state| NIL)
    (|st| ADT-ACCESSOR-DECL "[(extend?) -> state]" |state| NIL)
    (|m| ADT-ACCESSOR-DECL "[(extend?) -> mesg]" |state| NIL)
    (|extend?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|pr| ADT-CONSTRUCTOR-DECL "[[mesg, mesg] -> (pair?)]" |init_alg|
     "../strand_spaces/")
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|hs| ADT-CONSTRUCTOR-DECL "[mesg -> (hash?)]" |init_alg|
     "../strand_spaces/")
    (|n| ADT-ACCESSOR-DECL "[key -> mesg]" |init_alg| "../strand_spaces/")
    (|key| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|ob| CONST-DECL "mesg" |state| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|path?| CONST-DECL "bool" |paths| "../neutral_nodes/")
    (|path| TYPE-EQ-DECL NIL |paths| "../neutral_nodes/")
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|next_prec_ordered| FORMULA-DECL NIL |bundles| "../neutral_nodes/")
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|bundle?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|trans| CONST-DECL "bool" |state| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|state| TYPE-DECL NIL |state| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|exists_extend_strand| 0
  (|exists_extend_strand-1| NIL 3599417828
   ("" (SKOLEM 1 ("bu" "n" "x"))
    (("" (FLATTEN)
      (("" (TYPEPRED "bu")
        (("" (EXPAND "run?")
          (("" (SKOLEM -2 "pa")
            (("" (TYPEPRED "pa")
              (("" (EXPAND "role_assignment?")
                (("" (INST -1 "n`1")
                  (("" (SKOLEM -1 "ri")
                    (("" (EXPAND "protocol_assignment?")
                      (("" (TYPEPRED "ri")
                        (("" (EXPAND "member")
                          (("" (INST -3 "n`1")
                            (("" (TYPEPRED "n")
                              (("" (CASE "pa(n`1) = extend_role")
                                (("1" (REPLACE -1)
                                  (("1" (DELETE -1 -5 -6)
                                    (("1" (EXPAND "extend_role")
                                      (("1" (SKOLEM!)
                                        (("1" (REPLACE -2)
                                          (("1" (EXPAND "extend_role_item")
                                            (("1" (DELETE -2)
                                              (("1" (INST?)
                                                (("1"
                                                  (CASE-REPLACE "n=(n`1, 1)")
                                                  (("1" (DELETE -1)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL)
                                                   ("2" (DELETE -3 2)
                                                    (("2" (SMASH)
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (DELETE 2 -5)
                                  (("2" (LEMMA "enumerate_protocol_roles")
                                    (("2" (INST?)
                                      (("2" (SMASH)
                                        (("1" (REPLACE -2)
                                          (("1" (DELETE -1 -2 1)
                                            (("1" (EXPAND "boot_role")
                                              (("1" (REPLACE -2)
                                                (("1" (DELETE -2)
                                                  (("1"
                                                    (EXPAND "boot_role_item")
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (REPLACE -2)
                                          (("2" (DELETE -1 -2 1)
                                            (("2" (EXPAND "quote_role")
                                              (("2" (SKOLEM!)
                                                (("2" (REPLACE -2)
                                                  (("2" (DELETE -2)
                                                    (("2"
                                                      (EXPAND
                                                       "quote_role_item")
                                                      (("2" (SMASH)
                                                        (("2" (GRIND)
                                                          (("2"
                                                            (DECOMPOSE-EQUALITY
                                                             -5)
                                                            (("2"
                                                              (DECOMPOSE-EQUALITY
                                                               -1)
                                                              (("1" (SMASH) NIL
                                                                NIL)
                                                               ("2"
                                                                (EXPAND "tag")
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("3"
                                                                (EXPAND "tag")
                                                                (("3" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("3" (DELETE -6 1 -1)
                                          (("3"
                                            (LEMMA "enumerate_adversary_roles")
                                            (("3" (INST?)
                                              (("3" (SMASH)
                                                (("1" (REPLACE -2)
                                                  (("1" (DELETE -1 -2)
                                                    (("1"
                                                      (EXPAND "create_role")
                                                      (("1" (SKOLEM!)
                                                        (("1" (REPLACE -2)
                                                          (("1" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (REPLACE -2)
                                                  (("2" (DELETE -1 -2)
                                                    (("2" (EXPAND "tag_role")
                                                      (("2" (SKOLEM!)
                                                        (("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (REPLACE -2)
                                                  (("3" (DELETE -1 -2)
                                                    (("3" (EXPAND "hash_role")
                                                      (("3" (SKOLEM!)
                                                        (("3" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("4" (REPLACE -2)
                                                  (("4" (DELETE -1 -2)
                                                    (("4" (EXPAND "pair_role")
                                                      (("4" (SKOLEM!)
                                                        (("4" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("5" (REPLACE -2)
                                                  (("5" (DELETE -1 -2)
                                                    (("5" (EXPAND "sep_role")
                                                      (("5" (SKOLEM!)
                                                        (("5" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("6" (REPLACE -2)
                                                  (("6" (DELETE -1 -2)
                                                    (("6" (EXPAND "enc_role")
                                                      (("6" (SKOLEM!)
                                                        (("6" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("7" (REPLACE -2)
                                                  (("7" (DELETE -1 -2)
                                                    (("7" (EXPAND "dec_role")
                                                      (("7" (SKOLEM!)
                                                        (("7" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|role_assignment?| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|role_assignment| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|protocol_assignment?| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|neutral_node?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../neutral_nodes/")
    (|member| CONST-DECL "bool" |sets| NIL)
    (|dec_role| CONST-DECL "bool" |adversary| "../neutral_nodes/")
    (|dec_trace| CONST-DECL "trace" |adversary| "../neutral_nodes/")
    (|invk| CONST-DECL "key" |init_alg| "../strand_spaces/")
    (|enc_role| CONST-DECL "bool" |adversary| "../neutral_nodes/")
    (|enc_trace| CONST-DECL "trace" |adversary| "../neutral_nodes/")
    (|sep_role| CONST-DECL "bool" |adversary| "../neutral_nodes/")
    (|sep_trace| CONST-DECL "trace" |adversary| "../neutral_nodes/")
    (|pair_role| CONST-DECL "bool" |adversary| "../neutral_nodes/")
    (|pair_trace| CONST-DECL "trace" |adversary| "../neutral_nodes/")
    (|hash_role| CONST-DECL "bool" |adversary| "../neutral_nodes/")
    (|hash_trace| CONST-DECL "trace" |adversary| "../neutral_nodes/")
    (|tag_role| CONST-DECL "bool" |adversary| "../neutral_nodes/")
    (|tag_trace| CONST-DECL "trace" |adversary| "../neutral_nodes/")
    (|create_role| CONST-DECL "bool" |adversary| "../neutral_nodes/")
    (|create_trace| CONST-DECL "trace" |adversary| "../neutral_nodes/")
    (|enumerate_adversary_roles| FORMULA-DECL NIL |adversary|
     "../neutral_nodes/")
    (|quote_role| CONST-DECL "bool" |protocol_roles| NIL)
    (|quote_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|ob| CONST-DECL "mesg" |state| NIL)
    (|quote| CONST-DECL "tag" |protocol_roles| NIL)
    (|make_quote| CONST-DECL "mesg" |protocol_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|quote_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|n| SHARED-ADT-ACCESSOR-DECL
     "[{x: mesg | key(x) OR text(x) OR data(x) OR tag(x)} -> nat]" |init_alg|
     "../strand_spaces/")
    (|tag| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|data| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|text| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|key| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|fst| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |init_alg|
     "../strand_spaces/")
    (|pr| ADT-CONSTRUCTOR-DECL "[[mesg, mesg] -> (pair?)]" |init_alg|
     "../strand_spaces/")
    (|tag?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|tg| ADT-CONSTRUCTOR-DECL "[nat -> (tag?)]" |init_alg|
     "../strand_spaces/")
    (|snd| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |init_alg|
     "../strand_spaces/")
    (|boot_role| CONST-DECL "bool" |protocol_roles| NIL)
    (|boot_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|bt| CONST-DECL "mesg" |state| NIL)
    (|boot_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|enumerate_protocol_roles| FORMULA-DECL NIL |protocol_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|extend_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../neutral_nodes/")
    (|lab| CONST-DECL "mesg" |state| NIL) (|ex| CONST-DECL "mesg" |state| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| "../neutral_nodes/")
    (|simple_role_item| CONST-DECL "role_item" |roles| "../neutral_nodes/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|originates_index?| CONST-DECL "bool" |traces| "../neutral_nodes/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|non| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|inst| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|sync_at| CONST-DECL "mesg" |strand_spaces| "../neutral_nodes/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|simple_inst| FORMULA-DECL NIL |roles| "../neutral_nodes/")
    (|extend_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|extend_role| CONST-DECL "bool" |protocol_roles| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../neutral_nodes/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|bundle?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|trans| CONST-DECL "bool" |state| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|state| TYPE-DECL NIL |state| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|init_extend_implies_extend_strand_TCC1| 0
  (|init_extend_implies_extend_strand_TCC1-1| NIL 3599416711
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|extend_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|inst| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|non| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|extend_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|simple_role_item| CONST-DECL "role_item" |roles| "../neutral_nodes/")
    (|state| TYPE-DECL NIL |state| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|ex| CONST-DECL "mesg" |state| NIL) (|ob| CONST-DECL "mesg" |state| NIL)
    (|lab| CONST-DECL "mesg" |state| NIL)
    (|sync_at| CONST-DECL "mesg" |strand_spaces| "../neutral_nodes/")
    (|event_at| CONST-DECL "event" |strand_spaces| "../neutral_nodes/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|prec?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../neutral_nodes/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|neutral_node?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|event| TYPE-DECL NIL |traces| "../neutral_nodes/")
    (|run| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../neutral_nodes/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|bundle?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|init_extend_implies_extend_strand| 0
  (|init_extend_implies_extend_strand-1| NIL 3599416712
   ("" (SKOLEM 1 ("bu" "n" "x" "s"))
    (("" (FLATTEN)
      (("" (LEMMA "init_extend_observe_bridge")
        (("" (INST?)
          (("" (SPLIT)
            (("1" (SKOLEM -1 "n0")
              (("1" (FLATTEN)
                (("1" (DELETE -3)
                  (("1" (LEMMA "exists_extend_strand")
                    (("1" (INST?)
                      (("1" (SPLIT)
                        (("1" (SKOLEM -1 "z")
                          (("1" (FLATTEN)
                            (("1" (REPLACE -2)
                              (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL)
                         ("2" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (PROPAX) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|state| TYPE-DECL NIL |state| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|bundle?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|trace| TYPE-EQ-DECL NIL |traces| "../neutral_nodes/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|role_item| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|role| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|protocol| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|run?| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|event| TYPE-DECL NIL |traces| "../neutral_nodes/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|neutral_node?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|exists_extend_strand| FORMULA-DECL NIL |bridge| NIL)
    (|init_extend_observe_bridge| FORMULA-DECL NIL |bridge| NIL))
   SHOSTAK))
 (|quote_extend_implies_extend_strand_TCC1| 0
  (|quote_extend_implies_extend_strand_TCC1-1| NIL 3599416711
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|extend_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|extend_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|ex| CONST-DECL "mesg" |state| NIL)
    (|quote_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|inst| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|non| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|quote_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|simple_role_item| CONST-DECL "role_item" |roles| "../neutral_nodes/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|state| TYPE-DECL NIL |state| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|quote_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|make_quote| CONST-DECL "mesg" |protocol_roles| NIL)
    (|quote| CONST-DECL "tag" |protocol_roles| NIL)
    (|ob| CONST-DECL "mesg" |state| NIL) (|lab| CONST-DECL "mesg" |state| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../neutral_nodes/")
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|prec?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|neutral_node?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|sync_at| CONST-DECL "mesg" |strand_spaces| "../neutral_nodes/")
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../neutral_nodes/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../neutral_nodes/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|bundle?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|quote_extend_implies_extend_strand_TCC2| 0
  (|quote_extend_implies_extend_strand_TCC2-1| NIL 3599416711
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|extend_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|extend_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|extend_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|doubleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|ex| CONST-DECL "mesg" |state| NIL)
    (|quote_inst| CONST-DECL "bool" |protocol_roles| NIL)
    (|pred| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|inst| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|uniq| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|non| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|originates_at?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|quote_role_item| CONST-DECL "role_item" |protocol_roles| NIL)
    (|simple_role_item| CONST-DECL "role_item" |roles| "../neutral_nodes/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|state| TYPE-DECL NIL |state| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|trans| CONST-DECL "bool" |state| NIL)
    (|quote_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|make_quote| CONST-DECL "mesg" |protocol_roles| NIL)
    (|quote| CONST-DECL "tag" |protocol_roles| NIL)
    (|ob| CONST-DECL "mesg" |state| NIL) (|lab| CONST-DECL "mesg" |state| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../neutral_nodes/")
    (|well_formed_comm?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|prec?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|neutral_node?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|sync_at| CONST-DECL "mesg" |strand_spaces| "../neutral_nodes/")
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|adversary_roles| CONST-DECL "protocol" |adversary| "../neutral_nodes/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../neutral_nodes/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|bundle?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|quote_extend_implies_extend_strand| 0
  (|quote_extend_implies_extend_strand-1| NIL 3599418087
   ("" (SKOLEM 1 ("bu" "z" "x" "s" "nonce" "aik"))
    (("" (FLATTEN)
      (("" (LEMMA "init_extend_implies_extend_strand")
        (("" (INST?)
          (("1" (INST -1 "s")
            (("1" (SPLIT)
              (("1" (PROPAX) NIL NIL)
               ("2" (DELETE 2) (("2" (SMASH) (("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (LEMMA "quote_neutral_node")
            (("2" (INST?) (("2" (SMASH) NIL NIL)) NIL)) NIL)
           ("3" (SMASH) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|neutral_node?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|z| SKOLEM-CONST-DECL "strand[mesg, carried_by?](bu`space)" |bridge| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|bu| SKOLEM-CONST-DECL
     "run[mesg, carried_by?, state, boot?, trans](protocol_roles)" |bridge|
     NIL)
    (|run| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|protocol_roles| CONST-DECL "protocol" |protocol_roles| NIL)
    (|run?| CONST-DECL "bool" |roles| "../neutral_nodes/")
    (|protocol| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|role_item| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| "../neutral_nodes/")
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|bundle?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|trans| CONST-DECL "bool" |state| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|state| TYPE-DECL NIL |state| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../neutral_nodes/")
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| "../neutral_nodes/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|quote_inst_rew| FORMULA-DECL NIL |strands| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| "../neutral_nodes/")
    (|sync_at| CONST-DECL "mesg" |strand_spaces| "../neutral_nodes/")
    (|lab| CONST-DECL "mesg" |state| NIL) (|ob| CONST-DECL "mesg" |state| NIL)
    (|quote| CONST-DECL "tag" |protocol_roles| NIL)
    (|make_quote| CONST-DECL "mesg" |protocol_roles| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|tripleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences|
     "../strand_spaces/")
    (|quote_trace| CONST-DECL "trace" |protocol_roles| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|text?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|text| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|hs| ADT-CONSTRUCTOR-DECL "[mesg -> (hash?)]" |init_alg|
     "../strand_spaces/")
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|pr| ADT-CONSTRUCTOR-DECL "[[mesg, mesg] -> (pair?)]" |init_alg|
     "../strand_spaces/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|akey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|quote_neutral_node| FORMULA-DECL NIL |strands| NIL)
    (|init_extend_implies_extend_strand| FORMULA-DECL NIL |bridge| NIL))
   SHOSTAK))
 (|state_split_bridge| 0
  (|state_split_bridge-1| NIL 3599499337
   ("" (SKOLEM 1 ("bu" "n0" "n1" "x" "x0" "x1" "s"))
    (("" (FLATTEN)
      (("" (TYPEPRED "bu")
        (("" (EXPAND "bundle?")
          (("" (EXPAND "well_formed_next?")
            (("" (FLATTEN)
              (("" (DELETE -1 -2 -3 -4)
                (("" (SKOLEM -1 ("i" "f" "p"))
                  (("" (LEMMA "next_prec_ordered")
                    (("" (INST?)
                      (("" (SMASH)
                        (("" (DELETE -2)
                          (("" (INST-CP -2 "n0" "n1")
                            (("" (INST-CP -4 "n0")
                              (("" (INST-CP -4 "n1")
                                (("" (REPLACE -5)
                                  (("" (REPLACE -6)
                                    (("" (DELETE -5 -6)
                                      (("" (EXPAND "bijective?")
                                        (("" (TYPEPRED "p")
                                          (("" (EXPAND "path?")
                                            (("" (FLATTEN)
                                              (("" (DELETE -1)
                                                ((""
                                                  (CASE "extend?(p(f(n0))`1)")
                                                  (("1"
                                                    (CASE
                                                        "extend?(p(f(n1))`1)")
                                                    (("1" (INST-CP -3 "f(n0)")
                                                      (("1"
                                                        (INST-CP -3 "f(n1)")
                                                        (("1" (REPLACE -12)
                                                          (("1" (REPLACE -13)
                                                            (("1"
                                                              (EXPAND "ob" -4)
                                                              (("1"
                                                                (EXPAND "trans"
                                                                        -4)
                                                                (("1" (SMASH)
                                                                  (("1"
                                                                    (SKOLEM -4
                                                                     "l1")
                                                                    (("1"
                                                                      (SMASH)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "trans"
                                                                         -7)
                                                                        (("1"
                                                                          (SKOLEM
                                                                           -7
                                                                           "l0")
                                                                          (("1"
                                                                            (EXPAND
                                                                             "ob")
                                                                            (("1"
                                                                              (SMASH)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -7
                                                                                 :DIR
                                                                                 RL)
                                                                                (("1"
                                                                                  (SMASH)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "pcr"
                                                                                     -9)
                                                                                    (("1"
                                                                                      (DECOMPOSE-EQUALITY
                                                                                       -9)
                                                                                      (("1"
                                                                                        (DECOMPOSE-EQUALITY
                                                                                         -1)
                                                                                        (("1"
                                                                                          (EXPAND
                                                                                           "pcr"
                                                                                           -2)
                                                                                          (("1"
                                                                                            (SMASH)
                                                                                            (("1"
                                                                                              (DECOMPOSE-EQUALITY
                                                                                               -2)
                                                                                              (("1"
                                                                                                (DECOMPOSE-EQUALITY
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (LEMMA
                                                                                                   "state_split")
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -1
                                                                                                     "p"
                                                                                                     "x"
                                                                                                     "x0"
                                                                                                     "x1"
                                                                                                     "st(st(p(f(n0))`1))"
                                                                                                     "f(n0)"
                                                                                                     "f(n1)")
                                                                                                    (("1"
                                                                                                      (SMASH)
                                                                                                      (("1"
                                                                                                        (SKOLEM
                                                                                                         -1
                                                                                                         ("j0"
                                                                                                          "j1"))
                                                                                                        (("1"
                                                                                                          (FLATTEN)
                                                                                                          (("1"
                                                                                                            (EXPAND
                                                                                                             "surjective?")
                                                                                                            (("1"
                                                                                                              (INST-CP
                                                                                                               -20
                                                                                                               "j0")
                                                                                                              (("1"
                                                                                                                (SKOLEM
                                                                                                                 -21
                                                                                                                 "n2")
                                                                                                                (("1"
                                                                                                                  (REPLACE
                                                                                                                   -21
                                                                                                                   :DIR
                                                                                                                   RL)
                                                                                                                  (("1"
                                                                                                                    (INST
                                                                                                                     -20
                                                                                                                     "j1")
                                                                                                                    (("1"
                                                                                                                      (SKOLEM
                                                                                                                       -20
                                                                                                                       "n3")
                                                                                                                      (("1"
                                                                                                                        (REPLACE
                                                                                                                         -20
                                                                                                                         :DIR
                                                                                                                         RL)
                                                                                                                        (("1"
                                                                                                                          (INST-CP
                                                                                                                           -25
                                                                                                                           "n2")
                                                                                                                          (("1"
                                                                                                                            (INST
                                                                                                                             -25
                                                                                                                             "n3")
                                                                                                                            (("1"
                                                                                                                              (INST-CP
                                                                                                                               -22
                                                                                                                               "n2"
                                                                                                                               "n3")
                                                                                                                              (("1"
                                                                                                                                (INST
                                                                                                                                 -22
                                                                                                                                 "n3"
                                                                                                                                 "n2")
                                                                                                                                (("1"
                                                                                                                                  (INST
                                                                                                                                   3
                                                                                                                                   "n2"
                                                                                                                                   "n3")
                                                                                                                                  (("1"
                                                                                                                                    (REPLACE
                                                                                                                                     -26)
                                                                                                                                    (("1"
                                                                                                                                      (REPLACE
                                                                                                                                       -27)
                                                                                                                                      (("1"
                                                                                                                                        (EXPAND
                                                                                                                                         "ex")
                                                                                                                                        (("1"
                                                                                                                                          (SMASH)
                                                                                                                                          (("1"
                                                                                                                                            (REPLACE
                                                                                                                                             -8)
                                                                                                                                            (("1"
                                                                                                                                              (INST
                                                                                                                                               -13
                                                                                                                                               "f(n3)")
                                                                                                                                              (("1"
                                                                                                                                                (DELETE
                                                                                                                                                 -14
                                                                                                                                                 -15
                                                                                                                                                 -16
                                                                                                                                                 -17
                                                                                                                                                 -18
                                                                                                                                                 -19
                                                                                                                                                 -20)
                                                                                                                                                (("1"
                                                                                                                                                  (DELETE
                                                                                                                                                   -14
                                                                                                                                                   -15
                                                                                                                                                   -16
                                                                                                                                                   -17
                                                                                                                                                   -18
                                                                                                                                                   -19
                                                                                                                                                   -20)
                                                                                                                                                  (("1"
                                                                                                                                                    (DELETE
                                                                                                                                                     -14
                                                                                                                                                     -15
                                                                                                                                                     -16
                                                                                                                                                     -17
                                                                                                                                                     -18
                                                                                                                                                     -19
                                                                                                                                                     -20)
                                                                                                                                                    (("1"
                                                                                                                                                      (REPLACE
                                                                                                                                                       -6)
                                                                                                                                                      (("1"
                                                                                                                                                        (REPLACE
                                                                                                                                                         -7)
                                                                                                                                                        (("1"
                                                                                                                                                          (DELETE
                                                                                                                                                           -1
                                                                                                                                                           -2
                                                                                                                                                           -3
                                                                                                                                                           -4
                                                                                                                                                           -5
                                                                                                                                                           -6
                                                                                                                                                           -7
                                                                                                                                                           -8
                                                                                                                                                           -9
                                                                                                                                                           -10
                                                                                                                                                           -11
                                                                                                                                                           -12
                                                                                                                                                           1
                                                                                                                                                           2
                                                                                                                                                           3
                                                                                                                                                           4)
                                                                                                                                                          (("1"
                                                                                                                                                            (EXPAND
                                                                                                                                                             "trans")
                                                                                                                                                            (("1"
                                                                                                                                                              (SKOLEM!)
                                                                                                                                                              (("1"
                                                                                                                                                                (GRIND)
                                                                                                                                                                (("1"
                                                                                                                                                                  (DECOMPOSE-EQUALITY
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (DECOMPOSE-EQUALITY
                                                                                                                                                                     -3)
                                                                                                                                                                    NIL
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (DELETE
                                                                                                                                                                   -1
                                                                                                                                                                   -3
                                                                                                                                                                   +)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (LEMMA
                                                                                                                                                                     "no_circularity_in_extend")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (INST?)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (SMASH)
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (DELETE
                                                                                                                                             -1
                                                                                                                                             -2
                                                                                                                                             -3
                                                                                                                                             -6
                                                                                                                                             -7
                                                                                                                                             -11
                                                                                                                                             -12)
                                                                                                                                            (("2"
                                                                                                                                              (DELETE
                                                                                                                                               -11
                                                                                                                                               -12
                                                                                                                                               -13
                                                                                                                                               -14
                                                                                                                                               -15
                                                                                                                                               -16
                                                                                                                                               -17
                                                                                                                                               -18
                                                                                                                                               -19
                                                                                                                                               -20)
                                                                                                                                              (("2"
                                                                                                                                                (REPLACE
                                                                                                                                                 -3)
                                                                                                                                                (("2"
                                                                                                                                                  (DELETE
                                                                                                                                                   -3
                                                                                                                                                   -4
                                                                                                                                                   -5
                                                                                                                                                   -7
                                                                                                                                                   -8
                                                                                                                                                   -9
                                                                                                                                                   -10
                                                                                                                                                   -11
                                                                                                                                                   -12
                                                                                                                                                   1
                                                                                                                                                   2
                                                                                                                                                   3
                                                                                                                                                   4)
                                                                                                                                                  (("2"
                                                                                                                                                    (INST
                                                                                                                                                     -3
                                                                                                                                                     "f(n2)")
                                                                                                                                                    (("2"
                                                                                                                                                      (REPLACE
                                                                                                                                                       -1)
                                                                                                                                                      (("2"
                                                                                                                                                        (REPLACE
                                                                                                                                                         -2)
                                                                                                                                                        (("2"
                                                                                                                                                          (DELETE
                                                                                                                                                           -1
                                                                                                                                                           -2)
                                                                                                                                                          (("2"
                                                                                                                                                            (EXPAND
                                                                                                                                                             "trans")
                                                                                                                                                            (("2"
                                                                                                                                                              (SKOLEM!)
                                                                                                                                                              (("2"
                                                                                                                                                                (GRIND)
                                                                                                                                                                (("1"
                                                                                                                                                                  (DECOMPOSE-EQUALITY
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (DECOMPOSE-EQUALITY
                                                                                                                                                                     -3)
                                                                                                                                                                    NIL
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (DELETE
                                                                                                                                                                   -1
                                                                                                                                                                   -3
                                                                                                                                                                   +)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (LEMMA
                                                                                                                                                                     "no_circularity_in_extend")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (INST?)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (SMASH)
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (SMASH)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (SMASH)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (DELETE
                                                                                                         2
                                                                                                         3
                                                                                                         4)
                                                                                                        (("2"
                                                                                                          (REPLACE
                                                                                                           -7
                                                                                                           :DIR
                                                                                                           RL)
                                                                                                          (("2"
                                                                                                            (SMASH)
                                                                                                            (("2"
                                                                                                              (EXPAND
                                                                                                               "pcr"
                                                                                                               -9)
                                                                                                              (("2"
                                                                                                                (DECOMPOSE-EQUALITY
                                                                                                                 -9)
                                                                                                                (("2"
                                                                                                                  (DECOMPOSE-EQUALITY
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (EXPAND
                                                                                                                     "pcr"
                                                                                                                     -2)
                                                                                                                    (("2"
                                                                                                                      (SMASH)
                                                                                                                      (("2"
                                                                                                                        (DECOMPOSE-EQUALITY
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (DECOMPOSE-EQUALITY
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (DECOMPOSE-EQUALITY
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (DECOMPOSE-EQUALITY
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (REPLACE
                                                                                                                                 -2)
                                                                                                                                (("2"
                                                                                                                                  (SMASH)
                                                                                                                                  NIL
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("3"
                                                                                                        (DECOMPOSE-EQUALITY
                                                                                                         1)
                                                                                                        (("3"
                                                                                                          (DECOMPOSE-EQUALITY
                                                                                                           1)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2"
                                                      (DELETE -1 -3 -4 -5 -6 -7
                                                              -8 -9 -11 2 3)
                                                      (("2" (INST?)
                                                        (("2" (GRIND)
                                                          (("1"
                                                            (DELETE -1 -3 -4 1)
                                                            (("1"
                                                              (DECOMPOSE-EQUALITY)
                                                              (("1"
                                                                (DECOMPOSE-EQUALITY)
                                                                (("1" (SMASH)
                                                                  NIL NIL)
                                                                 ("2"
                                                                  (EXPAND
                                                                   "tag")
                                                                  (("2"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("3"
                                                                  (EXPAND
                                                                   "tag")
                                                                  (("3"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (DECOMPOSE-EQUALITY)
                                                            NIL NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (DELETE -2 -3 -4 -5 -6 -7
                                                            -9 -10 2 3)
                                                    (("2" (INST?)
                                                      (("2" (GRIND)
                                                        (("1"
                                                          (DECOMPOSE-EQUALITY)
                                                          (("1"
                                                            (DECOMPOSE-EQUALITY)
                                                            (("1" (SMASH) NIL
                                                              NIL)
                                                             ("2"
                                                              (EXPAND "tag")
                                                              (("2" (PROPAX)
                                                                NIL NIL))
                                                              NIL)
                                                             ("3"
                                                              (EXPAND "tag")
                                                              (("3" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (DECOMPOSE-EQUALITY)
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|event| TYPE-DECL NIL |traces| "../neutral_nodes/")
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| "../neutral_nodes/")
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|neutral_node?| CONST-DECL "bool" |strand_spaces| "../neutral_nodes/")
    (|path| TYPE-EQ-DECL NIL |paths| "../neutral_nodes/")
    (|path?| CONST-DECL "bool" |paths| "../neutral_nodes/")
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|extend?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|key| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|text| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|data| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|tag| ADT-DEF-DECL "boolean" |init_alg| "../strand_spaces/")
    (|n| SHARED-ADT-ACCESSOR-DECL
     "[{x: mesg | key(x) OR text(x) OR data(x) OR tag(x)} -> nat]" |init_alg|
     "../strand_spaces/")
    (|ob| CONST-DECL "mesg" |state| NIL)
    (|lab_injective| FORMULA-DECL NIL |state| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|key| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|n| ADT-ACCESSOR-DECL "[key -> mesg]" |init_alg| "../strand_spaces/")
    (|hs| ADT-CONSTRUCTOR-DECL "[mesg -> (hash?)]" |init_alg|
     "../strand_spaces/")
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|pr| ADT-CONSTRUCTOR-DECL "[[mesg, mesg] -> (pair?)]" |init_alg|
     "../strand_spaces/")
    (|skey| TYPE-EQ-DECL NIL |init_alg| "../strand_spaces/")
    (|m| ADT-ACCESSOR-DECL "[(extend?) -> mesg]" |state| NIL)
    (|st| ADT-ACCESSOR-DECL "[(extend?) -> state]" |state| NIL)
    (|state_split| FORMULA-DECL NIL |state| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|j0| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (|i| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|no_circularity_in_extend| FORMULA-DECL NIL |state| NIL)
    (|m| SHARED-ADT-ACCESSOR-DECL "[{x: label | exl?(x) OR obl?(x)} -> mesg]"
     |state| NIL)
    (|obl?| ADT-RECOGNIZER-DECL "[label -> boolean]" |state| NIL)
    (|exl?| ADT-RECOGNIZER-DECL "[label -> boolean]" |state| NIL)
    (|label| TYPE-DECL NIL |state| NIL)
    (|tg| ADT-CONSTRUCTOR-DECL "[nat -> (tag?)]" |init_alg|
     "../strand_spaces/")
    (|tag?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg|
     "../strand_spaces/")
    (|mesg_pr_extensionality| FORMULA-DECL NIL |init_alg| "../strand_spaces/")
    (|extend| ADT-CONSTRUCTOR-DECL "[[mesg, state] -> (extend?)]" |state| NIL)
    (|lab| CONST-DECL "mesg" |state| NIL) (|ex| CONST-DECL "mesg" |state| NIL)
    (|j1| SKOLEM-CONST-DECL "nat" |bridge| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|pcr_injective| FORMULA-DECL NIL |state| NIL)
    (|state_extend_extensionality| FORMULA-DECL NIL |state| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|fst| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |init_alg|
     "../strand_spaces/")
    (|snd| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |init_alg|
     "../strand_spaces/")
    (|pcr| DEF-DECL "mesg" |state| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|next_prec_ordered| FORMULA-DECL NIL |bundles| "../neutral_nodes/")
    (|well_formed_next?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|bundle?| CONST-DECL "bool" |bundles| "../neutral_nodes/")
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| "../neutral_nodes/")
    (|trans| CONST-DECL "bool" |state| NIL)
    (|boot?| ADT-RECOGNIZER-DECL "[state -> boolean]" |state| NIL)
    (|state| TYPE-DECL NIL |state| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| "../neutral_nodes/")
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK)))

