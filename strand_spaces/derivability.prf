(|derivability|
 (|publish_anno| 0
  (|publish_anno-1| NIL 3592730718
   ("" (SKOLEM 1 ("bu" "ra" "n"))
    (("" (FLATTEN)
      (("" (EXPAND "anno_node?")
        (("" (SKOLEM!)
          (("" (EXPAND "annotations")
            (("" (SKOLEM -2 "ri")
              (("" (FLATTEN)
                (("" (TYPEPRED "ri")
                  (("" (REPLACE -2)
                    (("" (DELETE -2)
                      (("" (EXPAND "publish_role")
                        (("" (SKOLEM!)
                          (("" (REPLACE -1)
                            (("" (DELETE -1)
                              (("" (LEMMA "simple_inst_anno")
                                (("" (INST?) (("" (SMASH) NIL NIL)) NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| NIL)
    (|bundle?| CONST-DECL "bool" |bundles| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |derivability| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (|role_item| TYPE-EQ-DECL NIL |roles| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| NIL)
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| NIL)
    (|role_assignment?| CONST-DECL "bool" |roles| NIL)
    (|role_assignment| TYPE-EQ-DECL NIL |roles| NIL)
    (|event| TYPE-DECL NIL |traces| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences| NIL)
    (|publish_trace| CONST-DECL "trace" |derivability| NIL)
    (|simple_inst| FORMULA-DECL NIL |roles| NIL)
    (|simple_inst_anno| FORMULA-DECL NIL |roles| NIL)
    (|publish_role| CONST-DECL "bool" |derivability| NIL)
    (|annotations| CONST-DECL "bool" |roles| NIL)
    (|anno_node?| CONST-DECL "bool" |roles| NIL))
   SHOSTAK))
 (|bundle_deriv?_TCC1| 0
  (|bundle_deriv?_TCC1-1| NIL 3592731545 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|adversary_roles| CONST-DECL "protocol" |adversary| NIL)
    (|inst| CONST-DECL "bool" |roles| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| NIL)
    (|non| CONST-DECL "bool" |strand_spaces| NIL)
    (|originates_at?| CONST-DECL "bool" |strand_spaces| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|prec?| CONST-DECL "bool" |bundles| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| NIL)
    (|prot| CONST-DECL "protocol" |derivability| NIL)
    (|protocol_assignment?| CONST-DECL "bool" |roles| NIL)
    (|protocol| TYPE-EQ-DECL NIL |roles| NIL)
    (|role_assignment| TYPE-EQ-DECL NIL |roles| NIL)
    (|role_assignment?| CONST-DECL "bool" |roles| NIL)
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| NIL)
    (|role_item| TYPE-EQ-DECL NIL |roles| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |derivability| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| NIL)
    (|bundle?| CONST-DECL "bool" |bundles| NIL)
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|bundle_deriv?_TCC2| 0
  (|bundle_deriv?_TCC2-1| NIL 3592731545 ("" (SUBTYPE-TCC) NIL NIL)
   ((|event_at| CONST-DECL "event" |strand_spaces| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|well_formed_comm?| CONST-DECL "bool" |bundles| NIL)
    (|prec?| CONST-DECL "bool" |bundles| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|acyclic?| CONST-DECL "bool" |bundles| NIL)
    (|unique?| CONST-DECL "bool" |exists1| NIL)
    (|exists1| CONST-DECL "bool" |exists1| NIL)
    (|well_formed_recv?| CONST-DECL "bool" |bundles| NIL)
    (|prefix?| CONST-DECL "bool" |more_finseq| NIL)
    (|originates_at?| CONST-DECL "bool" |strand_spaces| NIL)
    (|non| CONST-DECL "bool" |strand_spaces| NIL)
    (|uniq| CONST-DECL "bool" |strand_spaces| NIL)
    (|inst| CONST-DECL "bool" |roles| NIL)
    (|adversary_roles| CONST-DECL "protocol" |adversary| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| NIL)
    (|prot| CONST-DECL "protocol" |derivability| NIL)
    (|protocol_assignment?| CONST-DECL "bool" |roles| NIL)
    (|protocol| TYPE-EQ-DECL NIL |roles| NIL)
    (|role_assignment| TYPE-EQ-DECL NIL |roles| NIL)
    (|role_assignment?| CONST-DECL "bool" |roles| NIL)
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| NIL)
    (|role_item| TYPE-EQ-DECL NIL |roles| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|annotations| TYPE-EQ-DECL NIL |roles| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|anno| FORMAL-TYPE-DECL NIL |derivability| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| NIL)
    (|bundle?| CONST-DECL "bool" |bundles| NIL)
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|atom| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|atom?| CONST-DECL "bool" |init_alg| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL))
 (|buildable?_TCC1| 0
  (|buildable?_TCC1-1| NIL 3592731545 ("" (TERMINATION-TCC) NIL NIL)
   ((|member| CONST-DECL "bool" |sets| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |init_alg| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|buildable?_TCC2| 0
  (|buildable?_TCC2-1| NIL 3592731545 ("" (TERMINATION-TCC) NIL NIL)
   ((|member| CONST-DECL "bool" |sets| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |init_alg| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|buildable?_TCC3| 0
  (|buildable?_TCC3-1| NIL 3592731545 ("" (TERMINATION-TCC) NIL NIL)
   ((|member| CONST-DECL "bool" |sets| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |init_alg| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|atom| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|atom?| CONST-DECL "bool" |init_alg| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|buildable?_TCC4| 0
  (|buildable?_TCC4-1| NIL 3592731545 ("" (TERMINATION-TCC) NIL NIL)
   ((|member| CONST-DECL "bool" |sets| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |init_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |init_alg| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|buildable?_TCC5| 0
  (|buildable?_TCC5-1| NIL 3592731545 ("" (TERMINATION-TCC) NIL NIL)
   ((|member| CONST-DECL "bool" |sets| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |init_alg| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |init_alg| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|atom| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|atom?| CONST-DECL "bool" |init_alg| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|parts_TCC1| 0
  (|parts_TCC1-1| NIL 3592746885 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |init_alg| NIL)) NIL))
 (|parts_TCC2| 0
  (|parts_TCC2-1| NIL 3592746885 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |init_alg| NIL)) NIL))
 (|parts_TCC3| 0
  (|parts_TCC3-1| NIL 3592746885 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |init_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|parts_TCC4| 0
  (|parts_TCC4-1| NIL 3592746885 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[mesg])" |init_alg| NIL)
    (|key| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|hash?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|skey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|ikey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|akey?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|subterms_TCC1| 0
  (|subterms_TCC1-1| NIL 3592846832 ("" (SUBTYPE-TCC) NIL NIL)
   ((|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL))
   NIL))
 (|subterms_TCC2| 0
  (|subterms_TCC2-1| NIL 3592846832
   ("" (EXPAND "identity?")
    (("" (SKOLEM 1 "x")
      (("" (SMASH)
        (("1" (GRIND)
          (("1" (GRIND)
            (("1" (LEMMA "union_empty[mesg]")
              (("1" (INST -1 "x")
                (("1" (LEMMA "union_commutative[mesg]")
                  (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (GRIND)
          (("2" (LEMMA "union_empty[mesg]") (("2" (INST?) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|restrict| CONST-DECL "R" |restrict| NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|union_empty| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|union_commutative| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|identity?| CONST-DECL "bool" |operator_defs| NIL))
   NIL))
 (|subterms_TCC3| 0
  (|subterms_TCC3-1| NIL 3592846832
   ("" (SPLIT)
    (("1" (LEMMA "union_associative[mesg]")
      (("1" (EXPAND "associative?") (("1" (SMASH) (("1" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL)
     ("2" (LEMMA "union_commutative[mesg]") (("2" (GRIND) NIL NIL)) NIL))
    NIL)
   ((|union_commutative| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|commutative?| CONST-DECL "bool" |operator_defs| NIL)
    (|union_associative| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|associative?| CONST-DECL "bool" |operator_defs| NIL))
   NIL))
 (|subset_subterms| 0
  (|subset_subterms-1| NIL 3592848193
   ("" (SKOLEM 1 "pub")
    (("" (EXPAND "subterms")
      (("" (GRIND)
        (("" (LEMMA "sum_x[mesg, finite_set[mesg], emptyset,union]")
          (("" (INST?)
            (("" (INST?)
              (("" (REPLACE -1)
                (("" (EXPAND "parts" 1 1)
                  (("" (DELETE -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|subterms| CONST-DECL "finite_set[mesg]" |derivability| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|sum_x| FORMULA-DECL NIL |finite_sets_sum| "finite_sets/")
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|remove| CONST-DECL "set" |sets| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|parts| DEF-DECL "finite_set[mesg]" |derivability| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL))
   SHOSTAK))
 (|deriv_sep_termination_TCC1| 0
  (|deriv_sep_termination_TCC1-1| NIL 3592758786 ("" (EXISTENCE-TCC) NIL NIL)
   ((|injective?| CONST-DECL "bool" |functions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|separable?| CONST-DECL "bool" |derivability| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|deriv_sep_termination| 0
  (|deriv_sep_termination-1| NIL 3592847567
   ("" (SKOLEM 1 ("pub" "p"))
    (("" (TYPEPRED "p")
      (("" (EXPAND "pub_card")
        ((""
          (CASE-REPLACE
           "subterms(add(fst(p), add(snd(p), pub)))=subterms(pub)")
          (("1" (DELETE -1)
            (("1" (EXPAND "separable?")
              (("1" (FLATTEN)
                (("1" (LEMMA "card_diff_subset[mesg]")
                  (("1" (INST?)
                    (("1" (SPLIT -1)
                      (("1" (REPLACE -1)
                        (("1" (DELETE -1)
                          (("1" (LEMMA "card_diff_subset[mesg]")
                            (("1" (INST?)
                              (("1" (SPLIT -1)
                                (("1" (REPLACE -1)
                                  (("1" (DELETE -1)
                                    (("1" (LEMMA "card_add[mesg]")
                                      (("1" (INST?)
                                        (("1" (REPLACE -1)
                                          (("1" (DELETE -1)
                                            (("1" (LEMMA "card_add[mesg]")
                                              (("1" (INST?)
                                                (("1" (REPLACE -1)
                                                  (("1" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (LEMMA "subset_subterms")
                                  (("2" (INST?) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (DELETE 2)
                        (("2" (LEMMA "subset_subterms")
                          (("2" (INST?)
                            (("2"
                              (CASE
                                  "member(fst(p), subterms(pub)) and member(snd(p), subterms(pub))")
                              (("1" (FLATTEN)
                                (("1" (DELETE -6)
                                  (("1" (SMASH)
                                    (("1" (EXPAND "member")
                                      (("1" (EXPAND "subset?")
                                        (("1" (SKOLEM 1 "x")
                                          (("1" (INST?)
                                            (("1" (EXPAND "member")
                                              (("1" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (DELETE 2)
                                (("2" (EXPAND "subterms" 1)
                                  (("2" (EXPAND "member")
                                    (("2"
                                      (LEMMA
                                       "sum_x[mesg, finite_set[mesg], emptyset,union]")
                                      (("2" (INST?)
                                        (("2" (INST -1 "p")
                                          (("2" (REPLACE -1)
                                            (("2" (SPLIT 1)
                                              (("1" (EXPAND "parts" 1 1)
                                                (("1" (SMASH)
                                                  (("1" (EXPAND "parts" 1 1)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL)
                                                   ("2" (DELETE -1 -2)
                                                    (("2" (GRIND)
                                                      (("2"
                                                        (EXPAND "parts" 1 1)
                                                        (("2" (SMASH) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (EXPAND "parts" 1 1)
                                                (("2" (EXPAND "parts" 1 2)
                                                  (("2" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (DELETE 2)
            (("2" (EXPAND "subterms")
              (("2" (LEMMA "sum_add[mesg, finite_set[mesg], emptyset,union]")
                (("2" (INST?)
                  (("2" (REPLACE -1)
                    (("2" (DELETE -1)
                      (("2" (SMASH)
                        (("1"
                          (LEMMA
                           "sum_add[mesg, finite_set[mesg], emptyset,union]")
                          (("1" (INST?)
                            (("1" (REPLACE -1)
                              (("1" (DELETE -1)
                                (("1" (SMASH)
                                  (("1" (GRIND) NIL NIL)
                                   ("2"
                                    (CASE-REPLACE
                                     "union(union(sum[mesg,finite_set[mesg], emptyset,union](pub, parts), parts(snd(p))), emptyset)=union(sum[mesg,finite_set[mesg], emptyset,union](pub, parts), parts(snd(p)))")
                                    (("1" (DELETE -1)
                                      (("1"
                                        (CASE-REPLACE "union(sum
                [mesg, finite_set[mesg], emptyset,
                 restrict
                     [[set[mesg], set[mesg]],
                      [finite_set[mesg], finite_set[mesg]], set[mesg]]
                     (union)]
                (pub, parts),
            parts(snd(p)))=union(            parts(snd(p)),sum
                [mesg, finite_set[mesg], emptyset,
                 restrict
                     [[set[mesg], set[mesg]],
                      [finite_set[mesg], finite_set[mesg]], set[mesg]]
                     (union)]
                (pub, parts))")
                                        (("1" (LEMMA "union_subset2[mesg]")
                                          (("1" (INST?)
                                            (("1" (DELETE -2)
                                              (("1" (SMASH)
                                                (("1" (DELETE 2)
                                                  (("1"
                                                    (LEMMA
                                                     "sum_x[mesg, finite_set[mesg], emptyset,
                   restrict
                       [[set[mesg], set[mesg]],
                        [finite_set[mesg], finite_set[mesg]], set[mesg]]
                       (union)]")
                                                    (("1" (INST?)
                                                      (("1" (INST -1 "p")
                                                        (("1"
                                                          (EXPAND "separable?")
                                                          (("1" (REPLACE -1)
                                                            (("1" (DELETE -1)
                                                              (("1"
                                                                (EXPAND "parts"
                                                                        1 2)
                                                                (("1" (SMASH)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "parts" 1
                                                                     3)
                                                                    (("1"
                                                                      (GRIND)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (GRIND) NIL NIL))
                                            NIL))
                                          NIL)
                                         ("2" (LEMMA "union_commutative[mesg]")
                                          (("2" (INST?) (("2" (GRIND) NIL NIL))
                                            NIL))
                                          NIL)
                                         ("3" (GRIND) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (DELETE 3)
                                      (("2" (LEMMA "union_empty[mesg]")
                                        (("2" (INST?) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2"
                          (LEMMA
                           "sum_add[mesg, finite_set[mesg], emptyset,union]")
                          (("2" (INST?)
                            (("2" (REPLACE -1)
                              (("2" (DELETE -1)
                                (("2" (SMASH)
                                  (("1" (LEMMA "union_empty[mesg]")
                                    (("1" (INST?)
                                      (("1" (REPLACE -1)
                                        (("1" (DELETE -1)
                                          (("1"
                                            (CASE-REPLACE
                                             "union(sum[mesg,finite_set[mesg],emptyset,union](pub, parts), parts(fst(p)))=union(parts(fst(p)),sum[mesg,finite_set[mesg],emptyset,union](pub, parts))")
                                            (("1" (DELETE -1)
                                              (("1"
                                                (LEMMA "union_subset2[mesg]")
                                                (("1" (INST?)
                                                  (("1" (SMASH)
                                                    (("1" (DELETE 2)
                                                      (("1"
                                                        (LEMMA
                                                         "sum_x[mesg, finite_set[mesg], emptyset,union]")
                                                        (("1" (INST?)
                                                          (("1" (INST -1 "p")
                                                            (("1" (REPLACE -1)
                                                              (("1" (DELETE -1)
                                                                (("1"
                                                                  (CASE
                                                                      "subset?(parts(fst(p)),parts(p))")
                                                                  (("1" (GRIND)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (DELETE 2)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "parts"
                                                                       1 2)
                                                                      (("2"
                                                                        (GRIND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2"
                                              (LEMMA "union_commutative[mesg]")
                                              (("2" (INST?) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (EXPAND "separable?")
                                    (("2"
                                      (CASE-REPLACE
                                       "union(sum[mesg, finite_set[mesg], emptyset,
            restrict
                [[set[mesg], set[mesg]],
                 [finite_set[mesg], finite_set[mesg]], set[mesg]]
                (union)](pub, parts), parts(snd(p)))=union(parts(snd(p)), sum[mesg, finite_set[mesg], emptyset,
            restrict
                [[set[mesg], set[mesg]],
                 [finite_set[mesg], finite_set[mesg]], set[mesg]]
                (union)](pub, parts))")
                                      (("1" (DELETE -1)
                                        (("1"
                                          (CASE-REPLACE
                                           "union(union(parts(snd(p)),
                  sum
                      [mesg, finite_set[mesg], emptyset,
                       restrict
                           [[set[mesg], set[mesg]],
                            [finite_set[mesg], finite_set[mesg]], set[mesg]]
                           (union)]
                      (pub, parts)),
            parts(fst(p)))=union(parts(fst(p)), union(parts(snd(p)),
                  sum
                      [mesg, finite_set[mesg], emptyset,
                       restrict
                           [[set[mesg], set[mesg]],
                            [finite_set[mesg], finite_set[mesg]], set[mesg]]
                           (union)]
                      (pub, parts))
            )")
                                          (("1" (DELETE -1)
                                            (("1" (LEMMA "union_subset2[mesg]")
                                              (("1"
                                                (INST -1 "parts(snd(p))" "sum
           [mesg, finite_set[mesg], emptyset,
            restrict
                [[set[mesg], set[mesg]],
                 [finite_set[mesg], finite_set[mesg]], set[mesg]]
                (union)]
           (pub, parts)")
                                                (("1" (SMASH)
                                                  (("1" (REPLACE -1)
                                                    (("1" (DELETE -1)
                                                      (("1"
                                                        (LEMMA
                                                         "union_subset2[mesg]")
                                                        (("1" (INST?)
                                                          (("1" (SMASH)
                                                            (("1" (DELETE 2)
                                                              (("1"
                                                                (LEMMA
                                                                 "sum_x[mesg, finite_set[mesg], emptyset,
            restrict
                [[set[mesg], set[mesg]],
                 [finite_set[mesg], finite_set[mesg]], set[mesg]]
                (union)]")
                                                                (("1" (INST?)
                                                                  (("1"
                                                                    (INST -1
                                                                     "p")
                                                                    (("1"
                                                                      (REPLACE
                                                                       -1)
                                                                      (("1"
                                                                        (DELETE
                                                                         -1)
                                                                        (("1"
                                                                          (DELETE
                                                                           2 3)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "parts"
                                                                             1
                                                                             2)
                                                                            (("1"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (GRIND)
                                                    (("2" (DELETE 2 3 4 5)
                                                      (("2"
                                                        (LEMMA
                                                         "sum_x[mesg, finite_set[mesg], emptyset,
            restrict
                [[set[mesg], set[mesg]],
                 [finite_set[mesg], finite_set[mesg]], set[mesg]]
                (union)]")
                                                        (("2" (INST?)
                                                          (("2" (INST -1 "p")
                                                            (("2" (REPLACE -1)
                                                              (("2" (DELETE -1)
                                                                (("2"
                                                                  (EXPAND
                                                                   "parts" 1 1)
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (GRIND) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2"
                                            (LEMMA "union_commutative[mesg]")
                                            (("2" (INST?)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL)
                                           ("3" (GRIND) NIL NIL))
                                          NIL))
                                        NIL)
                                       ("2" (LEMMA "union_commutative[mesg]")
                                        (("2" (INST?) (("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL)
                                       ("3" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|separable?| CONST-DECL "bool" |derivability| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|subterms| CONST-DECL "finite_set[mesg]" |derivability| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|fst| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |init_alg| NIL)
    (|snd| ADT-ACCESSOR-DECL "[(pair?) -> mesg]" |init_alg| NIL)
    (|card_diff_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|subset_subterms| FORMULA-DECL NIL |derivability| NIL)
    (|card_add| FORMULA-DECL NIL |finite_sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|sum_x| FORMULA-DECL NIL |finite_sets_sum| "finite_sets/")
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nonempty_finite_union1| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|remove| CONST-DECL "set" |sets| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|parts| DEF-DECL "finite_set[mesg]" |derivability| NIL)
    (|union_empty| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|union_commutative| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|union_subset2| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| "finite_sets/")
    (|sum_add| FORMULA-DECL NIL |finite_sets_sum| "finite_sets/")
    (|pub_card| CONST-DECL "nat" |derivability| NIL))
   SHOSTAK))
 (|deriv_dec_termination_TCC1| 0
  (|deriv_dec_termination_TCC1-1| NIL 3592846832 ("" (SUBTYPE-TCC) NIL NIL)
   ((|injective?| CONST-DECL "bool" |functions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|decryptable?| CONST-DECL "bool" |derivability| NIL)
    (|atom| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|atom?| CONST-DECL "bool" |init_alg| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|deriv_dec_termination| 0
  (|deriv_dec_termination-1| NIL 3592767114
   ("" (SKOLEM 1 ("pub" "avd" "e"))
    (("" (TYPEPRED "e")
      (("" (EXPAND "decryptable?")
        (("" (FLATTEN)
          (("" (EXPAND "pub_card")
            (("" (LEMMA "card_diff_subset[mesg]")
              (("" (INST?)
                (("" (SPLIT)
                  (("1" (REPLACE -1)
                    (("1" (LEMMA "card_diff_subset[mesg]")
                      (("1" (DELETE -2)
                        (("1" (INST?)
                          (("1" (SPLIT)
                            (("1" (REPLACE -1)
                              (("1" (DELETE -1)
                                (("1" (DELETE -3)
                                  (("1"
                                    (CASE-REPLACE
                                     "subterms(add(plt(e), pub))=subterms(pub)")
                                    (("1" (DELETE -1)
                                      (("1" (SMASH)
                                        (("1" (LEMMA "card_add[mesg]")
                                          (("1" (INST?)
                                            (("1" (REPLACE -1)
                                              (("1" (EXPAND "member")
                                                (("1" (SMASH) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2"
                                      (LEMMA
                                       "sum_add[mesg, finite_set[mesg], emptyset,union]")
                                      (("2" (DELETE 3)
                                        (("2" (EXPAND "subterms")
                                          (("2" (INST?)
                                            (("2" (REPLACE -1)
                                              (("2" (SMASH)
                                                (("2" (DELETE -1)
                                                  (("2"
                                                    (CASE-REPLACE
                                                     "union(sum[mesg,finite_set[mesg],emptyset,union](pub, parts), parts(plt(e)))=union(parts(plt(e)), sum[mesg,finite_set[mesg],emptyset,union](pub, parts))")
                                                    (("1"
                                                      (LEMMA
                                                       "union_subset2[mesg]")
                                                      (("1" (DELETE -2)
                                                        (("1" (INST?)
                                                          (("1" (SPLIT)
                                                            (("1" (PROPAX) NIL
                                                              NIL)
                                                             ("2" (DELETE 2)
                                                              (("2"
                                                                (LEMMA
                                                                 "sum_x[mesg, finite_set[mesg], emptyset,union]")
                                                                (("2" (INST?)
                                                                  (("2"
                                                                    (INST -1
                                                                     "e")
                                                                    (("2"
                                                                      (REPLACE
                                                                       -1)
                                                                      (("2"
                                                                        (CASE
                                                                            "subset?(parts(plt(e)), parts(e))")
                                                                        (("1"
                                                                          (DELETE
                                                                           -2)
                                                                          (("1"
                                                                            (GRIND)
                                                                            NIL
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (DELETE
                                                                           2)
                                                                          (("2"
                                                                            (EXPAND
                                                                             "parts"
                                                                             1
                                                                             2)
                                                                            (("2"
                                                                              (DELETE
                                                                               -1)
                                                                              (("2"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2"
                                                      (LEMMA
                                                       "union_commutative[mesg]")
                                                      (("2" (INST?) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (LEMMA "subset_subterms")
                              (("2" (INST?) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (LEMMA "subset_subterms") (("2" (INST?) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|atom?| CONST-DECL "bool" |init_alg| NIL)
    (|atom| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|decryptable?| CONST-DECL "bool" |derivability| NIL)
    (|card_diff_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|subset_subterms| FORMULA-DECL NIL |derivability| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|sum_add| FORMULA-DECL NIL |finite_sets_sum| "finite_sets/")
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|union_commutative| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|union_subset2| FORMULA-DECL NIL |sets_lemmas| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|remove| CONST-DECL "set" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|sum_x| FORMULA-DECL NIL |finite_sets_sum| "finite_sets/")
    (|sum| DEF-DECL "R" |finite_sets_sum| "finite_sets/")
    (|parts| DEF-DECL "finite_set[mesg]" |derivability| NIL)
    (|card_add| FORMULA-DECL NIL |finite_sets| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|subterms| CONST-DECL "finite_set[mesg]" |derivability| NIL)
    (|plt| ADT-ACCESSOR-DECL "[(enc?) -> mesg]" |init_alg| NIL)
    (|enc?| ADT-RECOGNIZER-DECL "[mesg -> boolean]" |init_alg| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|pub_card| CONST-DECL "nat" |derivability| NIL))
   SHOSTAK))
 (|deriv?_TCC1| 0
  (|deriv?_TCC1-1| NIL 3592746885
   ("" (SKOLEM 1 ("pub" "p"))
    (("" (LEMMA "deriv_sep_termination") (("" (INST?) NIL NIL)) NIL)) NIL)
   ((|deriv_sep_termination| FORMULA-DECL NIL |derivability| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|separable?| CONST-DECL "bool" |derivability| NIL))
   NIL))
 (|deriv?_TCC2| 0
  (|deriv?_TCC2-1| NIL 3592746885
   ("" (SKOLEM 1 ("pub" "v" "avd" "m"))
    (("" (FLATTEN)
      (("" (DELETE 1)
        (("" (SKOLEM 1 "e")
          (("" (LEMMA "deriv_dec_termination") (("" (INST?) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|decryptable?| CONST-DECL "bool" |derivability| NIL)
    (|atom| TYPE-EQ-DECL NIL |init_alg| NIL)
    (|atom?| CONST-DECL "bool" |init_alg| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| NIL)
    (|deriv_dec_termination| FORMULA-DECL NIL |derivability| NIL))
   NIL)))

