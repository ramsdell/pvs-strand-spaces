(|roles|
 (|all_non_vars_occur?_TCC1| 0
  (|all_non_vars_occur?_TCC1-1| NIL 3621337362 ("" (SUBTYPE-TCC) NIL NIL)
   ((|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|all_uniq_orig?_TCC1| 0
  (|all_uniq_orig?_TCC1-1| NIL 3621337362 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|no_assumptions_TCC1| 0
  (|no_assumptions_TCC1-1| NIL 3621337362 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|no_assumptions_TCC2| 0
  (|no_assumptions_TCC2-1| NIL 3621337362 ("" (TERMINATION-TCC) NIL NIL) NIL
   NIL))
 (|no_assumptions_TCC3| 0
  (|no_assumptions_TCC3-1| NIL 3621337362 ("" (SUBTYPE-TCC) NIL NIL)
   ((|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|no_assumptions_length| 0
  (|no_assumptions_length-1| NIL 3621337479
   ("" (INDUCT "n")
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
     ("3" (SKOLEM 1 "j") (("3" (GRIND) NIL NIL)) NIL))
    NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|has_no_assumptions| 0
  (|has_no_assumptions-1| NIL 3621337566
   ("" (INDUCT "n")
    (("1" (SMASH) NIL NIL) ("2" (GRIND) NIL NIL)
     ("3" (SKOLEM 1 "j")
      (("3" (SMASH)
        (("1" (EXPAND "no_assumptions" 1)
          (("1" (SMASH)
            (("1" (DELETE -) (("1" (GRIND) NIL NIL)) NIL)
             ("2" (DELETE 1)
              (("2" (EXPAND "no_assumptions?")
                (("2" (SKOLEM 1 "i")
                  (("2" (TYPEPRED "i")
                    (("2" (INST?) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (GRIND) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|no_assumptions_length| FORMULA-DECL NIL |roles| NIL)
    (|j| SKOLEM-CONST-DECL "nat" |roles| NIL)
    (|i| SKOLEM-CONST-DECL
     "index[setof[atom]](add(emptyset, no_assumptions(j)))" |roles| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|add| CONST-DECL "finseq[T]" |more_finseq| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|seq| TYPE-EQ-DECL NIL |more_finseq| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|singleton_seq| CONST-DECL "nmtfinseq" |nonempty_finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|no_assumptions?| CONST-DECL "bool" |roles| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|has_empty_assumptions_TCC1| 0
  (|has_empty_assumptions_TCC1-1| NIL 3621337362 ("" (SUBTYPE-TCC) NIL NIL)
   ((|no_assumptions_length| FORMULA-DECL NIL |roles| NIL)) NIL))
 (|has_empty_assumptions| 0
  (|has_empty_assumptions-1| NIL 3621338148
   ("" (SKOLEM 1 ("n" "i"))
    (("" (LEMMA "has_no_assumptions")
      (("" (INST?) (("" (EXPAND "no_assumptions?") (("" (INST?) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|has_no_assumptions| FORMULA-DECL NIL |roles| NIL)
    (|no_assumptions?| CONST-DECL "bool" |roles| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|no_rnon_assumptions_TCC1| 0
  (|no_rnon_assumptions_TCC1-1| NIL 3621855325 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL))
 (|no_rnon_assumptions| 0
  (|no_rnon_assumptions-1| NIL 3621855325
   ("" (SKOLEM 1 "r")
    (("" (FLATTEN)
      (("" (EXPAND "all_non_vars_occur?")
        (("" (SKOLEM 1 "i")
          (("" (SKOLEM 1 "x")
            (("" (TYPEPRED "x")
              (("" (DELETE 1)
                (("" (LEMMA "has_empty_assumptions")
                  (("" (TYPEPRED "i")
                    (("" (INST -2 "r`trace`length" "i")
                      (("1" (REPLACE -5)
                        (("1" (DELETE -5) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                       ("2" (GRIND) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences| NIL)
    (|has_empty_assumptions| FORMULA-DECL NIL |roles| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|r| SKOLEM-CONST-DECL "pre_role" |roles| NIL)
    (|i| SKOLEM-CONST-DECL "index[setof[atom]](r`rnon)" |roles| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|no_assumptions_length| FORMULA-DECL NIL |roles| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|all_non_vars_occur?| CONST-DECL "bool" |roles| NIL))
   SHOSTAK))
 (|no_runique_assumptions| 0
  (|no_runique_assumptions-1| NIL 3621855783
   ("" (SKOLEM 1 "r")
    (("" (FLATTEN)
      (("" (EXPAND "all_uniq_orig?")
        (("" (SKOLEM 1 "i")
          (("" (TYPEPRED "i")
            (("" (SKOLEM 1 "x")
              (("" (TYPEPRED "x")
                (("" (DELETE 1)
                  (("" (REPLACE -4)
                    (("" (DELETE -4)
                      (("" (LEMMA "has_empty_assumptions")
                        (("" (INST?)
                          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|r| SKOLEM-CONST-DECL "pre_role" |roles| NIL)
    (|i| SKOLEM-CONST-DECL "index[setof[atom]](r`runique)" |roles| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|no_assumptions_length| FORMULA-DECL NIL |roles| NIL)
    (|has_empty_assumptions| FORMULA-DECL NIL |roles| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|all_uniq_orig?| CONST-DECL "bool" |roles| NIL))
   SHOSTAK))
 (|simple_role_TCC1| 0
  (|simple_role_TCC1-1| NIL 3621337362 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|simple_role_TCC2| 0
  (|simple_role_TCC2-1| NIL 3621337362 ("" (SUBTYPE-TCC) NIL NIL)
   ((|no_assumptions_length| FORMULA-DECL NIL |roles| NIL)) NIL))
 (|simple_role_TCC3| 0
  (|simple_role_TCC3-1| NIL 3621337362
   ("" (SKOLEM 1 "c")
    (("" (EXPAND "role?")
      (("" (SPLIT)
        (("1" (LEMMA "no_rnon_assumptions") (("1" (INST?) NIL NIL)) NIL)
         ("2" (LEMMA "no_runique_assumptions") (("2" (INST?) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|role?| CONST-DECL "bool" |roles| NIL)
    (|no_runique_assumptions| FORMULA-DECL NIL |roles| NIL)
    (|no_rnon_assumptions| FORMULA-DECL NIL |roles| NIL)
    (|no_assumptions_length| FORMULA-DECL NIL |roles| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| NIL)
    (|event| TYPE-DECL NIL |traces| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| NIL)
    (|all_acquired?| CONST-DECL "bool" |roles| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| NIL))
   NIL))
 (|inst_TCC1| 0
  (|inst_TCC1-1| NIL 3621348262 ("" (SUBTYPE-TCC) NIL NIL)
   ((|non| CONST-DECL "bool" |strand_spaces| NIL)
    (|originates_at?| CONST-DECL "bool" |strand_spaces| NIL)
    (|instance| CONST-DECL "lift[subst]" |traces| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|mapping?| CONST-DECL "bool" |free_alg| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|vari| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|vari?| CONST-DECL "bool" |free_alg| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| NIL)
    (|role?| CONST-DECL "bool" |roles| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|simple_inst| 0
  (|simple_inst-1| NIL 3621348293
   ("" (SKOLEM 1 ("ss" "z" "c"))
    (("" (SMASH)
      (("1" (EXPAND "inst")
        (("1" (FLATTEN)
          (("1" (SMASH)
            (("1" (EXPAND "simple_role") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL)
       ("2" (GRIND) NIL NIL)
       ("3" (EXPAND "simple_role")
        (("3" (EXPAND "inst")
          (("3" (SMASH)
            (("1" (SKOLEM 1 "j")
              (("1" (SKOLEM 1 "m")
                (("1" (DELETE 1)
                  (("1" (TYPEPRED "m")
                    (("1" (LEMMA "has_empty_assumptions")
                      (("1" (INST?) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SKOLEM 1 "j")
              (("2" (SKOLEM 1 "m")
                (("2" (DELETE 1)
                  (("2" (TYPEPRED "m")
                    (("2" (LEMMA "has_empty_assumptions")
                      (("2" (INST?) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|simple_role| CONST-DECL "role" |roles| NIL)
    (|inst| CONST-DECL "bool" |roles| NIL)
    (|instance| CONST-DECL "lift[subst]" |traces| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|has_empty_assumptions| FORMULA-DECL NIL |roles| NIL)
    (|instance_at| DEF-DECL "lift[subst]" |traces| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| NIL)
    (|all_acquired?| CONST-DECL "bool" |roles| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| NIL)
    (|event| TYPE-DECL NIL |traces| NIL)
    (|no_assumptions| DEF-DECL "assumptions" |roles| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|htin_TCC1| 0
  (|htin_TCC1-1| NIL 3621852740 ("" (SUBTYPE-TCC) NIL NIL)
   ((|inst| CONST-DECL "bool" |roles| NIL)
    (|instance| CONST-DECL "lift[subst]" |traces| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|role| TYPE-EQ-DECL NIL |roles| NIL)
    (|role?| CONST-DECL "bool" |roles| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|trace| TYPE-EQ-DECL NIL |traces| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|event| TYPE-DECL NIL |traces| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|bundles_with_assignments_are_runs| 0
  (|bundles_with_assignments_are_runs-1| NIL 3621349555
   ("" (SKOLEM 1 ("p" "b" "pa"))
    (("" (EXPAND "run?") (("" (INST?) NIL NIL)) NIL)) NIL)
   ((|run?| CONST-DECL "bool" |roles| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| NIL)
    (|bundle?| CONST-DECL "bool" |bundles| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| NIL)
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|role_trace| TYPE-EQ-DECL NIL |roles| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|mesg| TYPE-DECL NIL |free_alg| NIL)
    (|atom?| CONST-DECL "bool" |free_alg| NIL)
    (|atom| TYPE-EQ-DECL NIL |free_alg| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|assumptions| TYPE-EQ-DECL NIL |roles| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pre_role| TYPE-EQ-DECL NIL |roles| NIL)
    (|role?| CONST-DECL "bool" |roles| NIL)
    (|role| TYPE-EQ-DECL NIL |roles| NIL)
    (|pre_role_assignment| TYPE-EQ-DECL NIL |roles| NIL)
    (|role_assignment?| CONST-DECL "bool" |roles| NIL)
    (|role_assignment| TYPE-EQ-DECL NIL |roles| NIL)
    (|protocol| TYPE-EQ-DECL NIL |roles| NIL)
    (|protocol_assignment?| CONST-DECL "bool" |roles| NIL)
    (|protocol_assignment| TYPE-EQ-DECL NIL |roles| NIL))
   SHOSTAK))
 (|no_message_vars| 0
  (|no_message_vars-1| NIL 3622024584
   ("" (SKOLEM 1 ("p" "b" "x"))
    (("" (TYPEPRED "x")
      (("" (EXPAND "svars")
        (("" (SKOLEM -2 "s")
          (("" (EXPAND "param?")
            (("" (SKOLEM -2 "i")
              (("" (NAME "n" "(s, i)")
                (("" (DECOMPOSE-EQUALITY -1)
                  (("" (REPLACE -1)
                    (("" (REPLACE -2)
                      (("" (DELETE -1 -2)
                        ((""
                          (CASE
                              "forall(n: node(b`space)): not subterm(x, t(finseq_appl[event](finseq_appl[trace](b`space)(n`1))(n`2)))")
                          (("1" (INST?) (("1" (SMASH) NIL NIL)) NIL)
                           ("2" (DELETE -2)
                            (("2"
                              (MEASURE-INDUCT+
                               "left_card[node(b`space), prec?(b)](n)" "n")
                              (("2"
                                (CASE
                                    "send?(finseq_appl[event](finseq_appl[trace](b`space)(x!1`1))(x!1`2))")
                                (("1" (DELETE -4)
                                  (("1" (TYPEPRED "b")
                                    (("1" (EXPAND "run?")
                                      (("1" (SKOLEM -2 "pa")
                                        (("1" (TYPEPRED "pa")
                                          (("1" (EXPAND "role_assignment?")
                                            (("1" (INST?)
                                              (("1" (EXPAND "inst")
                                                (("1" (SMASH)
                                                  (("1" (DELETE -2 -3)
                                                    (("1"
                                                      (LEMMA
                                                       "instance_orients")
                                                      (("1" (INST?)
                                                        (("1" (SMASH)
                                                          (("1" (INST?)
                                                            (("1" (SMASH)
                                                              (("1"
                                                                (LEMMA
                                                                 "instance_instantiates_alt")
                                                                (("1" (INST?)
                                                                  (("1" (SMASH)
                                                                    (("1"
                                                                      (CASE
                                                                          "instantiate(pa(x!1`1)`trace,
                  length(finseq_appl[trace](b`space)(x!1`1)),
                  down(instance(pa(x!1`1)`trace,
                                finseq_appl[trace](b`space)(x!1`1))))(x!1`2)
       = finseq_appl[trace](b`space)(x!1`1)(x!1`2)")
                                                                      (("1"
                                                                        (EXPAND
                                                                         "finseq_appl"
                                                                         -1 1)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "instantiate"
                                                                           -1)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "subst_evt")
                                                                            (("1"
                                                                              (DECOMPOSE-EQUALITY
                                                                               -1)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "mvar_subst")
                                                                                (("1"
                                                                                  (INST?)
                                                                                  (("1"
                                                                                    (INST
                                                                                     -1
                                                                                     "x")
                                                                                    (("1"
                                                                                      (SMASH)
                                                                                      (("1"
                                                                                        (SKOLEM
                                                                                         -1
                                                                                         "w")
                                                                                        (("1"
                                                                                          (TYPEPRED
                                                                                           "w")
                                                                                          (("1"
                                                                                            (TYPEPRED
                                                                                             "pa(x!1`1)`trace")
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "all_acquired?")
                                                                                              (("1"
                                                                                                (INST
                                                                                                 -2
                                                                                                 "w")
                                                                                                (("1"
                                                                                                  (SMASH)
                                                                                                  (("1"
                                                                                                    (SKOLEM
                                                                                                     -3
                                                                                                     "j")
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "acquired_index?")
                                                                                                      (("1"
                                                                                                        (SMASH)
                                                                                                        (("1"
                                                                                                          (CASE
                                                                                                              "j<x!1`2")
                                                                                                          (("1"
                                                                                                            (INST
                                                                                                             -15
                                                                                                             "(x!1`1,j)")
                                                                                                            (("1"
                                                                                                              (SMASH)
                                                                                                              (("1"
                                                                                                                (DELETE
                                                                                                                 -1
                                                                                                                 -2
                                                                                                                 -3
                                                                                                                 -4
                                                                                                                 -6
                                                                                                                 -7
                                                                                                                 -8
                                                                                                                 -9
                                                                                                                 -10
                                                                                                                 -11
                                                                                                                 -12
                                                                                                                 -13
                                                                                                                 14
                                                                                                                 -15
                                                                                                                 -16
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (POSTPONE)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (LEMMA
                                                                                                                 "prec_increases")
                                                                                                                (("2"
                                                                                                                  (INST?)
                                                                                                                  (("2"
                                                                                                                    (SMASH)
                                                                                                                    (("2"
                                                                                                                      (DELETE
                                                                                                                       2
                                                                                                                       3)
                                                                                                                      (("2"
                                                                                                                        (LEMMA
                                                                                                                         "strand_succession_prec")
                                                                                                                        (("2"
                                                                                                                          (INST?)
                                                                                                                          (("2"
                                                                                                                            (SMASH)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (TYPEPRED
                                                                                                               "x!1`2")
                                                                                                              (("2"
                                                                                                                (SMASH)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (INST
                                                                                                             -5
                                                                                                             "x!1`2")
                                                                                                            (("2"
                                                                                                              (CASE-REPLACE
                                                                                                               "j=x!1`2")
                                                                                                              (("2"
                                                                                                                (GRIND)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (GRIND)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (SMASH)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (TYPEPRED "b")
                                  (("2" (EXPAND "bundle?")
                                    (("2" (EXPAND "well_formed_recv?")
                                      (("2" (FLATTEN)
                                        (("2" (INST?)
                                          (("2" (EXPAND "event_at")
                                            (("2" (SMASH)
                                              (("2" (EXPAND "exists1")
                                                (("2" (FLATTEN)
                                                  (("2" (SKOLEM -4 "z")
                                                    (("2" (INST -7 "z")
                                                      (("2" (SMASH)
                                                        (("1"
                                                          (EXPAND
                                                           "well_formed_comm?")
                                                          (("1" (INST?)
                                                            (("1" (SMASH)
                                                              (("1"
                                                                (EXPAND
                                                                 "event_at")
                                                                (("1" (SMASH)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (LEMMA "comm_prec")
                                                          (("2" (INST?)
                                                            (("2" (SMASH)
                                                              (("2"
                                                                (LEMMA
                                                                 "prec_increases")
                                                                (("2" (INST?)
                                                                  (("2" (SMASH)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

