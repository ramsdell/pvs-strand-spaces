(|award_card|
 (|new_TCC1| 0
  (|new_TCC1-1| NIL 3582555384 ("" (SUBTYPE-TCC) NIL NIL)
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL))
 (|prefix_new| 0
  (|prefix_new-1| NIL 3582497095
   ("" (SKOLEM 1 ("p" "i" "k"))
    (("" (NAME "n" "k-i-1")
      (("" (CASE-REPLACE "k=n+i+1")
        (("1" (DELETE -1 -2)
          (("1" (GENERALIZE "n" "n" "nat")
            (("1" (SMASH) NIL NIL)
             ("2" (TYPEPRED "p")
              (("2" (EXPAND "path?")
                (("2" (INDUCT "n")
                  (("1" (INST -1 "i")
                    (("1" (EXPAND "trans")
                      (("1" (SMASH)
                        (("1" (INST 2 "1+i") (("1" (SMASH) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SKOLEM 1 "q")
                    (("2" (INST -1 "q+i+1")
                      (("2" (EXPAND "trans")
                        (("2" (SMASH)
                          (("1" (INST 2 "2+i+q") (("1" (GRIND) NIL NIL)) NIL)
                           ("2" (SKOLEM -1 "j")
                            (("2" (INST 2 "j") (("2" (GRIND) NIL NIL)) NIL))
                            NIL)
                           ("3" (SKOLEM -1 "j")
                            (("3" (INST 2 "j") (("3" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SMASH) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|path| TYPE-EQ-DECL NIL |paths| "../state_spaces/")
    (|path?| CONST-DECL "bool" |paths| "../state_spaces/")
    (|trans| CONST-DECL "bool" |award_card| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |award_card| NIL)
    (|boxes| FORMAL-CONST-DECL "nat" |award_card| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|n| SKOLEM-CONST-DECL "int" |award_card| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL))
   SHOSTAK)))

