(|compatibility|
 (|init_card_TCC1| 0
  (|init_card_TCC1-1| NIL 3619343631
   ("" (SKOLEM 1 "b")
    (("" (LEMMA "finite_subset[node[mesg, carried_by?](b`space)]")
      (("" (INST?)
        (("" (INST -1 "{n: node(b`space)|true}")
          (("1" (GRIND) NIL NIL)
           ("2" (DELETE 2)
            (("2" (LEMMA "finite_node_type")
              (("2" (INST -1 "b`space") (("2" (GRIND) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|mesg| TYPE-DECL NIL |init_alg| "../strand_spaces/")
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|carried_by?| DEF-DECL "bool" |init_alg| "../strand_spaces/")
    (|strand| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|strand_space| TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|node| NONEMPTY-TYPE-EQ-DECL NIL |strand_spaces| NIL)
    (|pre_bundle| TYPE-EQ-DECL NIL |bundles| NIL)
    (|bundle?| CONST-DECL "bool" |bundles| NIL)
    (|bundle| TYPE-EQ-DECL NIL |bundles| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|event| TYPE-DECL NIL |traces| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL) (|trace| TYPE-EQ-DECL NIL |traces| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|index| NONEMPTY-TYPE-EQ-DECL NIL |nonempty_finite_sequences|
     "../strand_spaces/")
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|b| SKOLEM-CONST-DECL "bundle[mesg, carried_by?]" |compatibility| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|event_at| CONST-DECL "event" |strand_spaces| NIL)
    (|finite_node_type| FORMULA-DECL NIL |strand_spaces| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|is_finite_type| CONST-DECL "bool" |finite_sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|init_node?| CONST-DECL "bool" |strand_spaces| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL))
   NIL)))

